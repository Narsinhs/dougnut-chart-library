{"ast":null,"code":"/*!\r\n * Chart.js v3.5.1\r\n * https://www.chartjs.org\r\n * (c) 2021 Chart.js Contributors\r\n * Released under the MIT License\r\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Chart = factory());\n})(this, function () {\n  'use strict';\n\n  function fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n  }\n\n  const requestAnimFrame = function () {\n    if (typeof window === 'undefined') {\n      return function (callback) {\n        return callback();\n      };\n    }\n\n    return window.requestAnimationFrame;\n  }();\n\n  function throttled(fn, thisArg, updateFn) {\n    const updateArgs = updateFn || (args => Array.prototype.slice.call(args));\n\n    let ticking = false;\n    let args = [];\n    return function (...rest) {\n      args = updateArgs(rest);\n\n      if (!ticking) {\n        ticking = true;\n        requestAnimFrame.call(window, () => {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function debounce(fn, delay) {\n    let timeout;\n    return function (...args) {\n      if (delay) {\n        clearTimeout(timeout);\n        timeout = setTimeout(fn, delay, args);\n      } else {\n        fn.apply(this, args);\n      }\n\n      return delay;\n    };\n  }\n\n  const _toLeftRightCenter = align => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n  const _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n  const _textX = (align, left, right, rtl) => {\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n  };\n\n  class Animator {\n    constructor() {\n      this._request = null;\n      this._charts = new Map();\n      this._running = false;\n      this._lastDate = undefined;\n    }\n\n    _notify(chart, anims, date, type) {\n      const callbacks = anims.listeners[type];\n      const numSteps = anims.duration;\n      callbacks.forEach(fn => fn({\n        chart,\n        initial: anims.initial,\n        numSteps,\n        currentStep: Math.min(date - anims.start, numSteps)\n      }));\n    }\n\n    _refresh() {\n      if (this._request) {\n        return;\n      }\n\n      this._running = true;\n      this._request = requestAnimFrame.call(window, () => {\n        this._update();\n\n        this._request = null;\n\n        if (this._running) {\n          this._refresh();\n        }\n      });\n    }\n\n    _update(date = Date.now()) {\n      let remaining = 0;\n\n      this._charts.forEach((anims, chart) => {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n\n        const items = anims.items;\n        let i = items.length - 1;\n        let draw = false;\n        let item;\n\n        for (; i >= 0; --i) {\n          item = items[i];\n\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n\n        if (draw) {\n          chart.draw();\n\n          this._notify(chart, anims, date, 'progress');\n        }\n\n        if (!items.length) {\n          anims.running = false;\n\n          this._notify(chart, anims, date, 'complete');\n\n          anims.initial = false;\n        }\n\n        remaining += items.length;\n      });\n\n      this._lastDate = date;\n\n      if (remaining === 0) {\n        this._running = false;\n      }\n    }\n\n    _getAnims(chart) {\n      const charts = this._charts;\n      let anims = charts.get(chart);\n\n      if (!anims) {\n        anims = {\n          running: false,\n          initial: true,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n\n      return anims;\n    }\n\n    listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n\n    add(chart, items) {\n      if (!items || !items.length) {\n        return;\n      }\n\n      this._getAnims(chart).items.push(...items);\n    }\n\n    has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n\n    start(chart) {\n      const anims = this._charts.get(chart);\n\n      if (!anims) {\n        return;\n      }\n\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n\n      this._refresh();\n    }\n\n    running(chart) {\n      if (!this._running) {\n        return false;\n      }\n\n      const anims = this._charts.get(chart);\n\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n\n      return true;\n    }\n\n    stop(chart) {\n      const anims = this._charts.get(chart);\n\n      if (!anims || !anims.items.length) {\n        return;\n      }\n\n      const items = anims.items;\n      let i = items.length - 1;\n\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n\n      anims.items = [];\n\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n\n    remove(chart) {\n      return this._charts.delete(chart);\n    }\n\n  }\n\n  var animator = new Animator();\n  /*!\r\n   * @kurkle/color v0.1.9\r\n   * https://github.com/kurkle/color#readme\r\n   * (c) 2020 Jukka Kurkela\r\n   * Released under the MIT License\r\n   */\n\n  const map$1 = {\n    0: 0,\n    1: 1,\n    2: 2,\n    3: 3,\n    4: 4,\n    5: 5,\n    6: 6,\n    7: 7,\n    8: 8,\n    9: 9,\n    A: 10,\n    B: 11,\n    C: 12,\n    D: 13,\n    E: 14,\n    F: 15,\n    a: 10,\n    b: 11,\n    c: 12,\n    d: 13,\n    e: 14,\n    f: 15\n  };\n  const hex = '0123456789ABCDEF';\n\n  const h1 = b => hex[b & 0xF];\n\n  const h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\n\n  const eq = b => (b & 0xF0) >> 4 === (b & 0xF);\n\n  function isShort(v) {\n    return eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n  }\n\n  function hexParse(str) {\n    var len = str.length;\n    var ret;\n\n    if (str[0] === '#') {\n      if (len === 4 || len === 5) {\n        ret = {\n          r: 255 & map$1[str[1]] * 17,\n          g: 255 & map$1[str[2]] * 17,\n          b: 255 & map$1[str[3]] * 17,\n          a: len === 5 ? map$1[str[4]] * 17 : 255\n        };\n      } else if (len === 7 || len === 9) {\n        ret = {\n          r: map$1[str[1]] << 4 | map$1[str[2]],\n          g: map$1[str[3]] << 4 | map$1[str[4]],\n          b: map$1[str[5]] << 4 | map$1[str[6]],\n          a: len === 9 ? map$1[str[7]] << 4 | map$1[str[8]] : 255\n        };\n      }\n    }\n\n    return ret;\n  }\n\n  function hexString(v) {\n    var f = isShort(v) ? h1 : h2;\n    return v ? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '') : v;\n  }\n\n  function round(v) {\n    return v + 0.5 | 0;\n  }\n\n  const lim = (v, l, h) => Math.max(Math.min(v, h), l);\n\n  function p2b(v) {\n    return lim(round(v * 2.55), 0, 255);\n  }\n\n  function n2b(v) {\n    return lim(round(v * 255), 0, 255);\n  }\n\n  function b2n(v) {\n    return lim(round(v / 2.55) / 100, 0, 1);\n  }\n\n  function n2p(v) {\n    return lim(round(v * 100), 0, 100);\n  }\n\n  const RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\n\n  function rgbParse(str) {\n    const m = RGB_RE.exec(str);\n    let a = 255;\n    let r, g, b;\n\n    if (!m) {\n      return;\n    }\n\n    if (m[7] !== r) {\n      const v = +m[7];\n      a = 255 & (m[8] ? p2b(v) : v * 255);\n    }\n\n    r = +m[1];\n    g = +m[3];\n    b = +m[5];\n    r = 255 & (m[2] ? p2b(r) : r);\n    g = 255 & (m[4] ? p2b(g) : g);\n    b = 255 & (m[6] ? p2b(b) : b);\n    return {\n      r: r,\n      g: g,\n      b: b,\n      a: a\n    };\n  }\n\n  function rgbString(v) {\n    return v && (v.a < 255 ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})` : `rgb(${v.r}, ${v.g}, ${v.b})`);\n  }\n\n  const HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\n\n  function hsl2rgbn(h, s, l) {\n    const a = s * Math.min(l, 1 - l);\n\n    const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\n    return [f(0), f(8), f(4)];\n  }\n\n  function hsv2rgbn(h, s, v) {\n    const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\n    return [f(5), f(3), f(1)];\n  }\n\n  function hwb2rgbn(h, w, b) {\n    const rgb = hsl2rgbn(h, 1, 0.5);\n    let i;\n\n    if (w + b > 1) {\n      i = 1 / (w + b);\n      w *= i;\n      b *= i;\n    }\n\n    for (i = 0; i < 3; i++) {\n      rgb[i] *= 1 - w - b;\n      rgb[i] += w;\n    }\n\n    return rgb;\n  }\n\n  function rgb2hsl(v) {\n    const range = 255;\n    const r = v.r / range;\n    const g = v.g / range;\n    const b = v.b / range;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    const l = (max + min) / 2;\n    let h, s, d;\n\n    if (max !== min) {\n      d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      h = max === r ? (g - b) / d + (g < b ? 6 : 0) : max === g ? (b - r) / d + 2 : (r - g) / d + 4;\n      h = h * 60 + 0.5;\n    }\n\n    return [h | 0, s || 0, l];\n  }\n\n  function calln(f, a, b, c) {\n    return (Array.isArray(a) ? f(a[0], a[1], a[2]) : f(a, b, c)).map(n2b);\n  }\n\n  function hsl2rgb(h, s, l) {\n    return calln(hsl2rgbn, h, s, l);\n  }\n\n  function hwb2rgb(h, w, b) {\n    return calln(hwb2rgbn, h, w, b);\n  }\n\n  function hsv2rgb(h, s, v) {\n    return calln(hsv2rgbn, h, s, v);\n  }\n\n  function hue(h) {\n    return (h % 360 + 360) % 360;\n  }\n\n  function hueParse(str) {\n    const m = HUE_RE.exec(str);\n    let a = 255;\n    let v;\n\n    if (!m) {\n      return;\n    }\n\n    if (m[5] !== v) {\n      a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n    }\n\n    const h = hue(+m[2]);\n    const p1 = +m[3] / 100;\n    const p2 = +m[4] / 100;\n\n    if (m[1] === 'hwb') {\n      v = hwb2rgb(h, p1, p2);\n    } else if (m[1] === 'hsv') {\n      v = hsv2rgb(h, p1, p2);\n    } else {\n      v = hsl2rgb(h, p1, p2);\n    }\n\n    return {\n      r: v[0],\n      g: v[1],\n      b: v[2],\n      a: a\n    };\n  }\n\n  function rotate(v, deg) {\n    var h = rgb2hsl(v);\n    h[0] = hue(h[0] + deg);\n    h = hsl2rgb(h);\n    v.r = h[0];\n    v.g = h[1];\n    v.b = h[2];\n  }\n\n  function hslString(v) {\n    if (!v) {\n      return;\n    }\n\n    const a = rgb2hsl(v);\n    const h = a[0];\n    const s = n2p(a[1]);\n    const l = n2p(a[2]);\n    return v.a < 255 ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})` : `hsl(${h}, ${s}%, ${l}%)`;\n  }\n\n  const map$1$1 = {\n    x: 'dark',\n    Z: 'light',\n    Y: 're',\n    X: 'blu',\n    W: 'gr',\n    V: 'medium',\n    U: 'slate',\n    A: 'ee',\n    T: 'ol',\n    S: 'or',\n    B: 'ra',\n    C: 'lateg',\n    D: 'ights',\n    R: 'in',\n    Q: 'turquois',\n    E: 'hi',\n    P: 'ro',\n    O: 'al',\n    N: 'le',\n    M: 'de',\n    L: 'yello',\n    F: 'en',\n    K: 'ch',\n    G: 'arks',\n    H: 'ea',\n    I: 'ightg',\n    J: 'wh'\n  };\n  const names = {\n    OiceXe: 'f0f8ff',\n    antiquewEte: 'faebd7',\n    aqua: 'ffff',\n    aquamarRe: '7fffd4',\n    azuY: 'f0ffff',\n    beige: 'f5f5dc',\n    bisque: 'ffe4c4',\n    black: '0',\n    blanKedOmond: 'ffebcd',\n    Xe: 'ff',\n    XeviTet: '8a2be2',\n    bPwn: 'a52a2a',\n    burlywood: 'deb887',\n    caMtXe: '5f9ea0',\n    KartYuse: '7fff00',\n    KocTate: 'd2691e',\n    cSO: 'ff7f50',\n    cSnflowerXe: '6495ed',\n    cSnsilk: 'fff8dc',\n    crimson: 'dc143c',\n    cyan: 'ffff',\n    xXe: '8b',\n    xcyan: '8b8b',\n    xgTMnPd: 'b8860b',\n    xWay: 'a9a9a9',\n    xgYF: '6400',\n    xgYy: 'a9a9a9',\n    xkhaki: 'bdb76b',\n    xmagFta: '8b008b',\n    xTivegYF: '556b2f',\n    xSange: 'ff8c00',\n    xScEd: '9932cc',\n    xYd: '8b0000',\n    xsOmon: 'e9967a',\n    xsHgYF: '8fbc8f',\n    xUXe: '483d8b',\n    xUWay: '2f4f4f',\n    xUgYy: '2f4f4f',\n    xQe: 'ced1',\n    xviTet: '9400d3',\n    dAppRk: 'ff1493',\n    dApskyXe: 'bfff',\n    dimWay: '696969',\n    dimgYy: '696969',\n    dodgerXe: '1e90ff',\n    fiYbrick: 'b22222',\n    flSOwEte: 'fffaf0',\n    foYstWAn: '228b22',\n    fuKsia: 'ff00ff',\n    gaRsbSo: 'dcdcdc',\n    ghostwEte: 'f8f8ff',\n    gTd: 'ffd700',\n    gTMnPd: 'daa520',\n    Way: '808080',\n    gYF: '8000',\n    gYFLw: 'adff2f',\n    gYy: '808080',\n    honeyMw: 'f0fff0',\n    hotpRk: 'ff69b4',\n    RdianYd: 'cd5c5c',\n    Rdigo: '4b0082',\n    ivSy: 'fffff0',\n    khaki: 'f0e68c',\n    lavFMr: 'e6e6fa',\n    lavFMrXsh: 'fff0f5',\n    lawngYF: '7cfc00',\n    NmoncEffon: 'fffacd',\n    ZXe: 'add8e6',\n    ZcSO: 'f08080',\n    Zcyan: 'e0ffff',\n    ZgTMnPdLw: 'fafad2',\n    ZWay: 'd3d3d3',\n    ZgYF: '90ee90',\n    ZgYy: 'd3d3d3',\n    ZpRk: 'ffb6c1',\n    ZsOmon: 'ffa07a',\n    ZsHgYF: '20b2aa',\n    ZskyXe: '87cefa',\n    ZUWay: '778899',\n    ZUgYy: '778899',\n    ZstAlXe: 'b0c4de',\n    ZLw: 'ffffe0',\n    lime: 'ff00',\n    limegYF: '32cd32',\n    lRF: 'faf0e6',\n    magFta: 'ff00ff',\n    maPon: '800000',\n    VaquamarRe: '66cdaa',\n    VXe: 'cd',\n    VScEd: 'ba55d3',\n    VpurpN: '9370db',\n    VsHgYF: '3cb371',\n    VUXe: '7b68ee',\n    VsprRggYF: 'fa9a',\n    VQe: '48d1cc',\n    VviTetYd: 'c71585',\n    midnightXe: '191970',\n    mRtcYam: 'f5fffa',\n    mistyPse: 'ffe4e1',\n    moccasR: 'ffe4b5',\n    navajowEte: 'ffdead',\n    navy: '80',\n    Tdlace: 'fdf5e6',\n    Tive: '808000',\n    TivedBb: '6b8e23',\n    Sange: 'ffa500',\n    SangeYd: 'ff4500',\n    ScEd: 'da70d6',\n    pOegTMnPd: 'eee8aa',\n    pOegYF: '98fb98',\n    pOeQe: 'afeeee',\n    pOeviTetYd: 'db7093',\n    papayawEp: 'ffefd5',\n    pHKpuff: 'ffdab9',\n    peru: 'cd853f',\n    pRk: 'ffc0cb',\n    plum: 'dda0dd',\n    powMrXe: 'b0e0e6',\n    purpN: '800080',\n    YbeccapurpN: '663399',\n    Yd: 'ff0000',\n    Psybrown: 'bc8f8f',\n    PyOXe: '4169e1',\n    saddNbPwn: '8b4513',\n    sOmon: 'fa8072',\n    sandybPwn: 'f4a460',\n    sHgYF: '2e8b57',\n    sHshell: 'fff5ee',\n    siFna: 'a0522d',\n    silver: 'c0c0c0',\n    skyXe: '87ceeb',\n    UXe: '6a5acd',\n    UWay: '708090',\n    UgYy: '708090',\n    snow: 'fffafa',\n    sprRggYF: 'ff7f',\n    stAlXe: '4682b4',\n    tan: 'd2b48c',\n    teO: '8080',\n    tEstN: 'd8bfd8',\n    tomato: 'ff6347',\n    Qe: '40e0d0',\n    viTet: 'ee82ee',\n    JHt: 'f5deb3',\n    wEte: 'ffffff',\n    wEtesmoke: 'f5f5f5',\n    Lw: 'ffff00',\n    LwgYF: '9acd32'\n  };\n\n  function unpack() {\n    const unpacked = {};\n    const keys = Object.keys(names);\n    const tkeys = Object.keys(map$1$1);\n    let i, j, k, ok, nk;\n\n    for (i = 0; i < keys.length; i++) {\n      ok = nk = keys[i];\n\n      for (j = 0; j < tkeys.length; j++) {\n        k = tkeys[j];\n        nk = nk.replace(k, map$1$1[k]);\n      }\n\n      k = parseInt(names[ok], 16);\n      unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n    }\n\n    return unpacked;\n  }\n\n  let names$1;\n\n  function nameParse(str) {\n    if (!names$1) {\n      names$1 = unpack();\n      names$1.transparent = [0, 0, 0, 0];\n    }\n\n    const a = names$1[str.toLowerCase()];\n    return a && {\n      r: a[0],\n      g: a[1],\n      b: a[2],\n      a: a.length === 4 ? a[3] : 255\n    };\n  }\n\n  function modHSL(v, i, ratio) {\n    if (v) {\n      let tmp = rgb2hsl(v);\n      tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n      tmp = hsl2rgb(tmp);\n      v.r = tmp[0];\n      v.g = tmp[1];\n      v.b = tmp[2];\n    }\n  }\n\n  function clone$1(v, proto) {\n    return v ? Object.assign(proto || {}, v) : v;\n  }\n\n  function fromObject(input) {\n    var v = {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 255\n    };\n\n    if (Array.isArray(input)) {\n      if (input.length >= 3) {\n        v = {\n          r: input[0],\n          g: input[1],\n          b: input[2],\n          a: 255\n        };\n\n        if (input.length > 3) {\n          v.a = n2b(input[3]);\n        }\n      }\n    } else {\n      v = clone$1(input, {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 1\n      });\n      v.a = n2b(v.a);\n    }\n\n    return v;\n  }\n\n  function functionParse(str) {\n    if (str.charAt(0) === 'r') {\n      return rgbParse(str);\n    }\n\n    return hueParse(str);\n  }\n\n  class Color {\n    constructor(input) {\n      if (input instanceof Color) {\n        return input;\n      }\n\n      const type = typeof input;\n      let v;\n\n      if (type === 'object') {\n        v = fromObject(input);\n      } else if (type === 'string') {\n        v = hexParse(input) || nameParse(input) || functionParse(input);\n      }\n\n      this._rgb = v;\n      this._valid = !!v;\n    }\n\n    get valid() {\n      return this._valid;\n    }\n\n    get rgb() {\n      var v = clone$1(this._rgb);\n\n      if (v) {\n        v.a = b2n(v.a);\n      }\n\n      return v;\n    }\n\n    set rgb(obj) {\n      this._rgb = fromObject(obj);\n    }\n\n    rgbString() {\n      return this._valid ? rgbString(this._rgb) : this._rgb;\n    }\n\n    hexString() {\n      return this._valid ? hexString(this._rgb) : this._rgb;\n    }\n\n    hslString() {\n      return this._valid ? hslString(this._rgb) : this._rgb;\n    }\n\n    mix(color, weight) {\n      const me = this;\n\n      if (color) {\n        const c1 = me.rgb;\n        const c2 = color.rgb;\n        let w2;\n        const p = weight === w2 ? 0.5 : weight;\n        const w = 2 * p - 1;\n        const a = c1.a - c2.a;\n        const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n        w2 = 1 - w1;\n        c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n        c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n        c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n        c1.a = p * c1.a + (1 - p) * c2.a;\n        me.rgb = c1;\n      }\n\n      return me;\n    }\n\n    clone() {\n      return new Color(this.rgb);\n    }\n\n    alpha(a) {\n      this._rgb.a = n2b(a);\n      return this;\n    }\n\n    clearer(ratio) {\n      const rgb = this._rgb;\n      rgb.a *= 1 - ratio;\n      return this;\n    }\n\n    greyscale() {\n      const rgb = this._rgb;\n      const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n      rgb.r = rgb.g = rgb.b = val;\n      return this;\n    }\n\n    opaquer(ratio) {\n      const rgb = this._rgb;\n      rgb.a *= 1 + ratio;\n      return this;\n    }\n\n    negate() {\n      const v = this._rgb;\n      v.r = 255 - v.r;\n      v.g = 255 - v.g;\n      v.b = 255 - v.b;\n      return this;\n    }\n\n    lighten(ratio) {\n      modHSL(this._rgb, 2, ratio);\n      return this;\n    }\n\n    darken(ratio) {\n      modHSL(this._rgb, 2, -ratio);\n      return this;\n    }\n\n    saturate(ratio) {\n      modHSL(this._rgb, 1, ratio);\n      return this;\n    }\n\n    desaturate(ratio) {\n      modHSL(this._rgb, 1, -ratio);\n      return this;\n    }\n\n    rotate(deg) {\n      rotate(this._rgb, deg);\n      return this;\n    }\n\n  }\n\n  function index_esm(input) {\n    return new Color(input);\n  }\n\n  const isPatternOrGradient = value => value instanceof CanvasGradient || value instanceof CanvasPattern;\n\n  function color(value) {\n    return isPatternOrGradient(value) ? value : index_esm(value);\n  }\n\n  function getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : index_esm(value).saturate(0.5).darken(0.1).hexString();\n  }\n\n  function noop() {}\n\n  const uid = function () {\n    let id = 0;\n    return function () {\n      return id++;\n    };\n  }();\n\n  function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n  }\n\n  function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n      return true;\n    }\n\n    const type = Object.prototype.toString.call(value);\n\n    if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n      return true;\n    }\n\n    return false;\n  }\n\n  function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n  }\n\n  const isNumberFinite = value => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n\n  function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n  }\n\n  function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n  }\n\n  const toPercentage = (value, dimension) => typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : value / dimension;\n\n  const toDimension = (value, dimension) => typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n\n  function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n      return fn.apply(thisArg, args);\n    }\n  }\n\n  function each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n\n    if (isArray(loopable)) {\n      len = loopable.length;\n\n      if (reverse) {\n        for (i = len - 1; i >= 0; i--) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      } else {\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      }\n    } else if (isObject(loopable)) {\n      keys = Object.keys(loopable);\n      len = keys.length;\n\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[keys[i]], keys[i]);\n      }\n    }\n  }\n\n  function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n\n    if (!a0 || !a1 || a0.length !== a1.length) {\n      return false;\n    }\n\n    for (i = 0, ilen = a0.length; i < ilen; ++i) {\n      v0 = a0[i];\n      v1 = a1[i];\n\n      if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function clone(source) {\n    if (isArray(source)) {\n      return source.map(clone);\n    }\n\n    if (isObject(source)) {\n      const target = Object.create(null);\n      const keys = Object.keys(source);\n      const klen = keys.length;\n      let k = 0;\n\n      for (; k < klen; ++k) {\n        target[keys[k]] = clone(source[keys[k]]);\n      }\n\n      return target;\n    }\n\n    return source;\n  }\n\n  function isValidKey(key) {\n    return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n  }\n\n  function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n      return;\n    }\n\n    const tval = target[key];\n    const sval = source[key];\n\n    if (isObject(tval) && isObject(sval)) {\n      merge(tval, sval, options);\n    } else {\n      target[key] = clone(sval);\n    }\n  }\n\n  function merge(target, source, options) {\n    const sources = isArray(source) ? source : [source];\n    const ilen = sources.length;\n\n    if (!isObject(target)) {\n      return target;\n    }\n\n    options = options || {};\n    const merger = options.merger || _merger;\n\n    for (let i = 0; i < ilen; ++i) {\n      source = sources[i];\n\n      if (!isObject(source)) {\n        continue;\n      }\n\n      const keys = Object.keys(source);\n\n      for (let k = 0, klen = keys.length; k < klen; ++k) {\n        merger(keys[k], target, source, options);\n      }\n    }\n\n    return target;\n  }\n\n  function mergeIf(target, source) {\n    return merge(target, source, {\n      merger: _mergerIf\n    });\n  }\n\n  function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n      return;\n    }\n\n    const tval = target[key];\n    const sval = source[key];\n\n    if (isObject(tval) && isObject(sval)) {\n      mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n      target[key] = clone(sval);\n    }\n  }\n\n  function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n      console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n  }\n\n  const emptyString = '';\n  const dot = '.';\n\n  function indexOfDotOrLength(key, start) {\n    const idx = key.indexOf(dot, start);\n    return idx === -1 ? key.length : idx;\n  }\n\n  function resolveObjectKey(obj, key) {\n    if (key === emptyString) {\n      return obj;\n    }\n\n    let pos = 0;\n    let idx = indexOfDotOrLength(key, pos);\n\n    while (obj && idx > pos) {\n      obj = obj[key.substr(pos, idx - pos)];\n      pos = idx + 1;\n      idx = indexOfDotOrLength(key, pos);\n    }\n\n    return obj;\n  }\n\n  function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  const defined = value => typeof value !== 'undefined';\n\n  const isFunction = value => typeof value === 'function';\n\n  const setsEqual = (a, b) => {\n    if (a.size !== b.size) {\n      return false;\n    }\n\n    for (const item of a) {\n      if (!b.has(item)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  const overrides = Object.create(null);\n  const descriptors = Object.create(null);\n\n  function getScope$1(node, key) {\n    if (!key) {\n      return node;\n    }\n\n    const keys = key.split('.');\n\n    for (let i = 0, n = keys.length; i < n; ++i) {\n      const k = keys[i];\n      node = node[k] || (node[k] = Object.create(null));\n    }\n\n    return node;\n  }\n\n  function set(root, scope, values) {\n    if (typeof scope === 'string') {\n      return merge(getScope$1(root, scope), values);\n    }\n\n    return merge(getScope$1(root, ''), scope);\n  }\n\n  class Defaults {\n    constructor(_descriptors) {\n      this.animation = undefined;\n      this.backgroundColor = 'rgba(0,0,0,0.1)';\n      this.borderColor = 'rgba(0,0,0,0.1)';\n      this.color = '#666';\n      this.datasets = {};\n\n      this.devicePixelRatio = context => context.chart.platform.getDevicePixelRatio();\n\n      this.elements = {};\n      this.events = ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'];\n      this.font = {\n        family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n        size: 12,\n        style: 'normal',\n        lineHeight: 1.2,\n        weight: null\n      };\n      this.hover = {};\n\n      this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n\n      this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n\n      this.hoverColor = (ctx, options) => getHoverColor(options.color);\n\n      this.indexAxis = 'x';\n      this.interaction = {\n        mode: 'nearest',\n        intersect: true\n      };\n      this.maintainAspectRatio = true;\n      this.onHover = null;\n      this.onClick = null;\n      this.parsing = true;\n      this.plugins = {};\n      this.responsive = true;\n      this.scale = undefined;\n      this.scales = {};\n      this.showLine = true;\n      this.describe(_descriptors);\n    }\n\n    set(scope, values) {\n      return set(this, scope, values);\n    }\n\n    get(scope) {\n      return getScope$1(this, scope);\n    }\n\n    describe(scope, values) {\n      return set(descriptors, scope, values);\n    }\n\n    override(scope, values) {\n      return set(overrides, scope, values);\n    }\n\n    route(scope, name, targetScope, targetName) {\n      const scopeObject = getScope$1(this, scope);\n      const targetScopeObject = getScope$1(this, targetScope);\n      const privateName = '_' + name;\n      Object.defineProperties(scopeObject, {\n        [privateName]: {\n          value: scopeObject[name],\n          writable: true\n        },\n        [name]: {\n          enumerable: true,\n\n          get() {\n            const local = this[privateName];\n            const target = targetScopeObject[targetName];\n\n            if (isObject(local)) {\n              return Object.assign({}, target, local);\n            }\n\n            return valueOrDefault(local, target);\n          },\n\n          set(value) {\n            this[privateName] = value;\n          }\n\n        }\n      });\n    }\n\n  }\n\n  var defaults = new Defaults({\n    _scriptable: name => !name.startsWith('on'),\n    _indexable: name => name !== 'events',\n    hover: {\n      _fallback: 'interaction'\n    },\n    interaction: {\n      _scriptable: false,\n      _indexable: false\n    }\n  });\n  const PI = Math.PI;\n  const TAU = 2 * PI;\n  const PITAU = TAU + PI;\n  const INFINITY = Number.POSITIVE_INFINITY;\n  const RAD_PER_DEG = PI / 180;\n  const HALF_PI = PI / 2;\n  const QUARTER_PI = PI / 4;\n  const TWO_THIRDS_PI = PI * 2 / 3;\n  const log10 = Math.log10;\n  const sign = Math.sign;\n\n  function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n  }\n\n  function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n\n    for (i = 1; i < sqrt; i++) {\n      if (value % i === 0) {\n        result.push(i);\n        result.push(value / i);\n      }\n    }\n\n    if (sqrt === (sqrt | 0)) {\n      result.push(sqrt);\n    }\n\n    result.sort((a, b) => a - b).pop();\n    return result;\n  }\n\n  function isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  function almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n  }\n\n  function almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n  }\n\n  function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n\n    for (i = 0, ilen = array.length; i < ilen; i++) {\n      value = array[i][property];\n\n      if (!isNaN(value)) {\n        target.min = Math.min(target.min, value);\n        target.max = Math.max(target.max, value);\n      }\n    }\n  }\n\n  function toRadians(degrees) {\n    return degrees * (PI / 180);\n  }\n\n  function toDegrees(radians) {\n    return radians * (180 / PI);\n  }\n\n  function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n      return;\n    }\n\n    let e = 1;\n    let p = 0;\n\n    while (Math.round(x * e) / e !== x) {\n      e *= 10;\n      p++;\n    }\n\n    return p;\n  }\n\n  function getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n    if (angle < -0.5 * PI) {\n      angle += TAU;\n    }\n\n    return {\n      angle,\n      distance: radialDistanceFromCenter\n    };\n  }\n\n  function distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n  }\n\n  function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n  }\n\n  function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n  }\n\n  function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n\n    const s = _normalizeAngle(start);\n\n    const e = _normalizeAngle(end);\n\n    const angleToStart = _normalizeAngle(s - a);\n\n    const angleToEnd = _normalizeAngle(e - a);\n\n    const startToAngle = _normalizeAngle(a - s);\n\n    const endToAngle = _normalizeAngle(a - e);\n\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n  }\n\n  function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n  }\n\n  function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n  }\n\n  function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n\n  function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n\n    if (!textWidth) {\n      textWidth = data[string] = ctx.measureText(string).width;\n      gc.push(string);\n    }\n\n    if (textWidth > longest) {\n      longest = textWidth;\n    }\n\n    return longest;\n  }\n\n  function _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n    if (cache.font !== font) {\n      data = cache.data = {};\n      gc = cache.garbageCollect = [];\n      cache.font = font;\n    }\n\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n\n    for (i = 0; i < ilen; i++) {\n      thing = arrayOfThings[i];\n\n      if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n        longest = _measureText(ctx, data, gc, longest, thing);\n      } else if (isArray(thing)) {\n        for (j = 0, jlen = thing.length; j < jlen; j++) {\n          nestedThing = thing[j];\n\n          if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n            longest = _measureText(ctx, data, gc, longest, nestedThing);\n          }\n        }\n      }\n    }\n\n    ctx.restore();\n    const gcLen = gc.length / 2;\n\n    if (gcLen > arrayOfThings.length) {\n      for (i = 0; i < gcLen; i++) {\n        delete data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n\n    return longest;\n  }\n\n  function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n  }\n\n  function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n  }\n\n  function drawPoint(ctx, options, x, y) {\n    let type, xOffset, yOffset, size, cornerRadius;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n\n    if (style && typeof style === 'object') {\n      type = style.toString();\n\n      if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.rotate(rad);\n        ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n        ctx.restore();\n        return;\n      }\n    }\n\n    if (isNaN(radius) || radius <= 0) {\n      return;\n    }\n\n    ctx.beginPath();\n\n    switch (style) {\n      default:\n        ctx.arc(x, y, radius, 0, TAU);\n        ctx.closePath();\n        break;\n\n      case 'triangle':\n        ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n        rad += TWO_THIRDS_PI;\n        ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n        rad += TWO_THIRDS_PI;\n        ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n        ctx.closePath();\n        break;\n\n      case 'rectRounded':\n        cornerRadius = radius * 0.516;\n        size = radius - cornerRadius;\n        xOffset = Math.cos(rad + QUARTER_PI) * size;\n        yOffset = Math.sin(rad + QUARTER_PI) * size;\n        ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n        ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n        ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n        ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n        ctx.closePath();\n        break;\n\n      case 'rect':\n        if (!rotation) {\n          size = Math.SQRT1_2 * radius;\n          ctx.rect(x - size, y - size, 2 * size, 2 * size);\n          break;\n        }\n\n        rad += QUARTER_PI;\n\n      case 'rectRot':\n        xOffset = Math.cos(rad) * radius;\n        yOffset = Math.sin(rad) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + yOffset, y - xOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        ctx.lineTo(x - yOffset, y + xOffset);\n        ctx.closePath();\n        break;\n\n      case 'crossRot':\n        rad += QUARTER_PI;\n\n      case 'cross':\n        xOffset = Math.cos(rad) * radius;\n        yOffset = Math.sin(rad) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        ctx.moveTo(x + yOffset, y - xOffset);\n        ctx.lineTo(x - yOffset, y + xOffset);\n        break;\n\n      case 'star':\n        xOffset = Math.cos(rad) * radius;\n        yOffset = Math.sin(rad) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        ctx.moveTo(x + yOffset, y - xOffset);\n        ctx.lineTo(x - yOffset, y + xOffset);\n        rad += QUARTER_PI;\n        xOffset = Math.cos(rad) * radius;\n        yOffset = Math.sin(rad) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        ctx.moveTo(x + yOffset, y - xOffset);\n        ctx.lineTo(x - yOffset, y + xOffset);\n        break;\n\n      case 'line':\n        xOffset = Math.cos(rad) * radius;\n        yOffset = Math.sin(rad) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        break;\n\n      case 'dash':\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n        break;\n    }\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5;\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n  }\n\n  function clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n  }\n\n  function unclipArea(ctx) {\n    ctx.restore();\n  }\n\n  function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n      return ctx.lineTo(target.x, target.y);\n    }\n\n    if (mode === 'middle') {\n      const midpoint = (previous.x + target.x) / 2.0;\n      ctx.lineTo(midpoint, previous.y);\n      ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n      ctx.lineTo(previous.x, target.y);\n    } else {\n      ctx.lineTo(target.x, previous.y);\n    }\n\n    ctx.lineTo(target.x, target.y);\n  }\n\n  function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n      return ctx.lineTo(target.x, target.y);\n    }\n\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n  }\n\n  function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [text];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n\n    for (i = 0; i < lines.length; ++i) {\n      line = lines[i];\n\n      if (stroke) {\n        if (opts.strokeColor) {\n          ctx.strokeStyle = opts.strokeColor;\n        }\n\n        if (!isNullOrUndef(opts.strokeWidth)) {\n          ctx.lineWidth = opts.strokeWidth;\n        }\n\n        ctx.strokeText(line, x, y, opts.maxWidth);\n      }\n\n      ctx.fillText(line, x, y, opts.maxWidth);\n      decorateText(ctx, x, y, line, opts);\n      y += font.lineHeight;\n    }\n\n    ctx.restore();\n  }\n\n  function setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n      ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n\n    if (!isNullOrUndef(opts.rotation)) {\n      ctx.rotate(opts.rotation);\n    }\n\n    if (opts.color) {\n      ctx.fillStyle = opts.color;\n    }\n\n    if (opts.textAlign) {\n      ctx.textAlign = opts.textAlign;\n    }\n\n    if (opts.textBaseline) {\n      ctx.textBaseline = opts.textBaseline;\n    }\n  }\n\n  function decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n      const metrics = ctx.measureText(line);\n      const left = x - metrics.actualBoundingBoxLeft;\n      const right = x + metrics.actualBoundingBoxRight;\n      const top = y - metrics.actualBoundingBoxAscent;\n      const bottom = y + metrics.actualBoundingBoxDescent;\n      const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n      ctx.strokeStyle = ctx.fillStyle;\n      ctx.beginPath();\n      ctx.lineWidth = opts.decorationWidth || 2;\n      ctx.moveTo(left, yDecoration);\n      ctx.lineTo(right, yDecoration);\n      ctx.stroke();\n    }\n  }\n\n  function addRoundedRectPath(ctx, rect) {\n    const {\n      x,\n      y,\n      w,\n      h,\n      radius\n    } = rect;\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    ctx.lineTo(x + w, y + radius.topRight);\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    ctx.lineTo(x + radius.topLeft, y);\n  }\n\n  function _lookup(table, value, cmp) {\n    cmp = cmp || (index => table[index] < value);\n\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n\n    while (hi - lo > 1) {\n      mid = lo + hi >> 1;\n\n      if (cmp(mid)) {\n        lo = mid;\n      } else {\n        hi = mid;\n      }\n    }\n\n    return {\n      lo,\n      hi\n    };\n  }\n\n  const _lookupByKey = (table, key, value) => _lookup(table, value, index => table[index][key] < value);\n\n  const _rlookupByKey = (table, key, value) => _lookup(table, value, index => table[index][key] >= value);\n\n  function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n\n    while (start < end && values[start] < min) {\n      start++;\n    }\n\n    while (end > start && values[end - 1] > max) {\n      end--;\n    }\n\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n  }\n\n  const arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(key => {\n      const method = '_onData' + _capitalize(key);\n\n      const base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n\n        value(...args) {\n          const res = base.apply(this, args);\n\n          array._chartjs.listeners.forEach(object => {\n            if (typeof object[method] === 'function') {\n              object[method](...args);\n            }\n          });\n\n          return res;\n        }\n\n      });\n    });\n  }\n\n  function unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(key => {\n      delete array[key];\n    });\n    delete array._chartjs;\n  }\n\n  function _arrayUnique(items) {\n    const set = new Set();\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      set.add(items[i]);\n    }\n\n    if (set.size === ilen) {\n      return items;\n    }\n\n    return Array.from(set);\n  }\n\n  function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n  }\n\n  function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n      parent = parent.host;\n    }\n\n    return parent;\n  }\n\n  function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n\n    if (typeof styleValue === 'string') {\n      valueInPixels = parseInt(styleValue, 10);\n\n      if (styleValue.indexOf('%') !== -1) {\n        valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n      }\n    } else {\n      valueInPixels = styleValue;\n    }\n\n    return valueInPixels;\n  }\n\n  const getComputedStyle = element => window.getComputedStyle(element, null);\n\n  function getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n  }\n\n  const positions = ['top', 'right', 'bottom', 'left'];\n\n  function getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n\n    for (let i = 0; i < 4; i++) {\n      const pos = positions[i];\n      result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n  }\n\n  const useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\n\n  function getCanvasPosition(evt, canvas) {\n    const e = evt.native || evt;\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const {\n      offsetX,\n      offsetY\n    } = source;\n    let box = false;\n    let x, y;\n\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n      x = offsetX;\n      y = offsetY;\n    } else {\n      const rect = canvas.getBoundingClientRect();\n      x = source.clientX - rect.left;\n      y = source.clientY - rect.top;\n      box = true;\n    }\n\n    return {\n      x,\n      y,\n      box\n    };\n  }\n\n  function getRelativePosition$1(evt, chart) {\n    const {\n      canvas,\n      currentDevicePixelRatio\n    } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const {\n      x,\n      y,\n      box\n    } = getCanvasPosition(evt, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let {\n      width,\n      height\n    } = chart;\n\n    if (borderBox) {\n      width -= paddings.width + borders.width;\n      height -= paddings.height + borders.height;\n    }\n\n    return {\n      x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n      y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n  }\n\n  function getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n\n    if (width === undefined || height === undefined) {\n      const container = _getParentNode(canvas);\n\n      if (!container) {\n        width = canvas.clientWidth;\n        height = canvas.clientHeight;\n      } else {\n        const rect = container.getBoundingClientRect();\n        const containerStyle = getComputedStyle(container);\n        const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n        const containerPadding = getPositionedStyle(containerStyle, 'padding');\n        width = rect.width - containerPadding.width - containerBorder.width;\n        height = rect.height - containerPadding.height - containerBorder.height;\n        maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n        maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n      }\n    }\n\n    return {\n      width,\n      height,\n      maxWidth: maxWidth || INFINITY,\n      maxHeight: maxHeight || INFINITY\n    };\n  }\n\n  const round1 = v => Math.round(v * 10) / 10;\n\n  function getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let {\n      width,\n      height\n    } = containerSize;\n\n    if (style.boxSizing === 'content-box') {\n      const borders = getPositionedStyle(style, 'border', 'width');\n      const paddings = getPositionedStyle(style, 'padding');\n      width -= paddings.width + borders.width;\n      height -= paddings.height + borders.height;\n    }\n\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n\n    if (width && !height) {\n      height = round1(width / 2);\n    }\n\n    return {\n      width,\n      height\n    };\n  }\n\n  function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = deviceHeight / pixelRatio;\n    chart.width = deviceWidth / pixelRatio;\n    const canvas = chart.canvas;\n\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n      canvas.style.height = `${chart.height}px`;\n      canvas.style.width = `${chart.width}px`;\n    }\n\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n      chart.currentDevicePixelRatio = pixelRatio;\n      canvas.height = deviceHeight;\n      canvas.width = deviceWidth;\n      chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n      return true;\n    }\n\n    return false;\n  }\n\n  const supportsEventListenerOptions = function () {\n    let passiveSupported = false;\n\n    try {\n      const options = {\n        get passive() {\n          passiveSupported = true;\n          return false;\n        }\n\n      };\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    } catch (e) {}\n\n    return passiveSupported;\n  }();\n\n  function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n  }\n\n  function getRelativePosition(e, chart) {\n    if ('native' in e) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return getRelativePosition$1(e, chart);\n  }\n\n  function evaluateAllVisibleItems(chart, handler) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    let index, data, element;\n\n    for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n      ({\n        index,\n        data\n      } = metasets[i]);\n\n      for (let j = 0, jlen = data.length; j < jlen; ++j) {\n        element = data[j];\n\n        if (!element.skip) {\n          handler(element, index, j);\n        }\n      }\n    }\n  }\n\n  function binarySearch(metaset, axis, value, intersect) {\n    const {\n      controller,\n      data,\n      _sorted\n    } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n\n    if (iScale && axis === iScale.axis && _sorted && data.length) {\n      const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n\n      if (!intersect) {\n        return lookupMethod(data, axis, value);\n      } else if (controller._sharedOptions) {\n        const el = data[0];\n        const range = typeof el.getRange === 'function' && el.getRange(axis);\n\n        if (range) {\n          const start = lookupMethod(data, axis, value - range);\n          const end = lookupMethod(data, axis, value + range);\n          return {\n            lo: start.lo,\n            hi: end.hi\n          };\n        }\n      }\n    }\n\n    return {\n      lo: 0,\n      hi: data.length - 1\n    };\n  }\n\n  function optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n\n    for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const {\n        index,\n        data\n      } = metasets[i];\n      const {\n        lo,\n        hi\n      } = binarySearch(metasets[i], axis, value, intersect);\n\n      for (let j = lo; j <= hi; ++j) {\n        const element = data[j];\n\n        if (!element.skip) {\n          handler(element, index, j);\n        }\n      }\n    }\n  }\n\n  function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function getIntersectItems(chart, position, axis, useFinalPosition) {\n    const items = [];\n\n    if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n      return items;\n    }\n\n    const evaluationFunc = function (element, datasetIndex, index) {\n      if (element.inRange(position.x, position.y, useFinalPosition)) {\n        items.push({\n          element,\n          datasetIndex,\n          index\n        });\n      }\n    };\n\n    optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n    return items;\n  }\n\n  function getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    let items = [];\n\n    if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n      return items;\n    }\n\n    const evaluationFunc = function (element, datasetIndex, index) {\n      if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n        return;\n      }\n\n      const center = element.getCenterPoint(useFinalPosition);\n\n      if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n        return;\n      }\n\n      const distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        items = [{\n          element,\n          datasetIndex,\n          index\n        }];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        items.push({\n          element,\n          datasetIndex,\n          index\n        });\n      }\n    };\n\n    optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n    return items;\n  }\n\n  function getAxisItems(chart, e, options, useFinalPosition) {\n    const position = getRelativePosition(e, chart);\n    const items = [];\n    const axis = options.axis;\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n      if (element[rangeMethod](position[axis], useFinalPosition)) {\n        items.push({\n          element,\n          datasetIndex,\n          index\n        });\n      }\n\n      if (element.inRange(position.x, position.y, useFinalPosition)) {\n        intersectsItem = true;\n      }\n    });\n\n    if (options.intersect && !intersectsItem) {\n      return [];\n    }\n\n    return items;\n  }\n\n  var Interaction = {\n    modes: {\n      index(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        const axis = options.axis || 'x';\n        const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n        const elements = [];\n\n        if (!items.length) {\n          return [];\n        }\n\n        chart.getSortedVisibleDatasetMetas().forEach(meta => {\n          const index = items[0].index;\n          const element = meta.data[index];\n\n          if (element && !element.skip) {\n            elements.push({\n              element,\n              datasetIndex: meta.index,\n              index\n            });\n          }\n        });\n        return elements;\n      },\n\n      dataset(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        const axis = options.axis || 'xy';\n        let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n\n        if (items.length > 0) {\n          const datasetIndex = items[0].datasetIndex;\n          const data = chart.getDatasetMeta(datasetIndex).data;\n          items = [];\n\n          for (let i = 0; i < data.length; ++i) {\n            items.push({\n              element: data[i],\n              datasetIndex,\n              index: i\n            });\n          }\n        }\n\n        return items;\n      },\n\n      point(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        const axis = options.axis || 'xy';\n        return getIntersectItems(chart, position, axis, useFinalPosition);\n      },\n\n      nearest(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        const axis = options.axis || 'xy';\n        return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n      },\n\n      x(chart, e, options, useFinalPosition) {\n        options.axis = 'x';\n        return getAxisItems(chart, e, options, useFinalPosition);\n      },\n\n      y(chart, e, options, useFinalPosition) {\n        options.axis = 'y';\n        return getAxisItems(chart, e, options, useFinalPosition);\n      }\n\n    }\n  };\n  const LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n  const FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\n\n  function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n\n    if (!matches || matches[1] === 'normal') {\n      return size * 1.2;\n    }\n\n    value = +matches[2];\n\n    switch (matches[3]) {\n      case 'px':\n        return value;\n\n      case '%':\n        value /= 100;\n        break;\n    }\n\n    return size * value;\n  }\n\n  const numberOrZero$1 = v => +v || 0;\n\n  function _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? prop => valueOrDefault(value[prop], value[props[prop]]) : prop => value[prop] : () => value;\n\n    for (const prop of keys) {\n      ret[prop] = numberOrZero$1(read(prop));\n    }\n\n    return ret;\n  }\n\n  function toTRBL(value) {\n    return _readValueToProps(value, {\n      top: 'y',\n      right: 'x',\n      bottom: 'y',\n      left: 'x'\n    });\n  }\n\n  function toTRBLCorners(value) {\n    return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n  }\n\n  function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n  }\n\n  function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n\n    if (typeof size === 'string') {\n      size = parseInt(size, 10);\n    }\n\n    let style = valueOrDefault(options.style, fallback.style);\n\n    if (style && !('' + style).match(FONT_STYLE)) {\n      console.warn('Invalid font style specified: \"' + style + '\"');\n      style = '';\n    }\n\n    const font = {\n      family: valueOrDefault(options.family, fallback.family),\n      lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n      size,\n      style,\n      weight: valueOrDefault(options.weight, fallback.weight),\n      string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n  }\n\n  function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n\n    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n      value = inputs[i];\n\n      if (value === undefined) {\n        continue;\n      }\n\n      if (context !== undefined && typeof value === 'function') {\n        value = value(context);\n        cacheable = false;\n      }\n\n      if (index !== undefined && isArray(value)) {\n        value = value[index % value.length];\n        cacheable = false;\n      }\n\n      if (value !== undefined) {\n        if (info && !cacheable) {\n          info.cacheable = false;\n        }\n\n        return value;\n      }\n    }\n  }\n\n  function _addGrace(minmax, grace) {\n    const {\n      min,\n      max\n    } = minmax;\n    return {\n      min: min - Math.abs(toDimension(grace, min)),\n      max: max + toDimension(grace, max)\n    };\n  }\n\n  const STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\n  function filterByPosition(array, position) {\n    return array.filter(v => v.pos === position);\n  }\n\n  function filterDynamicPositionByAxis(array, axis) {\n    return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n  }\n\n  function sortByWeight(array, reverse) {\n    return array.sort((a, b) => {\n      const v0 = reverse ? b : a;\n      const v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n  }\n\n  function wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n\n    for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n      box = boxes[i];\n      ({\n        position: pos,\n        options: {\n          stack,\n          stackWeight = 1\n        }\n      } = box);\n      layoutBoxes.push({\n        index: i,\n        box,\n        pos,\n        horizontal: box.isHorizontal(),\n        weight: box.weight,\n        stack: stack && pos + stack,\n        stackWeight\n      });\n    }\n\n    return layoutBoxes;\n  }\n\n  function buildStacks(layouts) {\n    const stacks = {};\n\n    for (const wrap of layouts) {\n      const {\n        stack,\n        pos,\n        stackWeight\n      } = wrap;\n\n      if (!stack || !STATIC_POSITIONS.includes(pos)) {\n        continue;\n      }\n\n      const _stack = stacks[stack] || (stacks[stack] = {\n        count: 0,\n        placed: 0,\n        weight: 0,\n        size: 0\n      });\n\n      _stack.count++;\n      _stack.weight += stackWeight;\n    }\n\n    return stacks;\n  }\n\n  function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const {\n      vBoxMaxWidth,\n      hBoxMaxHeight\n    } = params;\n    let i, ilen, layout;\n\n    for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n      layout = layouts[i];\n      const {\n        fullSize\n      } = layout.box;\n      const stack = stacks[layout.stack];\n      const factor = stack && layout.stackWeight / stack.weight;\n\n      if (layout.horizontal) {\n        layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n        layout.height = hBoxMaxHeight;\n      } else {\n        layout.width = vBoxMaxWidth;\n        layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n      }\n    }\n\n    return stacks;\n  }\n\n  function buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n      fullSize,\n      leftAndTop: left.concat(top),\n      rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n      chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n      vertical: left.concat(right).concat(centerVertical),\n      horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n  }\n\n  function getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n  }\n\n  function updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n  }\n\n  function updateDims(chartArea, params, layout, stacks) {\n    const {\n      pos,\n      box\n    } = layout;\n    const maxPadding = chartArea.maxPadding;\n\n    if (!isObject(pos)) {\n      if (layout.size) {\n        chartArea[pos] -= layout.size;\n      }\n\n      const stack = stacks[layout.stack] || {\n        size: 0,\n        count: 1\n      };\n      stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n      layout.size = stack.size / stack.count;\n      chartArea[pos] += layout.size;\n    }\n\n    if (box.getPadding) {\n      updateMaxPadding(maxPadding, box.getPadding());\n    }\n\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n      same: widthChanged,\n      other: heightChanged\n    } : {\n      same: heightChanged,\n      other: widthChanged\n    };\n  }\n\n  function handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n\n    function updatePos(pos) {\n      const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n      chartArea[pos] += change;\n      return change;\n    }\n\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n  }\n\n  function getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n\n    function marginForPositions(positions) {\n      const margin = {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      };\n      positions.forEach(pos => {\n        margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n      });\n      return margin;\n    }\n\n    return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n  }\n\n  function fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n\n    for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n      layout = boxes[i];\n      box = layout.box;\n      box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n      const {\n        same,\n        other\n      } = updateDims(chartArea, params, layout, stacks);\n      refit |= same && refitBoxes.length;\n      changed = changed || other;\n\n      if (!box.fullSize) {\n        refitBoxes.push(layout);\n      }\n    }\n\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n  }\n\n  function setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n  }\n\n  function placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let {\n      x,\n      y\n    } = chartArea;\n\n    for (const layout of boxes) {\n      const box = layout.box;\n      const stack = stacks[layout.stack] || {\n        count: 1,\n        placed: 0,\n        weight: 1\n      };\n      const weight = layout.stackWeight / stack.weight || 1;\n\n      if (layout.horizontal) {\n        const width = chartArea.w * weight;\n        const height = stack.size || box.height;\n\n        if (defined(stack.start)) {\n          y = stack.start;\n        }\n\n        if (box.fullSize) {\n          setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n        } else {\n          setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n        }\n\n        stack.start = y;\n        stack.placed += width;\n        y = box.bottom;\n      } else {\n        const height = chartArea.h * weight;\n        const width = stack.size || box.width;\n\n        if (defined(stack.start)) {\n          x = stack.start;\n        }\n\n        if (box.fullSize) {\n          setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n        } else {\n          setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n        }\n\n        stack.start = x;\n        stack.placed += height;\n        x = box.right;\n      }\n    }\n\n    chartArea.x = x;\n    chartArea.y = y;\n  }\n\n  defaults.set('layout', {\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n  var layouts = {\n    addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      }\n\n      item.fullSize = item.fullSize || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n\n      item._layers = item._layers || function () {\n        return [{\n          z: 0,\n\n          draw(chartArea) {\n            item.draw(chartArea);\n          }\n\n        }];\n      };\n\n      chart.boxes.push(item);\n    },\n\n    removeBox(chart, layoutItem) {\n      const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    configure(chart, item, options) {\n      item.fullSize = options.fullSize;\n      item.position = options.position;\n      item.weight = options.weight;\n    },\n\n    update(chart, width, height, minPadding) {\n      if (!chart) {\n        return;\n      }\n\n      const padding = toPadding(chart.options.layout.padding);\n      const availableWidth = Math.max(width - padding.width, 0);\n      const availableHeight = Math.max(height - padding.height, 0);\n      const boxes = buildLayoutBoxes(chart.boxes);\n      const verticalBoxes = boxes.vertical;\n      const horizontalBoxes = boxes.horizontal;\n      each(chart.boxes, box => {\n        if (typeof box.beforeLayout === 'function') {\n          box.beforeLayout();\n        }\n      });\n      const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n      const params = Object.freeze({\n        outerWidth: width,\n        outerHeight: height,\n        padding,\n        availableWidth,\n        availableHeight,\n        vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n        hBoxMaxHeight: availableHeight / 2\n      });\n      const maxPadding = Object.assign({}, padding);\n      updateMaxPadding(maxPadding, toPadding(minPadding));\n      const chartArea = Object.assign({\n        maxPadding,\n        w: availableWidth,\n        h: availableHeight,\n        x: padding.left,\n        y: padding.top\n      }, padding);\n      const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n      fitBoxes(boxes.fullSize, chartArea, params, stacks);\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n      if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n      }\n\n      handleMaxPadding(chartArea);\n      placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n      chartArea.x += chartArea.w;\n      chartArea.y += chartArea.h;\n      placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n      chart.chartArea = {\n        left: chartArea.left,\n        top: chartArea.top,\n        right: chartArea.left + chartArea.w,\n        bottom: chartArea.top + chartArea.h,\n        height: chartArea.h,\n        width: chartArea.w\n      };\n      each(boxes.chartArea, layout => {\n        const box = layout.box;\n        Object.assign(box, chart.chartArea);\n        box.update(chartArea.w, chartArea.h);\n      });\n    }\n\n  };\n\n  function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n    if (!defined(fallback)) {\n      fallback = _resolve('_fallback', scopes);\n    }\n\n    const cache = {\n      [Symbol.toStringTag]: 'Object',\n      _cacheable: true,\n      _scopes: scopes,\n      _rootScopes: rootScopes,\n      _fallback: fallback,\n      _getTarget: getTarget,\n      override: scope => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback)\n    };\n    return new Proxy(cache, {\n      deleteProperty(target, prop) {\n        delete target[prop];\n        delete target._keys;\n        delete scopes[0][prop];\n        return true;\n      },\n\n      get(target, prop) {\n        return _cached(target, prop, () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n      },\n\n      getOwnPropertyDescriptor(target, prop) {\n        return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n      },\n\n      getPrototypeOf() {\n        return Reflect.getPrototypeOf(scopes[0]);\n      },\n\n      has(target, prop) {\n        return getKeysFromAllScopes(target).includes(prop);\n      },\n\n      ownKeys(target) {\n        return getKeysFromAllScopes(target);\n      },\n\n      set(target, prop, value) {\n        const storage = target._storage || (target._storage = getTarget());\n        storage[prop] = value;\n        delete target[prop];\n        delete target._keys;\n        return true;\n      }\n\n    });\n  }\n\n  function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n      _cacheable: false,\n      _proxy: proxy,\n      _context: context,\n      _subProxy: subProxy,\n      _stack: new Set(),\n      _descriptors: _descriptors(proxy, descriptorDefaults),\n      setContext: ctx => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n      override: scope => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n      deleteProperty(target, prop) {\n        delete target[prop];\n        delete proxy[prop];\n        return true;\n      },\n\n      get(target, prop, receiver) {\n        return _cached(target, prop, () => _resolveWithContext(target, prop, receiver));\n      },\n\n      getOwnPropertyDescriptor(target, prop) {\n        return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n          enumerable: true,\n          configurable: true\n        } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n      },\n\n      getPrototypeOf() {\n        return Reflect.getPrototypeOf(proxy);\n      },\n\n      has(target, prop) {\n        return Reflect.has(proxy, prop);\n      },\n\n      ownKeys() {\n        return Reflect.ownKeys(proxy);\n      },\n\n      set(target, prop, value) {\n        proxy[prop] = value;\n        delete target[prop];\n        return true;\n      }\n\n    });\n  }\n\n  function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n  }) {\n    const {\n      _scriptable = defaults.scriptable,\n      _indexable = defaults.indexable,\n      _allKeys = defaults.allKeys\n    } = proxy;\n    return {\n      allKeys: _allKeys,\n      scriptable: _scriptable,\n      indexable: _indexable,\n      isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n      isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n    };\n  }\n\n  const readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\n\n  const needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters';\n\n  function _cached(target, prop, resolve) {\n    let value = target[prop];\n\n    if (defined(value)) {\n      return value;\n    }\n\n    value = resolve();\n\n    if (defined(value)) {\n      target[prop] = value;\n    }\n\n    return value;\n  }\n\n  function _resolveWithContext(target, prop, receiver) {\n    const {\n      _proxy,\n      _context,\n      _subProxy,\n      _descriptors: descriptors\n    } = target;\n    let value = _proxy[prop];\n\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n      value = _resolveScriptable(prop, value, target, receiver);\n    }\n\n    if (isArray(value) && value.length) {\n      value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n\n    if (needsSubResolver(prop, value)) {\n      value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n\n    return value;\n  }\n\n  function _resolveScriptable(prop, value, target, receiver) {\n    const {\n      _proxy,\n      _context,\n      _subProxy,\n      _stack\n    } = target;\n\n    if (_stack.has(prop)) {\n      throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n\n    _stack.add(prop);\n\n    value = value(_context, _subProxy || receiver);\n\n    _stack.delete(prop);\n\n    if (isObject(value)) {\n      value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n\n    return value;\n  }\n\n  function _resolveArray(prop, value, target, isIndexable) {\n    const {\n      _proxy,\n      _context,\n      _subProxy,\n      _descriptors: descriptors\n    } = target;\n\n    if (defined(_context.index) && isIndexable(prop)) {\n      value = value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n      const arr = value;\n\n      const scopes = _proxy._scopes.filter(s => s !== arr);\n\n      value = [];\n\n      for (const item of arr) {\n        const resolver = createSubResolver(scopes, _proxy, prop, item);\n        value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n      }\n    }\n\n    return value;\n  }\n\n  function resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n  }\n\n  const getScope = (key, parent) => key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\n  function addScopes(set, parentScopes, key, parentFallback) {\n    for (const parent of parentScopes) {\n      const scope = getScope(key, parent);\n\n      if (scope) {\n        set.add(scope);\n        const fallback = resolveFallback(scope._fallback, key, scope);\n\n        if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n          return fallback;\n        }\n      } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n        return null;\n      }\n    }\n\n    return false;\n  }\n\n  function createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [...parentScopes, ...rootScopes];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop);\n\n    if (key === null) {\n      return false;\n    }\n\n    if (defined(fallback) && fallback !== prop) {\n      key = addScopesFromKey(set, allScopes, fallback, key);\n\n      if (key === null) {\n        return false;\n      }\n    }\n\n    return _createResolver(Array.from(set), [''], rootScopes, fallback, () => subGetTarget(resolver, prop, value));\n  }\n\n  function addScopesFromKey(set, allScopes, key, fallback) {\n    while (key) {\n      key = addScopes(set, allScopes, key, fallback);\n    }\n\n    return key;\n  }\n\n  function subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n\n    if (!(prop in parent)) {\n      parent[prop] = {};\n    }\n\n    const target = parent[prop];\n\n    if (isArray(target) && isObject(value)) {\n      return value;\n    }\n\n    return target;\n  }\n\n  function _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n\n    for (const prefix of prefixes) {\n      value = _resolve(readKey(prefix, prop), scopes);\n\n      if (defined(value)) {\n        return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n      }\n    }\n  }\n\n  function _resolve(key, scopes) {\n    for (const scope of scopes) {\n      if (!scope) {\n        continue;\n      }\n\n      const value = scope[key];\n\n      if (defined(value)) {\n        return value;\n      }\n    }\n  }\n\n  function getKeysFromAllScopes(target) {\n    let keys = target._keys;\n\n    if (!keys) {\n      keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n\n    return keys;\n  }\n\n  function resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n\n    for (const scope of scopes) {\n      for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n        set.add(key);\n      }\n    }\n\n    return Array.from(set);\n  }\n\n  const EPSILON = Number.EPSILON || 1e-14;\n\n  const getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\n\n  const getValueAxis = indexAxis => indexAxis === 'x' ? 'y' : 'x';\n\n  function splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01;\n    const fb = t * s12;\n    return {\n      previous: {\n        x: current.x - fa * (next.x - previous.x),\n        y: current.y - fa * (next.y - previous.y)\n      },\n      next: {\n        x: current.x + fb * (next.x - previous.x),\n        y: current.y + fb * (next.y - previous.y)\n      }\n    };\n  }\n\n  function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n\n    for (let i = 0; i < pointsLen - 1; ++i) {\n      pointCurrent = pointAfter;\n      pointAfter = getPoint(points, i + 1);\n\n      if (!pointCurrent || !pointAfter) {\n        continue;\n      }\n\n      if (almostEquals(deltaK[i], 0, EPSILON)) {\n        mK[i] = mK[i + 1] = 0;\n        continue;\n      }\n\n      alphaK = mK[i] / deltaK[i];\n      betaK = mK[i + 1] / deltaK[i];\n      squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n      if (squaredMagnitude <= 9) {\n        continue;\n      }\n\n      tauK = 3 / Math.sqrt(squaredMagnitude);\n      mK[i] = alphaK * tauK * deltaK[i];\n      mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n  }\n\n  function monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n\n    for (let i = 0; i < pointsLen; ++i) {\n      pointBefore = pointCurrent;\n      pointCurrent = pointAfter;\n      pointAfter = getPoint(points, i + 1);\n\n      if (!pointCurrent) {\n        continue;\n      }\n\n      const iPixel = pointCurrent[indexAxis];\n      const vPixel = pointCurrent[valueAxis];\n\n      if (pointBefore) {\n        delta = (iPixel - pointBefore[indexAxis]) / 3;\n        pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n        pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n      }\n\n      if (pointAfter) {\n        delta = (pointAfter[indexAxis] - iPixel) / 3;\n        pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n        pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n      }\n    }\n  }\n\n  function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointBefore = pointCurrent;\n      pointCurrent = pointAfter;\n      pointAfter = getPoint(points, i + 1);\n\n      if (!pointCurrent) {\n        continue;\n      }\n\n      if (pointAfter) {\n        const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n        deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n      }\n\n      mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n  }\n\n  function capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n  }\n\n  function capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n\n    let inAreaNext = _isPointInArea(points[0], area);\n\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      inAreaPrev = inArea;\n      inArea = inAreaNext;\n      inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n\n      if (!inArea) {\n        continue;\n      }\n\n      point = points[i];\n\n      if (inAreaPrev) {\n        point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n        point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n      }\n\n      if (inAreaNext) {\n        point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n        point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n      }\n    }\n  }\n\n  function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n\n    if (options.spanGaps) {\n      points = points.filter(pt => !pt.skip);\n    }\n\n    if (options.cubicInterpolationMode === 'monotone') {\n      splineCurveMonotone(points, indexAxis);\n    } else {\n      let prev = loop ? points[points.length - 1] : points[0];\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        point = points[i];\n        controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n        point.cp1x = controlPoints.previous.x;\n        point.cp1y = controlPoints.previous.y;\n        point.cp2x = controlPoints.next.x;\n        point.cp2y = controlPoints.next.y;\n        prev = point;\n      }\n    }\n\n    if (options.capBezierPoints) {\n      capBezierPoints(points, area);\n    }\n  }\n\n  const atEdge = t => t === 0 || t === 1;\n\n  const elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\n\n  const elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n  const effects = {\n    linear: t => t,\n    easeInQuad: t => t * t,\n    easeOutQuad: t => -t * (t - 2),\n    easeInOutQuad: t => (t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: t => t * t * t,\n    easeOutCubic: t => (t -= 1) * t * t + 1,\n    easeInOutCubic: t => (t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: t => t * t * t * t,\n    easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n    easeInOutQuart: t => (t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: t => t * t * t * t * t,\n    easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: t => (t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n    easeOutSine: t => Math.sin(t * HALF_PI),\n    easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: t => t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: t => t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: t => atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: t => t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: t => (t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n    easeInOutElastic(t) {\n      const s = 0.1125;\n      const p = 0.45;\n      return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n\n    easeInBack(t) {\n      const s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n\n    easeOutBack(t) {\n      const s = 1.70158;\n      return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n\n    easeInOutBack(t) {\n      let s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n\n    easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n\n    easeOutBounce(t) {\n      const m = 7.5625;\n      const d = 2.75;\n\n      if (t < 1 / d) {\n        return m * t * t;\n      }\n\n      if (t < 2 / d) {\n        return m * (t -= 1.5 / d) * t + 0.75;\n      }\n\n      if (t < 2.5 / d) {\n        return m * (t -= 2.25 / d) * t + 0.9375;\n      }\n\n      return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n\n    easeInOutBounce: t => t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n  };\n\n  function _pointInLine(p1, p2, t, mode) {\n    return {\n      x: p1.x + t * (p2.x - p1.x),\n      y: p1.y + t * (p2.y - p1.y)\n    };\n  }\n\n  function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n      x: p1.x + t * (p2.x - p1.x),\n      y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n  }\n\n  function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n      x: p1.cp2x,\n      y: p1.cp2y\n    };\n    const cp2 = {\n      x: p2.cp1x,\n      y: p2.cp1y\n    };\n\n    const a = _pointInLine(p1, cp1, t);\n\n    const b = _pointInLine(cp1, cp2, t);\n\n    const c = _pointInLine(cp2, p2, t);\n\n    const d = _pointInLine(a, b, t);\n\n    const e = _pointInLine(b, c, t);\n\n    return _pointInLine(d, e, t);\n  }\n\n  const intlCache = new Map();\n\n  function getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n\n    if (!formatter) {\n      formatter = new Intl.NumberFormat(locale, options);\n      intlCache.set(cacheKey, formatter);\n    }\n\n    return formatter;\n  }\n\n  function formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n  }\n\n  const getRightToLeftAdapter = function (rectX, width) {\n    return {\n      x(x) {\n        return rectX + rectX + width - x;\n      },\n\n      setWidth(w) {\n        width = w;\n      },\n\n      textAlign(align) {\n        if (align === 'center') {\n          return align;\n        }\n\n        return align === 'right' ? 'left' : 'right';\n      },\n\n      xPlus(x, value) {\n        return x - value;\n      },\n\n      leftForLtr(x, itemWidth) {\n        return x - itemWidth;\n      }\n\n    };\n  };\n\n  const getLeftToRightAdapter = function () {\n    return {\n      x(x) {\n        return x;\n      },\n\n      setWidth(w) {},\n\n      textAlign(align) {\n        return align;\n      },\n\n      xPlus(x, value) {\n        return x + value;\n      },\n\n      leftForLtr(x, _itemWidth) {\n        return x;\n      }\n\n    };\n  };\n\n  function getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n  }\n\n  function overrideTextDirection(ctx, direction) {\n    let style, original;\n\n    if (direction === 'ltr' || direction === 'rtl') {\n      style = ctx.canvas.style;\n      original = [style.getPropertyValue('direction'), style.getPropertyPriority('direction')];\n      style.setProperty('direction', direction, 'important');\n      ctx.prevTextDirection = original;\n    }\n  }\n\n  function restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n      delete ctx.prevTextDirection;\n      ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n  }\n\n  function propertyFn(property) {\n    if (property === 'angle') {\n      return {\n        between: _angleBetween,\n        compare: _angleDiff,\n        normalize: _normalizeAngle\n      };\n    }\n\n    return {\n      between: (n, s, e) => n >= Math.min(s, e) && n <= Math.max(e, s),\n      compare: (a, b) => a - b,\n      normalize: x => x\n    };\n  }\n\n  function normalizeSegment({\n    start,\n    end,\n    count,\n    loop,\n    style\n  }) {\n    return {\n      start: start % count,\n      end: end % count,\n      loop: loop && (end - start + 1) % count === 0,\n      style\n    };\n  }\n\n  function getSegment(segment, points, bounds) {\n    const {\n      property,\n      start: startBound,\n      end: endBound\n    } = bounds;\n    const {\n      between,\n      normalize\n    } = propertyFn(property);\n    const count = points.length;\n    let {\n      start,\n      end,\n      loop\n    } = segment;\n    let i, ilen;\n\n    if (loop) {\n      start += count;\n      end += count;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n          break;\n        }\n\n        start--;\n        end--;\n      }\n\n      start %= count;\n      end %= count;\n    }\n\n    if (end < start) {\n      end += count;\n    }\n\n    return {\n      start,\n      end,\n      loop,\n      style: segment.style\n    };\n  }\n\n  function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n      return [segment];\n    }\n\n    const {\n      property,\n      start: startBound,\n      end: endBound\n    } = bounds;\n    const count = points.length;\n    const {\n      compare,\n      between,\n      normalize\n    } = propertyFn(property);\n    const {\n      start,\n      end,\n      loop,\n      style\n    } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n\n    const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n\n    const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n\n    const shouldStart = () => inside || startIsBefore();\n\n    const shouldStop = () => !inside || endIsBefore();\n\n    for (let i = start, prev = start; i <= end; ++i) {\n      point = points[i % count];\n\n      if (point.skip) {\n        continue;\n      }\n\n      value = normalize(point[property]);\n\n      if (value === prevValue) {\n        continue;\n      }\n\n      inside = between(value, startBound, endBound);\n\n      if (subStart === null && shouldStart()) {\n        subStart = compare(value, startBound) === 0 ? i : prev;\n      }\n\n      if (subStart !== null && shouldStop()) {\n        result.push(normalizeSegment({\n          start: subStart,\n          end: i,\n          loop,\n          count,\n          style\n        }));\n        subStart = null;\n      }\n\n      prev = i;\n      prevValue = value;\n    }\n\n    if (subStart !== null) {\n      result.push(normalizeSegment({\n        start: subStart,\n        end,\n        loop,\n        count,\n        style\n      }));\n    }\n\n    return result;\n  }\n\n  function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n\n    for (let i = 0; i < segments.length; i++) {\n      const sub = _boundSegment(segments[i], line.points, bounds);\n\n      if (sub.length) {\n        result.push(...sub);\n      }\n    }\n\n    return result;\n  }\n\n  function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n\n    if (loop && !spanGaps) {\n      while (start < count && !points[start].skip) {\n        start++;\n      }\n    }\n\n    while (start < count && points[start].skip) {\n      start++;\n    }\n\n    start %= count;\n\n    if (loop) {\n      end += start;\n    }\n\n    while (end > start && points[end % count].skip) {\n      end--;\n    }\n\n    end %= count;\n    return {\n      start,\n      end\n    };\n  }\n\n  function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n\n    for (end = start + 1; end <= max; ++end) {\n      const cur = points[end % count];\n\n      if (cur.skip || cur.stop) {\n        if (!prev.skip) {\n          loop = false;\n          result.push({\n            start: start % count,\n            end: (end - 1) % count,\n            loop\n          });\n          start = last = cur.stop ? end : null;\n        }\n      } else {\n        last = end;\n\n        if (prev.skip) {\n          start = end;\n        }\n      }\n\n      prev = cur;\n    }\n\n    if (last !== null) {\n      result.push({\n        start: start % count,\n        end: last % count,\n        loop\n      });\n    }\n\n    return result;\n  }\n\n  function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n\n    if (!count) {\n      return [];\n    }\n\n    const loop = !!line._loop;\n    const {\n      start,\n      end\n    } = findStartAndEnd(points, count, loop, spanGaps);\n\n    if (spanGaps === true) {\n      return splitByStyles(line, [{\n        start,\n        end,\n        loop\n      }], points, segmentOptions);\n    }\n\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n  }\n\n  function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n      return segments;\n    }\n\n    return doSplitByStyles(line, segments, points, segmentOptions);\n  }\n\n  function doSplitByStyles(line, segments, points, segmentOptions) {\n    const baseStyle = readStyle(line.options);\n    const {\n      _datasetIndex: datasetIndex,\n      options: {\n        spanGaps\n      }\n    } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n\n    function addStyle(s, e, l, st) {\n      const dir = spanGaps ? -1 : 1;\n\n      if (s === e) {\n        return;\n      }\n\n      s += count;\n\n      while (points[s % count].skip) {\n        s -= dir;\n      }\n\n      while (points[e % count].skip) {\n        e += dir;\n      }\n\n      if (s % count !== e % count) {\n        result.push({\n          start: s % count,\n          end: e % count,\n          loop: l,\n          style: st\n        });\n        prevStyle = st;\n        start = e % count;\n      }\n    }\n\n    for (const segment of segments) {\n      start = spanGaps ? start : segment.start;\n      let prev = points[start % count];\n      let style;\n\n      for (i = start + 1; i <= segment.end; i++) {\n        const pt = points[i % count];\n        style = readStyle(segmentOptions.setContext({\n          type: 'segment',\n          p0: prev,\n          p1: pt,\n          p0DataIndex: (i - 1) % count,\n          p1DataIndex: i % count,\n          datasetIndex\n        }));\n\n        if (styleChanged(style, prevStyle)) {\n          addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n\n        prev = pt;\n        prevStyle = style;\n      }\n\n      if (start < i - 1) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n    }\n\n    return result;\n  }\n\n  function readStyle(options) {\n    return {\n      backgroundColor: options.backgroundColor,\n      borderCapStyle: options.borderCapStyle,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderJoinStyle: options.borderJoinStyle,\n      borderWidth: options.borderWidth,\n      borderColor: options.borderColor\n    };\n  }\n\n  function styleChanged(style, prevStyle) {\n    return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n  }\n\n  var helpers = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    easingEffects: effects,\n    color: color,\n    getHoverColor: getHoverColor,\n    noop: noop,\n    uid: uid,\n    isNullOrUndef: isNullOrUndef,\n    isArray: isArray,\n    isObject: isObject,\n    isFinite: isNumberFinite,\n    finiteOrDefault: finiteOrDefault,\n    valueOrDefault: valueOrDefault,\n    toPercentage: toPercentage,\n    toDimension: toDimension,\n    callback: callback,\n    each: each,\n    _elementsEqual: _elementsEqual,\n    clone: clone,\n    _merger: _merger,\n    merge: merge,\n    mergeIf: mergeIf,\n    _mergerIf: _mergerIf,\n    _deprecated: _deprecated,\n    resolveObjectKey: resolveObjectKey,\n    _capitalize: _capitalize,\n    defined: defined,\n    isFunction: isFunction,\n    setsEqual: setsEqual,\n    toFontString: toFontString,\n    _measureText: _measureText,\n    _longestText: _longestText,\n    _alignPixel: _alignPixel,\n    clearCanvas: clearCanvas,\n    drawPoint: drawPoint,\n    _isPointInArea: _isPointInArea,\n    clipArea: clipArea,\n    unclipArea: unclipArea,\n    _steppedLineTo: _steppedLineTo,\n    _bezierCurveTo: _bezierCurveTo,\n    renderText: renderText,\n    addRoundedRectPath: addRoundedRectPath,\n    _lookup: _lookup,\n    _lookupByKey: _lookupByKey,\n    _rlookupByKey: _rlookupByKey,\n    _filterBetween: _filterBetween,\n    listenArrayEvents: listenArrayEvents,\n    unlistenArrayEvents: unlistenArrayEvents,\n    _arrayUnique: _arrayUnique,\n    _createResolver: _createResolver,\n    _attachContext: _attachContext,\n    _descriptors: _descriptors,\n    splineCurve: splineCurve,\n    splineCurveMonotone: splineCurveMonotone,\n    _updateBezierControlPoints: _updateBezierControlPoints,\n    _isDomSupported: _isDomSupported,\n    _getParentNode: _getParentNode,\n    getStyle: getStyle,\n    getRelativePosition: getRelativePosition$1,\n    getMaximumSize: getMaximumSize,\n    retinaScale: retinaScale,\n    supportsEventListenerOptions: supportsEventListenerOptions,\n    readUsedSize: readUsedSize,\n    fontString: fontString,\n    requestAnimFrame: requestAnimFrame,\n    throttled: throttled,\n    debounce: debounce,\n    _toLeftRightCenter: _toLeftRightCenter,\n    _alignStartEnd: _alignStartEnd,\n    _textX: _textX,\n    _pointInLine: _pointInLine,\n    _steppedInterpolation: _steppedInterpolation,\n    _bezierInterpolation: _bezierInterpolation,\n    formatNumber: formatNumber,\n    toLineHeight: toLineHeight,\n    _readValueToProps: _readValueToProps,\n    toTRBL: toTRBL,\n    toTRBLCorners: toTRBLCorners,\n    toPadding: toPadding,\n    toFont: toFont,\n    resolve: resolve,\n    _addGrace: _addGrace,\n    PI: PI,\n    TAU: TAU,\n    PITAU: PITAU,\n    INFINITY: INFINITY,\n    RAD_PER_DEG: RAD_PER_DEG,\n    HALF_PI: HALF_PI,\n    QUARTER_PI: QUARTER_PI,\n    TWO_THIRDS_PI: TWO_THIRDS_PI,\n    log10: log10,\n    sign: sign,\n    niceNum: niceNum,\n    _factorize: _factorize,\n    isNumber: isNumber,\n    almostEquals: almostEquals,\n    almostWhole: almostWhole,\n    _setMinAndMaxByKey: _setMinAndMaxByKey,\n    toRadians: toRadians,\n    toDegrees: toDegrees,\n    _decimalPlaces: _decimalPlaces,\n    getAngleFromPoint: getAngleFromPoint,\n    distanceBetweenPoints: distanceBetweenPoints,\n    _angleDiff: _angleDiff,\n    _normalizeAngle: _normalizeAngle,\n    _angleBetween: _angleBetween,\n    _limitValue: _limitValue,\n    _int16Range: _int16Range,\n    getRtlAdapter: getRtlAdapter,\n    overrideTextDirection: overrideTextDirection,\n    restoreTextDirection: restoreTextDirection,\n    _boundSegment: _boundSegment,\n    _boundSegments: _boundSegments,\n    _computeSegments: _computeSegments\n  });\n\n  class BasePlatform {\n    acquireContext(canvas, aspectRatio) {}\n\n    releaseContext(context) {\n      return false;\n    }\n\n    addEventListener(chart, type, listener) {}\n\n    removeEventListener(chart, type, listener) {}\n\n    getDevicePixelRatio() {\n      return 1;\n    }\n\n    getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n\n    isAttached(canvas) {\n      return true;\n    }\n\n  }\n\n  class BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n\n  }\n\n  const EXPANDO_KEY = '$chartjs';\n  const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n\n  const isNullOrEmpty = value => value === null || value === '';\n\n  function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n\n    if (isNullOrEmpty(renderWidth)) {\n      const displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (isNullOrEmpty(renderHeight)) {\n      if (canvas.style.height === '') {\n        canvas.height = canvas.width / (aspectRatio || 2);\n      } else {\n        const displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayHeight !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n\n  const eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const {\n      x,\n      y\n    } = getRelativePosition$1(event, chart);\n    return {\n      type,\n      chart,\n      native: event,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver(entries => {\n      for (const entry of entries) {\n        for (const node of entry.addedNodes) {\n          if (node === canvas || node.contains(canvas)) {\n            return listener();\n          }\n        }\n      }\n    });\n    observer.observe(document, {\n      childList: true,\n      subtree: true\n    });\n    return observer;\n  }\n\n  function createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver(entries => {\n      for (const entry of entries) {\n        for (const node of entry.removedNodes) {\n          if (node === canvas || node.contains(canvas)) {\n            return listener();\n          }\n        }\n      }\n    });\n    observer.observe(document, {\n      childList: true,\n      subtree: true\n    });\n    return observer;\n  }\n\n  const drpListeningCharts = new Map();\n  let oldDevicePixelRatio = 0;\n\n  function onWindowResize() {\n    const dpr = window.devicePixelRatio;\n\n    if (dpr === oldDevicePixelRatio) {\n      return;\n    }\n\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart) => {\n      if (chart.currentDevicePixelRatio !== dpr) {\n        resize();\n      }\n    });\n  }\n\n  function listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n      window.addEventListener('resize', onWindowResize);\n    }\n\n    drpListeningCharts.set(chart, resize);\n  }\n\n  function unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n\n    if (!drpListeningCharts.size) {\n      window.removeEventListener('resize', onWindowResize);\n    }\n  }\n\n  function createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n\n    const container = canvas && _getParentNode(canvas);\n\n    if (!container) {\n      return;\n    }\n\n    const resize = throttled((width, height) => {\n      const w = container.clientWidth;\n      listener(width, height);\n\n      if (w < container.clientWidth) {\n        listener();\n      }\n    }, window);\n    const observer = new ResizeObserver(entries => {\n      const entry = entries[0];\n      const width = entry.contentRect.width;\n      const height = entry.contentRect.height;\n\n      if (width === 0 && height === 0) {\n        return;\n      }\n\n      resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n  }\n\n  function releaseObserver(chart, type, observer) {\n    if (observer) {\n      observer.disconnect();\n    }\n\n    if (type === 'resize') {\n      unlistenDevicePixelRatioChanges(chart);\n    }\n  }\n\n  function createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled(event => {\n      if (chart.ctx !== null) {\n        listener(fromNativeEvent(event, chart));\n      }\n    }, chart, args => {\n      const event = args[0];\n      return [event, event.offsetX, event.offsetY];\n    });\n    addListener(canvas, type, proxy);\n    return proxy;\n  }\n\n  class DomPlatform extends BasePlatform {\n    acquireContext(canvas, aspectRatio) {\n      const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n\n      return null;\n    }\n\n    releaseContext(context) {\n      const canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n\n      const initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(prop => {\n        const value = initial[prop];\n\n        if (isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      const style = initial.style || {};\n      Object.keys(style).forEach(key => {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n\n    addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      const proxies = chart.$proxies || (chart.$proxies = {});\n      const handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      const handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n\n    removeEventListener(chart, type) {\n      const proxies = chart.$proxies || (chart.$proxies = {});\n      const proxy = proxies[type];\n\n      if (!proxy) {\n        return;\n      }\n\n      const handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      const handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n\n    getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n\n    getMaximumSize(canvas, width, height, aspectRatio) {\n      return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n\n    isAttached(canvas) {\n      const container = _getParentNode(canvas);\n\n      return !!(container && container.isConnected);\n    }\n\n  }\n\n  function _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n      return BasicPlatform;\n    }\n\n    return DomPlatform;\n  }\n\n  var platforms = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    _detectPlatform: _detectPlatform,\n    BasePlatform: BasePlatform,\n    BasicPlatform: BasicPlatform,\n    DomPlatform: DomPlatform\n  });\n  const transparent = 'transparent';\n  const interpolators = {\n    boolean(from, to, factor) {\n      return factor > 0.5 ? to : from;\n    },\n\n    color(from, to, factor) {\n      const c0 = color(from || transparent);\n      const c1 = c0.valid && color(to || transparent);\n      return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n\n    number(from, to, factor) {\n      return from + (to - from) * factor;\n    }\n\n  };\n\n  class Animation {\n    constructor(cfg, target, prop, to) {\n      const currentValue = target[prop];\n      to = resolve([cfg.to, to, currentValue, cfg.from]);\n      const from = resolve([cfg.from, currentValue, to]);\n      this._active = true;\n      this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n      this._easing = effects[cfg.easing] || effects.linear;\n      this._start = Math.floor(Date.now() + (cfg.delay || 0));\n      this._duration = this._total = Math.floor(cfg.duration);\n      this._loop = !!cfg.loop;\n      this._target = target;\n      this._prop = prop;\n      this._from = from;\n      this._to = to;\n      this._promises = undefined;\n    }\n\n    active() {\n      return this._active;\n    }\n\n    update(cfg, to, date) {\n      if (this._active) {\n        this._notify(false);\n\n        const currentValue = this._target[this._prop];\n        const elapsed = date - this._start;\n        const remain = this._duration - elapsed;\n        this._start = date;\n        this._duration = Math.floor(Math.max(remain, cfg.duration));\n        this._total += elapsed;\n        this._loop = !!cfg.loop;\n        this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n        this._from = resolve([cfg.from, currentValue, to]);\n      }\n    }\n\n    cancel() {\n      if (this._active) {\n        this.tick(Date.now());\n        this._active = false;\n\n        this._notify(false);\n      }\n    }\n\n    tick(date) {\n      const elapsed = date - this._start;\n      const duration = this._duration;\n      const prop = this._prop;\n      const from = this._from;\n      const loop = this._loop;\n      const to = this._to;\n      let factor;\n      this._active = from !== to && (loop || elapsed < duration);\n\n      if (!this._active) {\n        this._target[prop] = to;\n\n        this._notify(true);\n\n        return;\n      }\n\n      if (elapsed < 0) {\n        this._target[prop] = from;\n        return;\n      }\n\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = this._easing(Math.min(1, Math.max(0, factor)));\n      this._target[prop] = this._fn(from, to, factor);\n    }\n\n    wait() {\n      const promises = this._promises || (this._promises = []);\n      return new Promise((res, rej) => {\n        promises.push({\n          res,\n          rej\n        });\n      });\n    }\n\n    _notify(resolved) {\n      const method = resolved ? 'res' : 'rej';\n      const promises = this._promises || [];\n\n      for (let i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n\n  }\n\n  const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\n  const colors = ['color', 'borderColor', 'backgroundColor'];\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined\n  });\n  const animationOptions = Object.keys(defaults.animation);\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: name => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n  });\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    }\n  });\n  defaults.describe('animations', {\n    _fallback: 'animation'\n  });\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0\n        }\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0\n        }\n      }\n    }\n  });\n\n  class Animations {\n    constructor(chart, config) {\n      this._chart = chart;\n      this._properties = new Map();\n      this.configure(config);\n    }\n\n    configure(config) {\n      if (!isObject(config)) {\n        return;\n      }\n\n      const animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(key => {\n        const cfg = config[key];\n\n        if (!isObject(cfg)) {\n          return;\n        }\n\n        const resolved = {};\n\n        for (const option of animationOptions) {\n          resolved[option] = cfg[option];\n        }\n\n        (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n\n    _animateOptions(target, values) {\n      const newOptions = values.options;\n      const options = resolveTargetOptions(target, newOptions);\n\n      if (!options) {\n        return [];\n      }\n\n      const animations = this._createAnimations(options, newOptions);\n\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(() => {\n          target.options = newOptions;\n        }, () => {});\n      }\n\n      return animations;\n    }\n\n    _createAnimations(target, values) {\n      const animatedProps = this._properties;\n      const animations = [];\n      const running = target.$animations || (target.$animations = {});\n      const props = Object.keys(values);\n      const date = Date.now();\n      let i;\n\n      for (i = props.length - 1; i >= 0; --i) {\n        const prop = props[i];\n\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n\n        if (prop === 'options') {\n          animations.push(...this._animateOptions(target, values));\n          continue;\n        }\n\n        const value = values[prop];\n        let animation = running[prop];\n        const cfg = animatedProps.get(prop);\n\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n\n      return animations;\n    }\n\n    update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n\n      const animations = this._createAnimations(target, values);\n\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n\n  }\n\n  function awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n\n    for (let i = 0; i < keys.length; i++) {\n      const anim = animations[keys[i]];\n\n      if (anim && anim.active()) {\n        running.push(anim.wait());\n      }\n    }\n\n    return Promise.all(running);\n  }\n\n  function resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n      return;\n    }\n\n    let options = target.options;\n\n    if (!options) {\n      target.options = newOptions;\n      return;\n    }\n\n    if (options.$shared) {\n      target.options = options = Object.assign({}, options, {\n        $shared: false,\n        $animations: {}\n      });\n    }\n\n    return options;\n  }\n\n  function scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n      start: reverse ? max : min,\n      end: reverse ? min : max\n    };\n  }\n\n  function defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n      return false;\n    }\n\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n      top: y.end,\n      right: x.end,\n      bottom: y.start,\n      left: x.start\n    };\n  }\n\n  function toClip(value) {\n    let t, r, b, l;\n\n    if (isObject(value)) {\n      t = value.top;\n      r = value.right;\n      b = value.bottom;\n      l = value.left;\n    } else {\n      t = r = b = l = value;\n    }\n\n    return {\n      top: t,\n      right: r,\n      bottom: b,\n      left: l,\n      disabled: value === false\n    };\n  }\n\n  function getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      keys.push(metasets[i].index);\n    }\n\n    return keys;\n  }\n\n  function applyStack(stack, value, dsIndex, options) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n\n    if (value === null) {\n      return;\n    }\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      datasetIndex = +keys[i];\n\n      if (datasetIndex === dsIndex) {\n        if (options.all) {\n          continue;\n        }\n\n        break;\n      }\n\n      otherValue = stack.values[datasetIndex];\n\n      if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n        value += otherValue;\n      }\n    }\n\n    return value;\n  }\n\n  function convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      adata[i] = {\n        x: key,\n        y: data[key]\n      };\n    }\n\n    return adata;\n  }\n\n  function isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n  }\n\n  function getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n  }\n\n  function getUserBounds(scale) {\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = scale.getUserBounds();\n    return {\n      min: minDefined ? min : Number.NEGATIVE_INFINITY,\n      max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n  }\n\n  function getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n  }\n\n  function getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n      const value = stack[meta.index];\n\n      if (positive && value > 0 || !positive && value < 0) {\n        return meta.index;\n      }\n    }\n\n    return null;\n  }\n\n  function updateStacks(controller, parsed) {\n    const {\n      chart,\n      _cachedMeta: meta\n    } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const {\n      iScale,\n      vScale,\n      index: datasetIndex\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n\n    for (let i = 0; i < ilen; ++i) {\n      const item = parsed[i];\n      const {\n        [iAxis]: index,\n        [vAxis]: value\n      } = item;\n      const itemStacks = item._stacks || (item._stacks = {});\n      stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n      stack[datasetIndex] = value;\n      stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n      stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n    }\n  }\n\n  function getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n  }\n\n  function createDatasetContext(parent, index) {\n    return Object.assign(Object.create(parent), {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    });\n  }\n\n  function createDataContext(parent, index, element) {\n    return Object.assign(Object.create(parent), {\n      active: false,\n      dataIndex: index,\n      parsed: undefined,\n      raw: undefined,\n      element,\n      index,\n      mode: 'default',\n      type: 'data'\n    });\n  }\n\n  function clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n\n    if (!axis) {\n      return;\n    }\n\n    items = items || meta._parsed;\n\n    for (const parsed of items) {\n      const stacks = parsed._stacks;\n\n      if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n        return;\n      }\n\n      delete stacks[axis][datasetIndex];\n    }\n  }\n\n  const isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\n\n  const cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\n\n  class DatasetController {\n    constructor(chart, datasetIndex) {\n      this.chart = chart;\n      this._ctx = chart.ctx;\n      this.index = datasetIndex;\n      this._cachedDataOpts = {};\n      this._cachedMeta = this.getMeta();\n      this._type = this._cachedMeta.type;\n      this.options = undefined;\n      this._parsing = false;\n      this._data = undefined;\n      this._objectData = undefined;\n      this._sharedOptions = undefined;\n      this._drawStart = undefined;\n      this._drawCount = undefined;\n      this.enableOptionSharing = false;\n      this.$context = undefined;\n      this._syncList = [];\n      this.initialize();\n    }\n\n    initialize() {\n      const meta = this._cachedMeta;\n      this.configure();\n      this.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      this.addElements();\n    }\n\n    updateIndex(datasetIndex) {\n      if (this.index !== datasetIndex) {\n        clearStacks(this._cachedMeta);\n      }\n\n      this.index = datasetIndex;\n    }\n\n    linkScales() {\n      const chart = this.chart;\n      const meta = this._cachedMeta;\n      const dataset = this.getDataset();\n\n      const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n      const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      const indexAxis = meta.indexAxis;\n      const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = this.getScaleForId(xid);\n      meta.yScale = this.getScaleForId(yid);\n      meta.rScale = this.getScaleForId(rid);\n      meta.iScale = this.getScaleForId(iid);\n      meta.vScale = this.getScaleForId(vid);\n    }\n\n    getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n\n    getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n\n    getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n\n    _getOtherScale(scale) {\n      const meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n\n    reset() {\n      this._update('reset');\n    }\n\n    _destroy() {\n      const meta = this._cachedMeta;\n\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n\n    _dataCheck() {\n      const dataset = this.getDataset();\n      const data = dataset.data || (dataset.data = []);\n      const _data = this._data;\n\n      if (isObject(data)) {\n        this._data = convertObjectDataToArray(data);\n      } else if (_data !== data) {\n        if (_data) {\n          unlistenArrayEvents(_data, this);\n          const meta = this._cachedMeta;\n          clearStacks(meta);\n          meta._parsed = [];\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, this);\n        }\n\n        this._syncList = [];\n        this._data = data;\n      }\n    }\n\n    addElements() {\n      const meta = this._cachedMeta;\n\n      this._dataCheck();\n\n      if (this.datasetElementType) {\n        meta.dataset = new this.datasetElementType();\n      }\n    }\n\n    buildOrUpdateElements(resetNewElements) {\n      const meta = this._cachedMeta;\n      const dataset = this.getDataset();\n      let stackChanged = false;\n\n      this._dataCheck();\n\n      const oldStacked = meta._stacked;\n      meta._stacked = isStacked(meta.vScale, meta);\n\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n\n      this._resyncElements(resetNewElements);\n\n      if (stackChanged || oldStacked !== meta._stacked) {\n        updateStacks(this, meta._parsed);\n      }\n    }\n\n    configure() {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetScopeKeys(this._type);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n      this.options = config.createResolver(scopes, this.getContext());\n      this._parsing = this.options.parsing;\n    }\n\n    parse(start, count) {\n      const {\n        _cachedMeta: meta,\n        _data: data\n      } = this;\n      const {\n        iScale,\n        _stacked\n      } = meta;\n      const iAxis = iScale.axis;\n      let sorted = start === 0 && count === data.length ? true : meta._sorted;\n      let prev = start > 0 && meta._parsed[start - 1];\n      let i, cur, parsed;\n\n      if (this._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n        parsed = data;\n      } else {\n        if (isArray(data[start])) {\n          parsed = this.parseArrayData(meta, data, start, count);\n        } else if (isObject(data[start])) {\n          parsed = this.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = this.parsePrimitiveData(meta, data, start, count);\n        }\n\n        const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n\n            prev = cur;\n          }\n        }\n\n        meta._sorted = sorted;\n      }\n\n      if (_stacked) {\n        updateStacks(this, parsed);\n      }\n    }\n\n    parsePrimitiveData(meta, data, start, count) {\n      const {\n        iScale,\n        vScale\n      } = meta;\n      const iAxis = iScale.axis;\n      const vAxis = vScale.axis;\n      const labels = iScale.getLabels();\n      const singleScale = iScale === vScale;\n      const parsed = new Array(count);\n      let i, ilen, index;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        parsed[i] = {\n          [iAxis]: singleScale || iScale.parse(labels[index], index),\n          [vAxis]: vScale.parse(data[index], index)\n        };\n      }\n\n      return parsed;\n    }\n\n    parseArrayData(meta, data, start, count) {\n      const {\n        xScale,\n        yScale\n      } = meta;\n      const parsed = new Array(count);\n      let i, ilen, index, item;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n\n      return parsed;\n    }\n\n    parseObjectData(meta, data, start, count) {\n      const {\n        xScale,\n        yScale\n      } = meta;\n      const {\n        xAxisKey = 'x',\n        yAxisKey = 'y'\n      } = this._parsing;\n      const parsed = new Array(count);\n      let i, ilen, index, item;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n        };\n      }\n\n      return parsed;\n    }\n\n    getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n\n    getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n\n    applyStack(scale, parsed, mode) {\n      const chart = this.chart;\n      const meta = this._cachedMeta;\n      const value = parsed[scale.axis];\n      const stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]\n      };\n      return applyStack(stack, value, meta.index, {\n        mode\n      });\n    }\n\n    updateRangeFromParsed(range, scale, parsed, stack) {\n      const parsedValue = parsed[scale.axis];\n      let value = parsedValue === null ? NaN : parsedValue;\n      const values = stack && parsed._stacks[scale.axis];\n\n      if (stack && values) {\n        stack.values = values;\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n        value = applyStack(stack, parsedValue, this._cachedMeta.index, {\n          all: true\n        });\n      }\n\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n\n    getMinMax(scale, canStack) {\n      const meta = this._cachedMeta;\n      const _parsed = meta._parsed;\n      const sorted = meta._sorted && scale === meta.iScale;\n      const ilen = _parsed.length;\n\n      const otherScale = this._getOtherScale(scale);\n\n      const stack = canStack && meta._stacked && {\n        keys: getSortedDatasetIndices(this.chart, true),\n        values: null\n      };\n      const range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      const {\n        min: otherMin,\n        max: otherMax\n      } = getUserBounds(otherScale);\n      let i, value, parsed, otherValue;\n\n      function _skip() {\n        parsed = _parsed[i];\n        value = parsed[scale.axis];\n        otherValue = parsed[otherScale.axis];\n        return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n      }\n\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n\n        if (sorted) {\n          break;\n        }\n      }\n\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n\n          this.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n\n      return range;\n    }\n\n    getAllParsedValues(scale) {\n      const parsed = this._cachedMeta._parsed;\n      const values = [];\n      let i, ilen, value;\n\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n\n        if (isNumberFinite(value)) {\n          values.push(value);\n        }\n      }\n\n      return values;\n    }\n\n    getMaxOverflow() {\n      return false;\n    }\n\n    getLabelAndValue(index) {\n      const meta = this._cachedMeta;\n      const iScale = meta.iScale;\n      const vScale = meta.vScale;\n      const parsed = this.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n\n    _update(mode) {\n      const meta = this._cachedMeta;\n      this.configure();\n      this._cachedDataOpts = {};\n      this.update(mode || 'default');\n      meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n\n    update(mode) {}\n\n    draw() {\n      const ctx = this._ctx;\n      const chart = this.chart;\n      const meta = this._cachedMeta;\n      const elements = meta.data || [];\n      const area = chart.chartArea;\n      const active = [];\n      const start = this._drawStart || 0;\n      const count = this._drawCount || elements.length - start;\n      let i;\n\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n\n      for (i = start; i < start + count; ++i) {\n        const element = elements[i];\n\n        if (element.hidden) {\n          continue;\n        }\n\n        if (element.active) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n\n    getStyle(index, active) {\n      const mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n\n    getContext(index, active, mode) {\n      const dataset = this.getDataset();\n      let context;\n\n      if (index >= 0 && index < this._cachedMeta.data.length) {\n        const element = this._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n        context.parsed = this.getParsed(index);\n        context.raw = dataset.data[index];\n        context.index = context.dataIndex = index;\n      } else {\n        context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n        context.dataset = dataset;\n        context.index = context.datasetIndex = this.index;\n      }\n\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n\n    resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n\n    resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n\n    _resolveElementOptions(elementType, mode = 'default', index) {\n      const active = mode === 'active';\n      const cache = this._cachedDataOpts;\n      const cacheKey = elementType + '-' + mode;\n      const cached = cache[cacheKey];\n      const sharing = this.enableOptionSharing && defined(index);\n\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n\n      const config = this.chart.config;\n      const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n      const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      const names = Object.keys(defaults.elements[elementType]);\n\n      const context = () => this.getContext(index, active);\n\n      const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n\n      return values;\n    }\n\n    _resolveAnimations(index, transition, active) {\n      const chart = this.chart;\n      const cache = this._cachedDataOpts;\n      const cacheKey = `animation-${transition}`;\n      const cached = cache[cacheKey];\n\n      if (cached) {\n        return cached;\n      }\n\n      let options;\n\n      if (chart.options.animation !== false) {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, this.getContext(index, active, transition));\n      }\n\n      const animations = new Animations(chart, options && options.animations);\n\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n\n      return animations;\n    }\n\n    getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n\n    includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n\n    updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n\n    updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n\n    _setStyle(element, index, mode, active) {\n      element.active = active;\n      const options = this.getStyle(index, active);\n\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n\n    removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n\n    setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n\n    _removeDatasetHoverStyle() {\n      const element = this._cachedMeta.dataset;\n\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n\n    _setDatasetHoverStyle() {\n      const element = this._cachedMeta.dataset;\n\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n\n    _resyncElements(resetNewElements) {\n      const data = this._data;\n      const elements = this._cachedMeta.data;\n\n      for (const [method, arg1, arg2] of this._syncList) {\n        this[method](arg1, arg2);\n      }\n\n      this._syncList = [];\n      const numMeta = elements.length;\n      const numData = data.length;\n      const count = Math.min(numData, numMeta);\n\n      if (count) {\n        this.parse(0, count);\n      }\n\n      if (numData > numMeta) {\n        this._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        this._removeElements(numData, numMeta - numData);\n      }\n    }\n\n    _insertElements(start, count, resetNewElements = true) {\n      const meta = this._cachedMeta;\n      const data = meta.data;\n      const end = start + count;\n      let i;\n\n      const move = arr => {\n        arr.length += count;\n\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n\n      move(data);\n\n      for (i = start; i < end; ++i) {\n        data[i] = new this.dataElementType();\n      }\n\n      if (this._parsing) {\n        move(meta._parsed);\n      }\n\n      this.parse(start, count);\n\n      if (resetNewElements) {\n        this.updateElements(data, start, count, 'reset');\n      }\n    }\n\n    updateElements(element, start, count, mode) {}\n\n    _removeElements(start, count) {\n      const meta = this._cachedMeta;\n\n      if (this._parsing) {\n        const removed = meta._parsed.splice(start, count);\n\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n\n      meta.data.splice(start, count);\n    }\n\n    _sync(args) {\n      if (this._parsing) {\n        this._syncList.push(args);\n      } else {\n        const [method, arg1, arg2] = args;\n        this[method](arg1, arg2);\n      }\n    }\n\n    _onDataPush() {\n      const count = arguments.length;\n\n      this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n    }\n\n    _onDataPop() {\n      this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n    }\n\n    _onDataShift() {\n      this._sync(['_removeElements', 0, 1]);\n    }\n\n    _onDataSplice(start, count) {\n      this._sync(['_removeElements', start, count]);\n\n      this._sync(['_insertElements', start, arguments.length - 2]);\n    }\n\n    _onDataUnshift() {\n      this._sync(['_insertElements', 0, arguments.length]);\n    }\n\n  }\n\n  DatasetController.defaults = {};\n  DatasetController.prototype.datasetElementType = null;\n  DatasetController.prototype.dataElementType = null;\n\n  class Element {\n    constructor() {\n      this.x = undefined;\n      this.y = undefined;\n      this.active = false;\n      this.options = undefined;\n      this.$animations = undefined;\n    }\n\n    tooltipPosition(useFinalPosition) {\n      const {\n        x,\n        y\n      } = this.getProps(['x', 'y'], useFinalPosition);\n      return {\n        x,\n        y\n      };\n    }\n\n    hasValue() {\n      return isNumber(this.x) && isNumber(this.y);\n    }\n\n    getProps(props, final) {\n      const anims = this.$animations;\n\n      if (!final || !anims) {\n        return this;\n      }\n\n      const ret = {};\n      props.forEach(prop => {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n      });\n      return ret;\n    }\n\n  }\n\n  Element.defaults = {};\n  Element.defaultRoutes = undefined;\n  const formatters = {\n    values(value) {\n      return isArray(value) ? value : '' + value;\n    },\n\n    numeric(tickValue, index, ticks) {\n      if (tickValue === 0) {\n        return '0';\n      }\n\n      const locale = this.chart.options.locale;\n      let notation;\n      let delta = tickValue;\n\n      if (ticks.length > 1) {\n        const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n\n        if (maxTick < 1e-4 || maxTick > 1e+15) {\n          notation = 'scientific';\n        }\n\n        delta = calculateDelta(tickValue, ticks);\n      }\n\n      const logDelta = log10(Math.abs(delta));\n      const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n      const options = {\n        notation,\n        minimumFractionDigits: numDecimal,\n        maximumFractionDigits: numDecimal\n      };\n      Object.assign(options, this.options.ticks.format);\n      return formatNumber(tickValue, locale, options);\n    },\n\n    logarithmic(tickValue, index, ticks) {\n      if (tickValue === 0) {\n        return '0';\n      }\n\n      const remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n\n      if (remain === 1 || remain === 2 || remain === 5) {\n        return formatters.numeric.call(this, tickValue, index, ticks);\n      }\n\n      return '';\n    }\n\n  };\n\n  function calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n      delta = tickValue - Math.floor(tickValue);\n    }\n\n    return delta;\n  }\n\n  var Ticks = {\n    formatters\n  };\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n    bounds: 'ticks',\n    grace: 0,\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderWidth: 1\n    },\n    title: {\n      display: false,\n      text: '',\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2\n    }\n  });\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.grid', 'borderColor', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: name => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: name => name !== 'borderDash' && name !== 'tickBorderDash'\n  });\n  defaults.describe('scales', {\n    _fallback: 'scale'\n  });\n  defaults.describe('scale.ticks', {\n    _scriptable: name => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: name => name !== 'backdropPadding'\n  });\n\n  function autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n\n    if (numMajorIndices > ticksLimit) {\n      skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n      return newTicks;\n    }\n\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n    if (numMajorIndices > 0) {\n      let i, ilen;\n      const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n      skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n\n      for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n        skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n      }\n\n      skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n      return newTicks;\n    }\n\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n  }\n\n  function determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n\n    const tickLength = scale._tickSize();\n\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n  }\n\n  function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n\n    if (!evenMajorSpacing) {\n      return Math.max(spacing, 1);\n    }\n\n    const factors = _factorize(evenMajorSpacing);\n\n    for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n      const factor = factors[i];\n\n      if (factor > spacing) {\n        return factor;\n      }\n    }\n\n    return Math.max(spacing, 1);\n  }\n\n  function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (ticks[i].major) {\n        result.push(i);\n      }\n    }\n\n    return result;\n  }\n\n  function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n\n    for (i = 0; i < ticks.length; i++) {\n      if (i === next) {\n        newTicks.push(ticks[i]);\n        count++;\n        next = majorIndices[count * spacing];\n      }\n    }\n  }\n\n  function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n\n    if (majorEnd) {\n      length = majorEnd - majorStart;\n      spacing = length / Math.floor(length / spacing);\n    }\n\n    next = start;\n\n    while (next < 0) {\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n\n    for (i = Math.max(start, 0); i < end; i++) {\n      if (i === next) {\n        newTicks.push(ticks[i]);\n        count++;\n        next = Math.round(start + count * spacing);\n      }\n    }\n  }\n\n  function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n\n    if (len < 2) {\n      return false;\n    }\n\n    for (diff = arr[0], i = 1; i < len; ++i) {\n      if (arr[i] - arr[i - 1] !== diff) {\n        return false;\n      }\n    }\n\n    return diff;\n  }\n\n  const reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n\n  const offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\n  function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n\n    for (; i < len; i += increment) {\n      result.push(arr[Math.floor(i)]);\n    }\n\n    return result;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n\n    if (offsetGridLines) {\n      if (length === 1) {\n        offset = Math.max(lineValue - start, end - lineValue);\n      } else if (index === 0) {\n        offset = (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n      }\n\n      lineValue += validIndex < index ? offset : -offset;\n\n      if (lineValue < start - epsilon || lineValue > end + epsilon) {\n        return;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function garbageCollect(caches, length) {\n    each(caches, cache => {\n      const gc = cache.gc;\n      const gcLen = gc.length / 2;\n      let i;\n\n      if (gcLen > length) {\n        for (i = 0; i < gcLen; ++i) {\n          delete cache.data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n    });\n  }\n\n  function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n  }\n\n  function getTitleHeight(options, fallback) {\n    if (!options.display) {\n      return 0;\n    }\n\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n  }\n\n  function createScaleContext(parent, scale) {\n    return Object.assign(Object.create(parent), {\n      scale,\n      type: 'scale'\n    });\n  }\n\n  function createTickContext(parent, index, tick) {\n    return Object.assign(Object.create(parent), {\n      tick,\n      index,\n      type: 'tick'\n    });\n  }\n\n  function titleAlign(align, position, reverse) {\n    let ret = _toLeftRightCenter(align);\n\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n      ret = reverseAlign(ret);\n    }\n\n    return ret;\n  }\n\n  function titleArgs(scale, offset, position, align) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      chart\n    } = scale;\n    const {\n      chartArea,\n      scales\n    } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n\n    if (scale.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n\n      if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n      } else if (position === 'center') {\n        titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n      } else {\n        titleY = offsetFromEdge(scale, position, offset);\n      }\n\n      maxWidth = right - left;\n    } else {\n      if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n      } else if (position === 'center') {\n        titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n      } else {\n        titleX = offsetFromEdge(scale, position, offset);\n      }\n\n      titleY = _alignStartEnd(align, bottom, top);\n      rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n\n  class Scale extends Element {\n    constructor(cfg) {\n      super();\n      this.id = cfg.id;\n      this.type = cfg.type;\n      this.options = undefined;\n      this.ctx = cfg.ctx;\n      this.chart = cfg.chart;\n      this.top = undefined;\n      this.bottom = undefined;\n      this.left = undefined;\n      this.right = undefined;\n      this.width = undefined;\n      this.height = undefined;\n      this._margins = {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      };\n      this.maxWidth = undefined;\n      this.maxHeight = undefined;\n      this.paddingTop = undefined;\n      this.paddingBottom = undefined;\n      this.paddingLeft = undefined;\n      this.paddingRight = undefined;\n      this.axis = undefined;\n      this.labelRotation = undefined;\n      this.min = undefined;\n      this.max = undefined;\n      this._range = undefined;\n      this.ticks = [];\n      this._gridLineItems = null;\n      this._labelItems = null;\n      this._labelSizes = null;\n      this._length = 0;\n      this._maxLength = 0;\n      this._longestTextCache = {};\n      this._startPixel = undefined;\n      this._endPixel = undefined;\n      this._reversePixels = false;\n      this._userMax = undefined;\n      this._userMin = undefined;\n      this._suggestedMax = undefined;\n      this._suggestedMin = undefined;\n      this._ticksLength = 0;\n      this._borderValue = 0;\n      this._cache = {};\n      this._dataLimitsCached = false;\n      this.$context = undefined;\n    }\n\n    init(options) {\n      this.options = options.setContext(this.getContext());\n      this.axis = options.axis;\n      this._userMin = this.parse(options.min);\n      this._userMax = this.parse(options.max);\n      this._suggestedMin = this.parse(options.suggestedMin);\n      this._suggestedMax = this.parse(options.suggestedMax);\n    }\n\n    parse(raw, index) {\n      return raw;\n    }\n\n    getUserBounds() {\n      let {\n        _userMin,\n        _userMax,\n        _suggestedMin,\n        _suggestedMax\n      } = this;\n      _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: finiteOrDefault(_userMin, _suggestedMin),\n        max: finiteOrDefault(_userMax, _suggestedMax),\n        minDefined: isNumberFinite(_userMin),\n        maxDefined: isNumberFinite(_userMax)\n      };\n    }\n\n    getMinMax(canStack) {\n      let {\n        min,\n        max,\n        minDefined,\n        maxDefined\n      } = this.getUserBounds();\n      let range;\n\n      if (minDefined && maxDefined) {\n        return {\n          min,\n          max\n        };\n      }\n\n      const metas = this.getMatchingVisibleMetas();\n\n      for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(this, canStack);\n\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n\n      return {\n        min: finiteOrDefault(min, finiteOrDefault(max, min)),\n        max: finiteOrDefault(max, finiteOrDefault(min, max))\n      };\n    }\n\n    getPadding() {\n      return {\n        left: this.paddingLeft || 0,\n        top: this.paddingTop || 0,\n        right: this.paddingRight || 0,\n        bottom: this.paddingBottom || 0\n      };\n    }\n\n    getTicks() {\n      return this.ticks;\n    }\n\n    getLabels() {\n      const data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n\n    beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n\n    beforeUpdate() {\n      callback(this.options.beforeUpdate, [this]);\n    }\n\n    update(maxWidth, maxHeight, margins) {\n      const tickOpts = this.options.ticks;\n      const sampleSize = tickOpts.sampleSize;\n      this.beforeUpdate();\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      this.ticks = null;\n      this._labelSizes = null;\n      this._gridLineItems = null;\n      this._labelItems = null;\n      this.beforeSetDimensions();\n      this.setDimensions();\n      this.afterSetDimensions();\n      this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n\n      if (!this._dataLimitsCached) {\n        this.beforeDataLimits();\n        this.determineDataLimits();\n        this.afterDataLimits();\n        this._range = _addGrace(this, this.options.grace);\n        this._dataLimitsCached = true;\n      }\n\n      this.beforeBuildTicks();\n      this.ticks = this.buildTicks() || [];\n      this.afterBuildTicks();\n      const samplingEnabled = sampleSize < this.ticks.length;\n\n      this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n      this.configure();\n      this.beforeCalculateLabelRotation();\n      this.calculateLabelRotation();\n      this.afterCalculateLabelRotation();\n\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        this.ticks = autoSkip(this, this.ticks);\n        this._labelSizes = null;\n      }\n\n      if (samplingEnabled) {\n        this._convertTicksToLabels(this.ticks);\n      }\n\n      this.beforeFit();\n      this.fit();\n      this.afterFit();\n      this.afterUpdate();\n    }\n\n    configure() {\n      let reversePixels = this.options.reverse;\n      let startPixel, endPixel;\n\n      if (this.isHorizontal()) {\n        startPixel = this.left;\n        endPixel = this.right;\n      } else {\n        startPixel = this.top;\n        endPixel = this.bottom;\n        reversePixels = !reversePixels;\n      }\n\n      this._startPixel = startPixel;\n      this._endPixel = endPixel;\n      this._reversePixels = reversePixels;\n      this._length = endPixel - startPixel;\n      this._alignToPixels = this.options.alignToPixels;\n    }\n\n    afterUpdate() {\n      callback(this.options.afterUpdate, [this]);\n    }\n\n    beforeSetDimensions() {\n      callback(this.options.beforeSetDimensions, [this]);\n    }\n\n    setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = 0;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = 0;\n        this.bottom = this.height;\n      }\n\n      this.paddingLeft = 0;\n      this.paddingTop = 0;\n      this.paddingRight = 0;\n      this.paddingBottom = 0;\n    }\n\n    afterSetDimensions() {\n      callback(this.options.afterSetDimensions, [this]);\n    }\n\n    _callHooks(name) {\n      this.chart.notifyPlugins(name, this.getContext());\n      callback(this.options[name], [this]);\n    }\n\n    beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n\n    determineDataLimits() {}\n\n    afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n\n    beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n\n    buildTicks() {\n      return [];\n    }\n\n    afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n\n    beforeTickToLabelConversion() {\n      callback(this.options.beforeTickToLabelConversion, [this]);\n    }\n\n    generateTickLabels(ticks) {\n      const tickOpts = this.options.ticks;\n      let i, ilen, tick;\n\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n      }\n    }\n\n    afterTickToLabelConversion() {\n      callback(this.options.afterTickToLabelConversion, [this]);\n    }\n\n    beforeCalculateLabelRotation() {\n      callback(this.options.beforeCalculateLabelRotation, [this]);\n    }\n\n    calculateLabelRotation() {\n      const options = this.options;\n      const tickOpts = options.ticks;\n      const numTicks = this.ticks.length;\n      const minRotation = tickOpts.minRotation || 0;\n      const maxRotation = tickOpts.maxRotation;\n      let labelRotation = minRotation;\n      let tickWidth, maxHeight, maxLabelDiagonal;\n\n      if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n        this.labelRotation = minRotation;\n        return;\n      }\n\n      const labelSizes = this._getLabelSizes();\n\n      const maxLabelWidth = labelSizes.widest.width;\n      const maxLabelHeight = labelSizes.highest.height;\n\n      const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n\n      tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n\n      this.labelRotation = labelRotation;\n    }\n\n    afterCalculateLabelRotation() {\n      callback(this.options.afterCalculateLabelRotation, [this]);\n    }\n\n    beforeFit() {\n      callback(this.options.beforeFit, [this]);\n    }\n\n    fit() {\n      const minSize = {\n        width: 0,\n        height: 0\n      };\n      const {\n        chart,\n        options: {\n          ticks: tickOpts,\n          title: titleOpts,\n          grid: gridOpts\n        }\n      } = this;\n\n      const display = this._isVisible();\n\n      const isHorizontal = this.isHorizontal();\n\n      if (display) {\n        const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n\n        if (isHorizontal) {\n          minSize.width = this.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = this.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n\n        if (tickOpts.display && this.ticks.length) {\n          const {\n            first,\n            last,\n            widest,\n            highest\n          } = this._getLabelSizes();\n\n          const tickPadding = tickOpts.padding * 2;\n          const angleRadians = toRadians(this.labelRotation);\n          const cos = Math.cos(angleRadians);\n          const sin = Math.sin(angleRadians);\n\n          if (isHorizontal) {\n            const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n\n          this._calculatePadding(first, last, sin, cos);\n        }\n      }\n\n      this._handleMargins();\n\n      if (isHorizontal) {\n        this.width = this._length = chart.width - this._margins.left - this._margins.right;\n        this.height = minSize.height;\n      } else {\n        this.width = minSize.width;\n        this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n      }\n    }\n\n    _calculatePadding(first, last, sin, cos) {\n      const {\n        ticks: {\n          align,\n          padding\n        },\n        position\n      } = this.options;\n      const isRotated = this.labelRotation !== 0;\n      const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n      if (this.isHorizontal()) {\n        const offsetLeft = this.getPixelForTick(0) - this.left;\n        const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n        let paddingLeft = 0;\n        let paddingRight = 0;\n\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n\n        this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n        this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n      } else {\n        let paddingTop = last.height / 2;\n        let paddingBottom = first.height / 2;\n\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n\n        this.paddingTop = paddingTop + padding;\n        this.paddingBottom = paddingBottom + padding;\n      }\n    }\n\n    _handleMargins() {\n      if (this._margins) {\n        this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n        this._margins.top = Math.max(this.paddingTop, this._margins.top);\n        this._margins.right = Math.max(this.paddingRight, this._margins.right);\n        this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n      }\n    }\n\n    afterFit() {\n      callback(this.options.afterFit, [this]);\n    }\n\n    isHorizontal() {\n      const {\n        axis,\n        position\n      } = this.options;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n\n    isFullSize() {\n      return this.options.fullSize;\n    }\n\n    _convertTicksToLabels(ticks) {\n      this.beforeTickToLabelConversion();\n      this.generateTickLabels(ticks);\n      let i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        if (isNullOrUndef(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n\n      this.afterTickToLabelConversion();\n    }\n\n    _getLabelSizes() {\n      let labelSizes = this._labelSizes;\n\n      if (!labelSizes) {\n        const sampleSize = this.options.ticks.sampleSize;\n        let ticks = this.ticks;\n\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n\n        this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n      }\n\n      return labelSizes;\n    }\n\n    _computeLabelSizes(ticks, length) {\n      const {\n        ctx,\n        _longestTextCache: caches\n      } = this;\n      const widths = [];\n      const heights = [];\n      let widestLabelSize = 0;\n      let highestLabelSize = 0;\n      let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n      for (i = 0; i < length; ++i) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n\n        if (!isNullOrUndef(label) && !isArray(label)) {\n          width = _measureText(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if (isArray(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n\n            if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n              width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n\n      garbageCollect(caches, length);\n      const widest = widths.indexOf(widestLabelSize);\n      const highest = heights.indexOf(highestLabelSize);\n\n      const valueAt = idx => ({\n        width: widths[idx] || 0,\n        height: heights[idx] || 0\n      });\n\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest),\n        widths,\n        heights\n      };\n    }\n\n    getLabelForValue(value) {\n      return value;\n    }\n\n    getPixelForValue(value, index) {\n      return NaN;\n    }\n\n    getValueForPixel(pixel) {}\n\n    getPixelForTick(index) {\n      const ticks = this.ticks;\n\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n\n      return this.getPixelForValue(ticks[index].value);\n    }\n\n    getPixelForDecimal(decimal) {\n      if (this._reversePixels) {\n        decimal = 1 - decimal;\n      }\n\n      const pixel = this._startPixel + decimal * this._length;\n      return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n\n    getDecimalForPixel(pixel) {\n      const decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n\n    getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n\n    getBaseValue() {\n      const {\n        min,\n        max\n      } = this;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n\n    getContext(index) {\n      const ticks = this.ticks || [];\n\n      if (index >= 0 && index < ticks.length) {\n        const tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n      }\n\n      return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n\n    _tickSize() {\n      const optionTicks = this.options.ticks;\n      const rot = toRadians(this.labelRotation);\n      const cos = Math.abs(Math.cos(rot));\n      const sin = Math.abs(Math.sin(rot));\n\n      const labelSizes = this._getLabelSizes();\n\n      const padding = optionTicks.autoSkipPadding || 0;\n      const w = labelSizes ? labelSizes.widest.width + padding : 0;\n      const h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n\n    _isVisible() {\n      const display = this.options.display;\n\n      if (display !== 'auto') {\n        return !!display;\n      }\n\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n\n    _computeGridLineItems(chartArea) {\n      const axis = this.axis;\n      const chart = this.chart;\n      const options = this.options;\n      const {\n        grid,\n        position\n      } = options;\n      const offset = grid.offset;\n      const isHorizontal = this.isHorizontal();\n      const ticks = this.ticks;\n      const ticksLength = ticks.length + (offset ? 1 : 0);\n      const tl = getTickMarkLength(grid);\n      const items = [];\n      const borderOpts = grid.setContext(this.getContext());\n      const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n      const axisHalfWidth = axisWidth / 2;\n\n      const alignBorderValue = function (pixel) {\n        return _alignPixel(chart, pixel, axisWidth);\n      };\n\n      let borderValue, i, lineValue, alignedLineValue;\n      let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n      if (position === 'top') {\n        borderValue = alignBorderValue(this.bottom);\n        ty1 = this.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(this.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = this.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(this.right);\n        tx1 = this.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(this.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = this.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if (isObject(position)) {\n          const positionAxisID = Object.keys(position)[0];\n          const value = position[positionAxisID];\n          borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if (isObject(position)) {\n          const positionAxisID = Object.keys(position)[0];\n          const value = position[positionAxisID];\n          borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n\n      const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n      const step = Math.max(1, Math.ceil(ticksLength / limit));\n\n      for (i = 0; i < ticksLength; i += step) {\n        const optsAtIndex = grid.setContext(this.getContext(i));\n        const lineWidth = optsAtIndex.lineWidth;\n        const lineColor = optsAtIndex.color;\n        const borderDash = grid.borderDash || [];\n        const borderDashOffset = optsAtIndex.borderDashOffset;\n        const tickWidth = optsAtIndex.tickWidth;\n        const tickColor = optsAtIndex.tickColor;\n        const tickBorderDash = optsAtIndex.tickBorderDash || [];\n        const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(this, i, offset);\n\n        if (lineValue === undefined) {\n          continue;\n        }\n\n        alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n\n        items.push({\n          tx1,\n          ty1,\n          tx2,\n          ty2,\n          x1,\n          y1,\n          x2,\n          y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash,\n          borderDashOffset,\n          tickWidth,\n          tickColor,\n          tickBorderDash,\n          tickBorderDashOffset\n        });\n      }\n\n      this._ticksLength = ticksLength;\n      this._borderValue = borderValue;\n      return items;\n    }\n\n    _computeLabelItems(chartArea) {\n      const axis = this.axis;\n      const options = this.options;\n      const {\n        position,\n        ticks: optionTicks\n      } = options;\n      const isHorizontal = this.isHorizontal();\n      const ticks = this.ticks;\n      const {\n        align,\n        crossAlign,\n        padding,\n        mirror\n      } = optionTicks;\n      const tl = getTickMarkLength(options.grid);\n      const tickAndPadding = tl + padding;\n      const hTickAndPadding = mirror ? -padding : tickAndPadding;\n      const rotation = -toRadians(this.labelRotation);\n      const items = [];\n      let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      let textBaseline = 'middle';\n\n      if (position === 'top') {\n        y = this.bottom - hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = this.top + hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        const ret = this._getYAxisLabelAlignment(tl);\n\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        const ret = this._getYAxisLabelAlignment(tl);\n\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if (isObject(position)) {\n          const positionAxisID = Object.keys(position)[0];\n          const value = position[positionAxisID];\n          y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if (isObject(position)) {\n          const positionAxisID = Object.keys(position)[0];\n          const value = position[positionAxisID];\n          x = this.chart.scales[positionAxisID].getPixelForValue(value);\n        }\n\n        textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n      }\n\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n\n      const labelSizes = this._getLabelSizes();\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        const optsAtIndex = optionTicks.setContext(this.getContext(i));\n        pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n        font = this._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = isArray(label) ? label.length : 1;\n        const halfCount = lineCount / 2;\n        const color = optsAtIndex.color;\n        const strokeColor = optsAtIndex.textStrokeColor;\n        const strokeWidth = optsAtIndex.textStrokeWidth;\n\n        if (isHorizontal) {\n          x = pixel;\n\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n\n          if (mirror) {\n            textOffset *= -1;\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n\n        let backdrop;\n\n        if (optsAtIndex.showLabelBackdrop) {\n          const labelPadding = toPadding(optsAtIndex.backdropPadding);\n          const height = labelSizes.heights[i];\n          const width = labelSizes.widths[i];\n          let top = y + textOffset - labelPadding.top;\n          let left = x - labelPadding.left;\n\n          switch (textBaseline) {\n            case 'middle':\n              top -= height / 2;\n              break;\n\n            case 'bottom':\n              top -= height;\n              break;\n          }\n\n          switch (textAlign) {\n            case 'center':\n              left -= width / 2;\n              break;\n\n            case 'right':\n              left -= width;\n              break;\n          }\n\n          backdrop = {\n            left,\n            top,\n            width: width + labelPadding.width,\n            height: height + labelPadding.height,\n            color: optsAtIndex.backdropColor\n          };\n        }\n\n        items.push({\n          rotation,\n          label,\n          font,\n          color,\n          strokeColor,\n          strokeWidth,\n          textOffset,\n          textAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop\n        });\n      }\n\n      return items;\n    }\n\n    _getXAxisLabelAlignment() {\n      const {\n        position,\n        ticks\n      } = this.options;\n      const rotation = -toRadians(this.labelRotation);\n\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n\n      let align = 'center';\n\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      }\n\n      return align;\n    }\n\n    _getYAxisLabelAlignment(tl) {\n      const {\n        position,\n        ticks: {\n          crossAlign,\n          mirror,\n          padding\n        }\n      } = this.options;\n\n      const labelSizes = this._getLabelSizes();\n\n      const tickAndPadding = tl + padding;\n      const widest = labelSizes.widest.width;\n      let textAlign;\n      let x;\n\n      if (position === 'left') {\n        if (mirror) {\n          x = this.right + padding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x += widest;\n          }\n        } else {\n          x = this.right - tickAndPadding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = this.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          x = this.left + padding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x -= widest;\n          }\n        } else {\n          x = this.left + tickAndPadding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = this.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n\n      return {\n        textAlign,\n        x\n      };\n    }\n\n    _computeLabelArea() {\n      if (this.options.ticks.mirror) {\n        return;\n      }\n\n      const chart = this.chart;\n      const position = this.options.position;\n\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: this.left,\n          bottom: chart.height,\n          right: this.right\n        };\n      }\n\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: this.top,\n          left: 0,\n          bottom: this.bottom,\n          right: chart.width\n        };\n      }\n    }\n\n    drawBackground() {\n      const {\n        ctx,\n        options: {\n          backgroundColor\n        },\n        left,\n        top,\n        width,\n        height\n      } = this;\n\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n\n    getLineWidthForValue(value) {\n      const grid = this.options.grid;\n\n      if (!this._isVisible() || !grid.display) {\n        return 0;\n      }\n\n      const ticks = this.ticks;\n      const index = ticks.findIndex(t => t.value === value);\n\n      if (index >= 0) {\n        const opts = grid.setContext(this.getContext(index));\n        return opts.lineWidth;\n      }\n\n      return 0;\n    }\n\n    drawGrid(chartArea) {\n      const grid = this.options.grid;\n      const ctx = this.ctx;\n\n      const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n\n      let i, ilen;\n\n      const drawLine = (p1, p2, style) => {\n        if (!style.width || !style.color) {\n          return;\n        }\n\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          const item = items[i];\n\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n    }\n\n    drawBorder() {\n      const {\n        chart,\n        ctx,\n        options: {\n          grid\n        }\n      } = this;\n      const borderOpts = grid.setContext(this.getContext());\n      const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n\n      if (!axisWidth) {\n        return;\n      }\n\n      const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n      const borderValue = this._borderValue;\n      let x1, x2, y1, y2;\n\n      if (this.isHorizontal()) {\n        x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n\n      ctx.save();\n      ctx.lineWidth = borderOpts.borderWidth;\n      ctx.strokeStyle = borderOpts.borderColor;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    drawLabels(chartArea) {\n      const optionTicks = this.options.ticks;\n\n      if (!optionTicks.display) {\n        return;\n      }\n\n      const ctx = this.ctx;\n\n      const area = this._computeLabelArea();\n\n      if (area) {\n        clipArea(ctx, area);\n      }\n\n      const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n\n      let i, ilen;\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        const tickFont = item.font;\n        const label = item.label;\n\n        if (item.backdrop) {\n          ctx.fillStyle = item.backdrop.color;\n          ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n        }\n\n        let y = item.textOffset;\n        renderText(ctx, label, 0, y, tickFont, item);\n      }\n\n      if (area) {\n        unclipArea(ctx);\n      }\n    }\n\n    drawTitle() {\n      const {\n        ctx,\n        options: {\n          position,\n          title,\n          reverse\n        }\n      } = this;\n\n      if (!title.display) {\n        return;\n      }\n\n      const font = toFont(title.font);\n      const padding = toPadding(title.padding);\n      const align = title.align;\n      let offset = font.lineHeight / 2;\n\n      if (position === 'bottom' || position === 'center' || isObject(position)) {\n        offset += padding.bottom;\n\n        if (isArray(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n\n      const {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n      } = titleArgs(this, offset, position, align);\n      renderText(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth,\n        rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n\n    draw(chartArea) {\n      if (!this._isVisible()) {\n        return;\n      }\n\n      this.drawBackground();\n      this.drawGrid(chartArea);\n      this.drawBorder();\n      this.drawTitle();\n      this.drawLabels(chartArea);\n    }\n\n    _layers() {\n      const opts = this.options;\n      const tz = opts.ticks && opts.ticks.z || 0;\n      const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n\n      if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw: chartArea => {\n            this.draw(chartArea);\n          }\n        }];\n      }\n\n      return [{\n        z: gz,\n        draw: chartArea => {\n          this.drawBackground();\n          this.drawGrid(chartArea);\n          this.drawTitle();\n        }\n      }, {\n        z: gz + 1,\n        draw: () => {\n          this.drawBorder();\n        }\n      }, {\n        z: tz,\n        draw: chartArea => {\n          this.drawLabels(chartArea);\n        }\n      }];\n    }\n\n    getMatchingVisibleMetas(type) {\n      const metas = this.chart.getSortedVisibleDatasetMetas();\n      const axisID = this.axis + 'AxisID';\n      const result = [];\n      let i, ilen;\n\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        const meta = metas[i];\n\n        if (meta[axisID] === this.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n\n      return result;\n    }\n\n    _resolveTickFontOptions(index) {\n      const opts = this.options.ticks.setContext(this.getContext(index));\n      return toFont(opts.font);\n    }\n\n    _maxDigits() {\n      const fontSize = this._resolveTickFontOptions(0).lineHeight;\n\n      return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n\n  }\n\n  class TypedRegistry {\n    constructor(type, scope, override) {\n      this.type = type;\n      this.scope = scope;\n      this.override = override;\n      this.items = Object.create(null);\n    }\n\n    isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n\n    register(item) {\n      const proto = Object.getPrototypeOf(item);\n      let parentScope;\n\n      if (isIChartComponent(proto)) {\n        parentScope = this.register(proto);\n      }\n\n      const items = this.items;\n      const id = item.id;\n      const scope = this.scope + '.' + id;\n\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n\n      if (id in items) {\n        return scope;\n      }\n\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n\n      if (this.override) {\n        defaults.override(item.id, item.overrides);\n      }\n\n      return scope;\n    }\n\n    get(id) {\n      return this.items[id];\n    }\n\n    unregister(item) {\n      const items = this.items;\n      const id = item.id;\n      const scope = this.scope;\n\n      if (id in items) {\n        delete items[id];\n      }\n\n      if (scope && id in defaults[scope]) {\n        delete defaults[scope][id];\n\n        if (this.override) {\n          delete overrides[id];\n        }\n      }\n    }\n\n  }\n\n  function registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n    defaults.set(scope, itemDefaults);\n\n    if (item.defaultRoutes) {\n      routeDefaults(scope, item.defaultRoutes);\n    }\n\n    if (item.descriptors) {\n      defaults.describe(scope, item.descriptors);\n    }\n  }\n\n  function routeDefaults(scope, routes) {\n    Object.keys(routes).forEach(property => {\n      const propertyParts = property.split('.');\n      const sourceName = propertyParts.pop();\n      const sourceScope = [scope].concat(propertyParts).join('.');\n      const parts = routes[property].split('.');\n      const targetName = parts.pop();\n      const targetScope = parts.join('.');\n      defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n  }\n\n  function isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n  }\n\n  class Registry {\n    constructor() {\n      this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n      this.elements = new TypedRegistry(Element, 'elements');\n      this.plugins = new TypedRegistry(Object, 'plugins');\n      this.scales = new TypedRegistry(Scale, 'scales');\n      this._typedRegistries = [this.controllers, this.scales, this.elements];\n    }\n\n    add(...args) {\n      this._each('register', args);\n    }\n\n    remove(...args) {\n      this._each('unregister', args);\n    }\n\n    addControllers(...args) {\n      this._each('register', args, this.controllers);\n    }\n\n    addElements(...args) {\n      this._each('register', args, this.elements);\n    }\n\n    addPlugins(...args) {\n      this._each('register', args, this.plugins);\n    }\n\n    addScales(...args) {\n      this._each('register', args, this.scales);\n    }\n\n    getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n\n    getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n\n    getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n\n    getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n\n    removeControllers(...args) {\n      this._each('unregister', args, this.controllers);\n    }\n\n    removeElements(...args) {\n      this._each('unregister', args, this.elements);\n    }\n\n    removePlugins(...args) {\n      this._each('unregister', args, this.plugins);\n    }\n\n    removeScales(...args) {\n      this._each('unregister', args, this.scales);\n    }\n\n    _each(method, args, typedRegistry) {\n      [...args].forEach(arg => {\n        const reg = typedRegistry || this._getRegistryForType(arg);\n\n        if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n          this._exec(method, reg, arg);\n        } else {\n          each(arg, item => {\n            const itemReg = typedRegistry || this._getRegistryForType(item);\n\n            this._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n\n    _exec(method, registry, component) {\n      const camelMethod = _capitalize(method);\n\n      callback(component['before' + camelMethod], [], component);\n      registry[method](component);\n      callback(component['after' + camelMethod], [], component);\n    }\n\n    _getRegistryForType(type) {\n      for (let i = 0; i < this._typedRegistries.length; i++) {\n        const reg = this._typedRegistries[i];\n\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n\n      return this.plugins;\n    }\n\n    _get(id, typedRegistry, type) {\n      const item = typedRegistry.get(id);\n\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n\n      return item;\n    }\n\n  }\n\n  var registry = new Registry();\n\n  class PluginService {\n    constructor() {\n      this._init = [];\n    }\n\n    notify(chart, hook, args, filter) {\n      if (hook === 'beforeInit') {\n        this._init = this._createDescriptors(chart, true);\n\n        this._notify(this._init, chart, 'install');\n      }\n\n      const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n\n      const result = this._notify(descriptors, chart, hook, args);\n\n      if (hook === 'destroy') {\n        this._notify(descriptors, chart, 'stop');\n\n        this._notify(this._init, chart, 'uninstall');\n      }\n\n      return result;\n    }\n\n    _notify(descriptors, chart, hook, args) {\n      args = args || {};\n\n      for (const descriptor of descriptors) {\n        const plugin = descriptor.plugin;\n        const method = plugin[hook];\n        const params = [chart, args, descriptor.options];\n\n        if (callback(method, params, plugin) === false && args.cancelable) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    invalidate() {\n      if (!isNullOrUndef(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n\n    _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n\n      const descriptors = this._cache = this._createDescriptors(chart);\n\n      this._notifyStateChanges(chart);\n\n      return descriptors;\n    }\n\n    _createDescriptors(chart, all) {\n      const config = chart && chart.config;\n      const options = valueOrDefault(config.options && config.options.plugins, {});\n      const plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n\n    _notifyStateChanges(chart) {\n      const previousDescriptors = this._oldCache || [];\n      const descriptors = this._cache;\n\n      const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n\n  }\n\n  function allPlugins(config) {\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n\n    for (let i = 0; i < keys.length; i++) {\n      plugins.push(registry.getPlugin(keys[i]));\n    }\n\n    const local = config.plugins || [];\n\n    for (let i = 0; i < local.length; i++) {\n      const plugin = local[i];\n\n      if (plugins.indexOf(plugin) === -1) {\n        plugins.push(plugin);\n      }\n    }\n\n    return plugins;\n  }\n\n  function getOpts(options, all) {\n    if (!all && options === false) {\n      return null;\n    }\n\n    if (options === true) {\n      return {};\n    }\n\n    return options;\n  }\n\n  function createDescriptors(chart, plugins, options, all) {\n    const result = [];\n    const context = chart.getContext();\n\n    for (let i = 0; i < plugins.length; i++) {\n      const plugin = plugins[i];\n      const id = plugin.id;\n      const opts = getOpts(options[id], all);\n\n      if (opts === null) {\n        continue;\n      }\n\n      result.push({\n        plugin,\n        options: pluginOpts(chart.config, plugin, opts, context)\n      });\n    }\n\n    return result;\n  }\n\n  function pluginOpts(config, plugin, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    return config.createResolver(scopes, context, [''], {\n      scriptable: false,\n      indexable: false,\n      allKeys: true\n    });\n  }\n\n  function getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n  }\n\n  function getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n\n    if (id === '_index_') {\n      axis = indexAxis;\n    } else if (id === '_value_') {\n      axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n\n    return axis;\n  }\n\n  function getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n  }\n\n  function axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n      return 'x';\n    }\n\n    if (position === 'left' || position === 'right') {\n      return 'y';\n    }\n  }\n\n  function determineAxis(id, scaleOptions) {\n    if (id === 'x' || id === 'y') {\n      return id;\n    }\n\n    return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n  }\n\n  function mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n      scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const firstIDs = Object.create(null);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach(id => {\n      const scaleConf = configScales[id];\n\n      if (!isObject(scaleConf)) {\n        return console.error(`Invalid scale configuration for scale: ${id}`);\n      }\n\n      if (scaleConf._proxy) {\n        return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n      }\n\n      const axis = determineAxis(id, scaleConf);\n      const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n      const defaultScaleOptions = chartDefaults.scales || {};\n      firstIDs[axis] = firstIDs[axis] || id;\n      scales[id] = mergeIf(Object.create(null), [{\n        axis\n      }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n    });\n    config.data.datasets.forEach(dataset => {\n      const type = dataset.type || config.type;\n      const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n      const datasetDefaults = overrides[type] || {};\n      const defaultScaleOptions = datasetDefaults.scales || {};\n      Object.keys(defaultScaleOptions).forEach(defaultID => {\n        const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n        const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n        scales[id] = scales[id] || Object.create(null);\n        mergeIf(scales[id], [{\n          axis\n        }, configScales[id], defaultScaleOptions[defaultID]]);\n      });\n    });\n    Object.keys(scales).forEach(key => {\n      const scale = scales[key];\n      mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n    });\n    return scales;\n  }\n\n  function initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n  }\n\n  function initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n  }\n\n  function initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n  }\n\n  const keyCache = new Map();\n  const keysCached = new Set();\n\n  function cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n\n    if (!keys) {\n      keys = generate();\n      keyCache.set(cacheKey, keys);\n      keysCached.add(keys);\n    }\n\n    return keys;\n  }\n\n  const addIfFound = (set, obj, key) => {\n    const opts = resolveObjectKey(obj, key);\n\n    if (opts !== undefined) {\n      set.add(opts);\n    }\n  };\n\n  class Config {\n    constructor(config) {\n      this._config = initConfig(config);\n      this._scopeCache = new Map();\n      this._resolverCache = new Map();\n    }\n\n    get platform() {\n      return this._config.platform;\n    }\n\n    get type() {\n      return this._config.type;\n    }\n\n    set type(type) {\n      this._config.type = type;\n    }\n\n    get data() {\n      return this._config.data;\n    }\n\n    set data(data) {\n      this._config.data = initData(data);\n    }\n\n    get options() {\n      return this._config.options;\n    }\n\n    set options(options) {\n      this._config.options = options;\n    }\n\n    get plugins() {\n      return this._config.plugins;\n    }\n\n    update() {\n      const config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n\n    clearCache() {\n      this._scopeCache.clear();\n\n      this._resolverCache.clear();\n    }\n\n    datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n    }\n\n    datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n    }\n\n    datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n    }\n\n    pluginScopeKeys(plugin) {\n      const id = plugin.id;\n      const type = this.type;\n      return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n    }\n\n    _cachedScopes(mainScope, resetCache) {\n      const _scopeCache = this._scopeCache;\n\n      let cache = _scopeCache.get(mainScope);\n\n      if (!cache || resetCache) {\n        cache = new Map();\n\n        _scopeCache.set(mainScope, cache);\n      }\n\n      return cache;\n    }\n\n    getOptionScopes(mainScope, keyLists, resetCache) {\n      const {\n        options,\n        type\n      } = this;\n\n      const cache = this._cachedScopes(mainScope, resetCache);\n\n      const cached = cache.get(keyLists);\n\n      if (cached) {\n        return cached;\n      }\n\n      const scopes = new Set();\n      keyLists.forEach(keys => {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(key => addIfFound(scopes, mainScope, key));\n        }\n\n        keys.forEach(key => addIfFound(scopes, options, key));\n        keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n        keys.forEach(key => addIfFound(scopes, defaults, key));\n        keys.forEach(key => addIfFound(scopes, descriptors, key));\n      });\n      const array = Array.from(scopes);\n\n      if (array.length === 0) {\n        array.push(Object.create(null));\n      }\n\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n\n      return array;\n    }\n\n    chartOptionScopes() {\n      const {\n        options,\n        type\n      } = this;\n      return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n        type\n      }, defaults, descriptors];\n    }\n\n    resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n      const result = {\n        $shared: true\n      };\n      const {\n        resolver,\n        subPrefixes\n      } = getResolver(this._resolverCache, scopes, prefixes);\n      let options = resolver;\n\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = isFunction(context) ? context() : context;\n        const subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = _attachContext(resolver, context, subResolver);\n      }\n\n      for (const prop of names) {\n        result[prop] = options[prop];\n      }\n\n      return result;\n    }\n\n    createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n      const {\n        resolver\n      } = getResolver(this._resolverCache, scopes, prefixes);\n      return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n\n  }\n\n  function getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n\n    if (!cache) {\n      cache = new Map();\n      resolverCache.set(scopes, cache);\n    }\n\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n\n    if (!cached) {\n      const resolver = _createResolver(scopes, prefixes);\n\n      cached = {\n        resolver,\n        subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n      };\n      cache.set(cacheKey, cached);\n    }\n\n    return cached;\n  }\n\n  function needContext(proxy, names) {\n    const {\n      isScriptable,\n      isIndexable\n    } = _descriptors(proxy);\n\n    for (const prop of names) {\n      if (isScriptable(prop) && isFunction(proxy[prop]) || isIndexable(prop) && isArray(proxy[prop])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  var version = \"3.5.1\";\n  const KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n\n  function positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n  }\n\n  function compare2Level(l1, l2) {\n    return function (a, b) {\n      return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n  }\n\n  function onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [context], chart);\n  }\n\n  function onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [context], chart);\n  }\n\n  function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n      item = document.getElementById(item);\n    } else if (item && item.length) {\n      item = item[0];\n    }\n\n    if (item && item.canvas) {\n      item = item.canvas;\n    }\n\n    return item;\n  }\n\n  const instances = {};\n\n  const getChart = key => {\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter(c => c.canvas === canvas).pop();\n  };\n\n  class Chart {\n    constructor(item, userConfig) {\n      const config = this.config = new Config(userConfig);\n      const initialCanvas = getCanvas(item);\n      const existingChart = getChart(initialCanvas);\n\n      if (existingChart) {\n        throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n      }\n\n      const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n      this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n      const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n      const canvas = context && context.canvas;\n      const height = canvas && canvas.height;\n      const width = canvas && canvas.width;\n      this.id = uid();\n      this.ctx = context;\n      this.canvas = canvas;\n      this.width = width;\n      this.height = height;\n      this._options = options;\n      this._aspectRatio = this.aspectRatio;\n      this._layers = [];\n      this._metasets = [];\n      this._stacks = undefined;\n      this.boxes = [];\n      this.currentDevicePixelRatio = undefined;\n      this.chartArea = undefined;\n      this._active = [];\n      this._lastEvent = undefined;\n      this._listeners = {};\n      this._responsiveListeners = undefined;\n      this._sortedMetasets = [];\n      this.scales = {};\n      this._plugins = new PluginService();\n      this.$proxies = {};\n      this._hiddenIndices = {};\n      this.attached = false;\n      this._animationsDisabled = undefined;\n      this.$context = undefined;\n      this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n      instances[this.id] = this;\n\n      if (!context || !canvas) {\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      animator.listen(this, 'complete', onAnimationsComplete);\n      animator.listen(this, 'progress', onAnimationProgress);\n\n      this._initialize();\n\n      if (this.attached) {\n        this.update();\n      }\n    }\n\n    get aspectRatio() {\n      const {\n        options: {\n          aspectRatio,\n          maintainAspectRatio\n        },\n        width,\n        height,\n        _aspectRatio\n      } = this;\n\n      if (!isNullOrUndef(aspectRatio)) {\n        return aspectRatio;\n      }\n\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n\n      return height ? width / height : null;\n    }\n\n    get data() {\n      return this.config.data;\n    }\n\n    set data(data) {\n      this.config.data = data;\n    }\n\n    get options() {\n      return this._options;\n    }\n\n    set options(options) {\n      this.config.options = options;\n    }\n\n    _initialize() {\n      this.notifyPlugins('beforeInit');\n\n      if (this.options.responsive) {\n        this.resize();\n      } else {\n        retinaScale(this, this.options.devicePixelRatio);\n      }\n\n      this.bindEvents();\n      this.notifyPlugins('afterInit');\n      return this;\n    }\n\n    clear() {\n      clearCanvas(this.canvas, this.ctx);\n      return this;\n    }\n\n    stop() {\n      animator.stop(this);\n      return this;\n    }\n\n    resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width,\n          height\n        };\n      }\n    }\n\n    _resize(width, height) {\n      const options = this.options;\n      const canvas = this.canvas;\n      const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n      const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n      const mode = this.width ? 'resize' : 'attach';\n      this.width = newSize.width;\n      this.height = newSize.height;\n      this._aspectRatio = this.aspectRatio;\n\n      if (!retinaScale(this, newRatio, true)) {\n        return;\n      }\n\n      this.notifyPlugins('resize', {\n        size: newSize\n      });\n      callback(options.onResize, [this, newSize], this);\n\n      if (this.attached) {\n        if (this._doResize(mode)) {\n          this.render();\n        }\n      }\n    }\n\n    ensureScalesHaveIDs() {\n      const options = this.options;\n      const scalesOptions = options.scales || {};\n      each(scalesOptions, (axisOptions, axisID) => {\n        axisOptions.id = axisID;\n      });\n    }\n\n    buildOrUpdateScales() {\n      const options = this.options;\n      const scaleOpts = options.scales;\n      const scales = this.scales;\n      const updated = Object.keys(scales).reduce((obj, id) => {\n        obj[id] = false;\n        return obj;\n      }, {});\n      let items = [];\n\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(id => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n\n      each(items, item => {\n        const scaleOptions = item.options;\n        const id = scaleOptions.id;\n        const axis = determineAxis(id, scaleOptions);\n        const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        let scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          const scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id,\n            type: scaleType,\n            ctx: this.ctx,\n            chart: this\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.init(scaleOptions, options);\n      });\n      each(updated, (hasUpdated, id) => {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      each(scales, scale => {\n        layouts.configure(this, scale, scale.options);\n        layouts.addBox(this, scale);\n      });\n    }\n\n    _updateMetasets() {\n      const metasets = this._metasets;\n      const numData = this.data.datasets.length;\n      const numMeta = metasets.length;\n      metasets.sort((a, b) => a.index - b.index);\n\n      if (numMeta > numData) {\n        for (let i = numData; i < numMeta; ++i) {\n          this._destroyDatasetMeta(i);\n        }\n\n        metasets.splice(numData, numMeta - numData);\n      }\n\n      this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n\n    _removeUnreferencedMetasets() {\n      const {\n        _metasets: metasets,\n        data: {\n          datasets\n        }\n      } = this;\n\n      if (metasets.length > datasets.length) {\n        delete this._stacks;\n      }\n\n      metasets.forEach((meta, index) => {\n        if (datasets.filter(x => x === meta._dataset).length === 0) {\n          this._destroyDatasetMeta(index);\n        }\n      });\n    }\n\n    buildOrUpdateControllers() {\n      const newControllers = [];\n      const datasets = this.data.datasets;\n      let i, ilen;\n\n      this._removeUnreferencedMetasets();\n\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        const dataset = datasets[i];\n        let meta = this.getDatasetMeta(i);\n        const type = dataset.type || this.config.type;\n\n        if (meta.type && meta.type !== type) {\n          this._destroyDatasetMeta(i);\n\n          meta = this.getDatasetMeta(i);\n        }\n\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n        meta.order = dataset.order || 0;\n        meta.index = i;\n        meta.label = '' + dataset.label;\n        meta.visible = this.isDatasetVisible(i);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          const ControllerClass = registry.getController(type);\n          const {\n            datasetElementType,\n            dataElementType\n          } = defaults.datasets[type];\n          Object.assign(ControllerClass.prototype, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(this, i);\n          newControllers.push(meta.controller);\n        }\n      }\n\n      this._updateMetasets();\n\n      return newControllers;\n    }\n\n    _resetElements() {\n      each(this.data.datasets, (dataset, datasetIndex) => {\n        this.getDatasetMeta(datasetIndex).controller.reset();\n      }, this);\n    }\n\n    reset() {\n      this._resetElements();\n\n      this.notifyPlugins('reset');\n    }\n\n    update(mode) {\n      const config = this.config;\n      config.update();\n      this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n      each(this.scales, scale => {\n        layouts.removeBox(this, scale);\n      });\n      const animsDisabled = this._animationsDisabled = !this.options.animation;\n      this.ensureScalesHaveIDs();\n      this.buildOrUpdateScales();\n      const existingEvents = new Set(Object.keys(this._listeners));\n      const newEvents = new Set(this.options.events);\n\n      if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== this.options.responsive) {\n        this.unbindEvents();\n        this.bindEvents();\n      }\n\n      this._plugins.invalidate();\n\n      if (this.notifyPlugins('beforeUpdate', {\n        mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      const newControllers = this.buildOrUpdateControllers();\n      this.notifyPlugins('beforeElementsUpdate');\n      let minPadding = 0;\n\n      for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n        const {\n          controller\n        } = this.getDatasetMeta(i);\n        const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n\n      this._minPadding = minPadding;\n\n      this._updateLayout(minPadding);\n\n      if (!animsDisabled) {\n        each(newControllers, controller => {\n          controller.reset();\n        });\n      }\n\n      this._updateDatasets(mode);\n\n      this.notifyPlugins('afterUpdate', {\n        mode\n      });\n\n      this._layers.sort(compare2Level('z', '_idx'));\n\n      if (this._lastEvent) {\n        this._eventHandler(this._lastEvent, true);\n      }\n\n      this.render();\n    }\n\n    _updateLayout(minPadding) {\n      if (this.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      layouts.update(this, this.width, this.height, minPadding);\n      const area = this.chartArea;\n      const noArea = area.width <= 0 || area.height <= 0;\n      this._layers = [];\n      each(this.boxes, box => {\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n\n        if (box.configure) {\n          box.configure();\n        }\n\n        this._layers.push(...box._layers());\n      }, this);\n\n      this._layers.forEach((item, index) => {\n        item._idx = index;\n      });\n\n      this.notifyPlugins('afterLayout');\n    }\n\n    _updateDatasets(mode) {\n      const isFunction = typeof mode === 'function';\n\n      if (this.notifyPlugins('beforeDatasetsUpdate', {\n        mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this._updateDataset(i, isFunction ? mode({\n          datasetIndex: i\n        }) : mode);\n      }\n\n      this.notifyPlugins('afterDatasetsUpdate', {\n        mode\n      });\n    }\n\n    _updateDataset(index, mode) {\n      const meta = this.getDatasetMeta(index);\n      const args = {\n        meta,\n        index,\n        mode,\n        cancelable: true\n      };\n\n      if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n\n      meta.controller._update(mode);\n\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetUpdate', args);\n    }\n\n    render() {\n      if (this.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      if (animator.has(this)) {\n        if (this.attached && !animator.running(this)) {\n          animator.start(this);\n        }\n      } else {\n        this.draw();\n        onAnimationsComplete({\n          chart: this\n        });\n      }\n    }\n\n    draw() {\n      let i;\n\n      if (this._resizeBeforeDraw) {\n        const {\n          width,\n          height\n        } = this._resizeBeforeDraw;\n\n        this._resize(width, height);\n\n        this._resizeBeforeDraw = null;\n      }\n\n      this.clear();\n\n      if (this.width <= 0 || this.height <= 0) {\n        return;\n      }\n\n      if (this.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      const layers = this._layers;\n\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n\n      this._drawDatasets();\n\n      for (; i < layers.length; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n\n      this.notifyPlugins('afterDraw');\n    }\n\n    _getSortedDatasetMetas(filterVisible) {\n      const metasets = this._sortedMetasets;\n      const result = [];\n      let i, ilen;\n\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        const meta = metasets[i];\n\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n\n      return result;\n    }\n\n    getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n\n    _drawDatasets() {\n      if (this.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      const metasets = this.getSortedVisibleDatasetMetas();\n\n      for (let i = metasets.length - 1; i >= 0; --i) {\n        this._drawDataset(metasets[i]);\n      }\n\n      this.notifyPlugins('afterDatasetsDraw');\n    }\n\n    _drawDataset(meta) {\n      const ctx = this.ctx;\n      const clip = meta._clip;\n      const useClip = !clip.disabled;\n      const area = this.chartArea;\n      const args = {\n        meta,\n        index: meta.index,\n        cancelable: true\n      };\n\n      if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n\n      if (useClip) {\n        clipArea(ctx, {\n          left: clip.left === false ? 0 : area.left - clip.left,\n          right: clip.right === false ? this.width : area.right + clip.right,\n          top: clip.top === false ? 0 : area.top - clip.top,\n          bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n        });\n      }\n\n      meta.controller.draw();\n\n      if (useClip) {\n        unclipArea(ctx);\n      }\n\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetDraw', args);\n    }\n\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      const method = Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n\n      return [];\n    }\n\n    getDatasetMeta(datasetIndex) {\n      const dataset = this.data.datasets[datasetIndex];\n      const metasets = this._metasets;\n      let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n      if (!meta) {\n        meta = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n        metasets.push(meta);\n      }\n\n      return meta;\n    }\n\n    getContext() {\n      return this.$context || (this.$context = {\n        chart: this,\n        type: 'chart'\n      });\n    }\n\n    getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n\n    isDatasetVisible(datasetIndex) {\n      const dataset = this.data.datasets[datasetIndex];\n\n      if (!dataset) {\n        return false;\n      }\n\n      const meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n\n    setDatasetVisibility(datasetIndex, visible) {\n      const meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n\n    toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n\n    getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n\n    _updateVisibility(datasetIndex, dataIndex, visible) {\n      const mode = visible ? 'show' : 'hide';\n      const meta = this.getDatasetMeta(datasetIndex);\n\n      const anims = meta.controller._resolveAnimations(undefined, mode);\n\n      if (defined(dataIndex)) {\n        meta.data[dataIndex].hidden = !visible;\n        this.update();\n      } else {\n        this.setDatasetVisibility(datasetIndex, visible);\n        anims.update(meta, {\n          visible\n        });\n        this.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n      }\n    }\n\n    hide(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n\n    show(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n\n    _destroyDatasetMeta(datasetIndex) {\n      const meta = this._metasets && this._metasets[datasetIndex];\n\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n\n        delete this._metasets[datasetIndex];\n      }\n    }\n\n    _stop() {\n      let i, ilen;\n      this.stop();\n      animator.remove(this);\n\n      for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n    }\n\n    destroy() {\n      const {\n        canvas,\n        ctx\n      } = this;\n\n      this._stop();\n\n      this.config.clearCache();\n\n      if (canvas) {\n        this.unbindEvents();\n        clearCanvas(canvas, ctx);\n        this.platform.releaseContext(ctx);\n        this.canvas = null;\n        this.ctx = null;\n      }\n\n      this.notifyPlugins('destroy');\n      delete instances[this.id];\n    }\n\n    toBase64Image(...args) {\n      return this.canvas.toDataURL(...args);\n    }\n\n    bindEvents() {\n      this.bindUserEvents();\n\n      if (this.options.responsive) {\n        this.bindResponsiveEvents();\n      } else {\n        this.attached = true;\n      }\n    }\n\n    bindUserEvents() {\n      const listeners = this._listeners;\n      const platform = this.platform;\n\n      const _add = (type, listener) => {\n        platform.addEventListener(this, type, listener);\n        listeners[type] = listener;\n      };\n\n      const listener = (e, x, y) => {\n        e.offsetX = x;\n        e.offsetY = y;\n\n        this._eventHandler(e);\n      };\n\n      each(this.options.events, type => _add(type, listener));\n    }\n\n    bindResponsiveEvents() {\n      if (!this._responsiveListeners) {\n        this._responsiveListeners = {};\n      }\n\n      const listeners = this._responsiveListeners;\n      const platform = this.platform;\n\n      const _add = (type, listener) => {\n        platform.addEventListener(this, type, listener);\n        listeners[type] = listener;\n      };\n\n      const _remove = (type, listener) => {\n        if (listeners[type]) {\n          platform.removeEventListener(this, type, listener);\n          delete listeners[type];\n        }\n      };\n\n      const listener = (width, height) => {\n        if (this.canvas) {\n          this.resize(width, height);\n        }\n      };\n\n      let detached;\n\n      const attached = () => {\n        _remove('attach', attached);\n\n        this.attached = true;\n        this.resize();\n\n        _add('resize', listener);\n\n        _add('detach', detached);\n      };\n\n      detached = () => {\n        this.attached = false;\n\n        _remove('resize', listener);\n\n        this._stop();\n\n        this._resize(0, 0);\n\n        _add('attach', attached);\n      };\n\n      if (platform.isAttached(this.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    }\n\n    unbindEvents() {\n      each(this._listeners, (listener, type) => {\n        this.platform.removeEventListener(this, type, listener);\n      });\n      this._listeners = {};\n      each(this._responsiveListeners, (listener, type) => {\n        this.platform.removeEventListener(this, type, listener);\n      });\n      this._responsiveListeners = undefined;\n    }\n\n    updateHoverStyle(items, mode, enabled) {\n      const prefix = enabled ? 'set' : 'remove';\n      let meta, item, i, ilen;\n\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n\n    getActiveElements() {\n      return this._active || [];\n    }\n\n    setActiveElements(activeElements) {\n      const lastActive = this._active || [];\n      const active = activeElements.map(({\n        datasetIndex,\n        index\n      }) => {\n        const meta = this.getDatasetMeta(datasetIndex);\n\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n\n        return {\n          datasetIndex,\n          element: meta.data[index],\n          index\n        };\n      });\n      const changed = !_elementsEqual(active, lastActive);\n\n      if (changed) {\n        this._active = active;\n\n        this._updateHoverStyles(active, lastActive);\n      }\n    }\n\n    notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n\n    _updateHoverStyles(active, lastActive, replay) {\n      const hoverOptions = this.options.hover;\n\n      const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n\n      const deactivated = diff(lastActive, active);\n      const activated = replay ? active : diff(active, lastActive);\n\n      if (deactivated.length) {\n        this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n\n      if (activated.length && hoverOptions.mode) {\n        this.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n\n    _eventHandler(e, replay) {\n      const args = {\n        event: e,\n        replay,\n        cancelable: true\n      };\n\n      const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.native.type);\n\n      if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n\n      const changed = this._handleEvent(e, replay);\n\n      args.cancelable = false;\n      this.notifyPlugins('afterEvent', args, eventFilter);\n\n      if (changed || args.changed) {\n        this.render();\n      }\n\n      return this;\n    }\n\n    _handleEvent(e, replay) {\n      const {\n        _active: lastActive = [],\n        options\n      } = this;\n      const hoverOptions = options.hover;\n      const useFinalPosition = replay;\n      let active = [];\n      let changed = false;\n      let lastEvent = null;\n\n      if (e.type !== 'mouseout') {\n        active = this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n        lastEvent = e.type === 'click' ? this._lastEvent : e;\n      }\n\n      this._lastEvent = null;\n\n      if (_isPointInArea(e, this.chartArea, this._minPadding)) {\n        callback(options.onHover, [e, active, this], this);\n\n        if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n          callback(options.onClick, [e, active, this], this);\n        }\n      }\n\n      changed = !_elementsEqual(active, lastActive);\n\n      if (changed || replay) {\n        this._active = active;\n\n        this._updateHoverStyles(active, lastActive, replay);\n      }\n\n      this._lastEvent = lastEvent;\n      return changed;\n    }\n\n  }\n\n  const invalidatePlugins = () => each(Chart.instances, chart => chart._plugins.invalidate());\n\n  const enumerable = true;\n  Object.defineProperties(Chart, {\n    defaults: {\n      enumerable,\n      value: defaults\n    },\n    instances: {\n      enumerable,\n      value: instances\n    },\n    overrides: {\n      enumerable,\n      value: overrides\n    },\n    registry: {\n      enumerable,\n      value: registry\n    },\n    version: {\n      enumerable,\n      value: version\n    },\n    getChart: {\n      enumerable,\n      value: getChart\n    },\n    register: {\n      enumerable,\n      value: (...items) => {\n        registry.add(...items);\n        invalidatePlugins();\n      }\n    },\n    unregister: {\n      enumerable,\n      value: (...items) => {\n        registry.remove(...items);\n        invalidatePlugins();\n      }\n    }\n  });\n\n  function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n  }\n\n  class DateAdapter {\n    constructor(options) {\n      this.options = options || {};\n    }\n\n    formats() {\n      return abstract();\n    }\n\n    parse(value, format) {\n      return abstract();\n    }\n\n    format(timestamp, format) {\n      return abstract();\n    }\n\n    add(timestamp, amount, unit) {\n      return abstract();\n    }\n\n    diff(a, b, unit) {\n      return abstract();\n    }\n\n    startOf(timestamp, unit, weekday) {\n      return abstract();\n    }\n\n    endOf(timestamp, unit) {\n      return abstract();\n    }\n\n  }\n\n  DateAdapter.override = function (members) {\n    Object.assign(DateAdapter.prototype, members);\n  };\n\n  var _adapters = {\n    _date: DateAdapter\n  };\n\n  function getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n      const visibleMetas = scale.getMatchingVisibleMetas(type);\n      let values = [];\n\n      for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n        values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n      }\n\n      scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n    }\n\n    return scale._cache.$bar;\n  }\n\n  function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n\n    const updateMinAndPrev = () => {\n      if (curr === 32767 || curr === -32768) {\n        return;\n      }\n\n      if (defined(prev)) {\n        min = Math.min(min, Math.abs(curr - prev) || min);\n      }\n\n      prev = curr;\n    };\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      curr = scale.getPixelForValue(values[i]);\n      updateMinAndPrev();\n    }\n\n    prev = undefined;\n\n    for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      updateMinAndPrev();\n    }\n\n    return min;\n  }\n\n  function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n\n    if (isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      size = thickness * stackCount;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / stackCount,\n      ratio,\n      start: ruler.pixels[index] - size / 2\n    };\n  }\n\n  function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n\n    if (prev === null) {\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      next = curr + curr - prev;\n    }\n\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / stackCount,\n      ratio: options.barPercentage,\n      start\n    };\n  }\n\n  function parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n\n    if (Math.abs(min) > Math.abs(max)) {\n      barStart = max;\n      barEnd = min;\n    }\n\n    item[vScale.axis] = barEnd;\n    item._custom = {\n      barStart,\n      barEnd,\n      start: startValue,\n      end: endValue,\n      min,\n      max\n    };\n  }\n\n  function parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n      parseFloatBar(entry, item, vScale, i);\n    } else {\n      item[vScale.axis] = vScale.parse(entry, i);\n    }\n\n    return item;\n  }\n\n  function parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      entry = data[i];\n      item = {};\n      item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n      parsed.push(parseValue(entry, item, vScale, i));\n    }\n\n    return parsed;\n  }\n\n  function isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n  }\n\n  function barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n      return sign(size);\n    }\n\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n  }\n\n  function borderProps(properties) {\n    let reverse, start, end, top, bottom;\n\n    if (properties.horizontal) {\n      reverse = properties.base > properties.x;\n      start = 'left';\n      end = 'right';\n    } else {\n      reverse = properties.base < properties.y;\n      start = 'bottom';\n      end = 'top';\n    }\n\n    if (reverse) {\n      top = 'end';\n      bottom = 'start';\n    } else {\n      top = 'start';\n      bottom = 'end';\n    }\n\n    return {\n      start,\n      end,\n      reverse,\n      top,\n      bottom\n    };\n  }\n\n  function setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n\n    if (!edge) {\n      properties.borderSkipped = res;\n      return;\n    }\n\n    const {\n      start,\n      end,\n      reverse,\n      top,\n      bottom\n    } = borderProps(properties);\n\n    if (edge === 'middle' && stack) {\n      properties.enableBorderRadius = true;\n\n      if ((stack._top || 0) === index) {\n        edge = top;\n      } else if ((stack._bottom || 0) === index) {\n        edge = bottom;\n      } else {\n        res[parseEdge(bottom, start, end, reverse)] = true;\n        edge = top;\n      }\n    }\n\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n  }\n\n  function parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n      edge = swap(edge, a, b);\n      edge = startEnd(edge, b, a);\n    } else {\n      edge = startEnd(edge, a, b);\n    }\n\n    return edge;\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n  }\n\n  class BarController extends DatasetController {\n    parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n\n    parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n\n    parseObjectData(meta, data, start, count) {\n      const {\n        iScale,\n        vScale\n      } = meta;\n      const {\n        xAxisKey = 'x',\n        yAxisKey = 'y'\n      } = this._parsing;\n      const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      const parsed = [];\n      let i, ilen, item, obj;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n        parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n      }\n\n      return parsed;\n    }\n\n    updateRangeFromParsed(range, scale, parsed, stack) {\n      super.updateRangeFromParsed(range, scale, parsed, stack);\n      const custom = parsed._custom;\n\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n\n    getMaxOverflow() {\n      return 0;\n    }\n\n    getLabelAndValue(index) {\n      const meta = this._cachedMeta;\n      const {\n        iScale,\n        vScale\n      } = meta;\n      const parsed = this.getParsed(index);\n      const custom = parsed._custom;\n      const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value\n      };\n    }\n\n    initialize() {\n      this.enableOptionSharing = true;\n      super.initialize();\n      const meta = this._cachedMeta;\n      meta.stack = this.getDataset().stack;\n    }\n\n    update(mode) {\n      const meta = this._cachedMeta;\n      this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n\n    updateElements(bars, start, count, mode) {\n      const reset = mode === 'reset';\n      const {\n        index,\n        _cachedMeta: {\n          vScale\n        }\n      } = this;\n      const base = vScale.getBasePixel();\n      const horizontal = vScale.isHorizontal();\n\n      const ruler = this._getRuler();\n\n      const firstOpts = this.resolveDataElementOptions(start, mode);\n      const sharedOptions = this.getSharedOptions(firstOpts);\n      const includeOptions = this.includeOptions(mode, sharedOptions);\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n\n      for (let i = start; i < start + count; i++) {\n        const parsed = this.getParsed(i);\n        const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n          base,\n          head: base\n        } : this._calculateBarValuePixels(i);\n\n        const ipixels = this._calculateBarIndexPixels(i, ruler);\n\n        const stack = (parsed._stacks || {})[vScale.axis];\n        const properties = {\n          horizontal,\n          base: vpixels.base,\n          enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n          width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n        };\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n        }\n\n        setBorderSkipped(properties, properties.options || bars[i].options, stack, index);\n        this.updateElement(bars[i], i, properties, mode);\n      }\n    }\n\n    _getStacks(last, dataIndex) {\n      const meta = this._cachedMeta;\n      const iScale = meta.iScale;\n      const metasets = iScale.getMatchingVisibleMetas(this._type);\n      const stacked = iScale.options.stacked;\n      const ilen = metasets.length;\n      const stacks = [];\n      let i, item;\n\n      for (i = 0; i < ilen; ++i) {\n        item = metasets[i];\n\n        if (!item.controller.options.grouped) {\n          continue;\n        }\n\n        if (typeof dataIndex !== 'undefined') {\n          const val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n\n          if (isNullOrUndef(val) || isNaN(val)) {\n            continue;\n          }\n        }\n\n        if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n          stacks.push(item.stack);\n        }\n\n        if (item.index === last) {\n          break;\n        }\n      }\n\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n\n      return stacks;\n    }\n\n    _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n\n    _getStackIndex(datasetIndex, name, dataIndex) {\n      const stacks = this._getStacks(datasetIndex, dataIndex);\n\n      const index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n\n    _getRuler() {\n      const opts = this.options;\n      const meta = this._cachedMeta;\n      const iScale = meta.iScale;\n      const pixels = [];\n      let i, ilen;\n\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n      }\n\n      const barThickness = opts.barThickness;\n      const min = barThickness || computeMinSampleSize(meta);\n      return {\n        min,\n        pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: this._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n\n    _calculateBarValuePixels(index) {\n      const {\n        _cachedMeta: {\n          vScale,\n          _stacked\n        },\n        options: {\n          base: baseValue,\n          minBarLength\n        }\n      } = this;\n      const actualBase = baseValue || 0;\n      const parsed = this.getParsed(index);\n      const custom = parsed._custom;\n      const floating = isFloatBar(custom);\n      let value = parsed[vScale.axis];\n      let start = 0;\n      let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n      let head, size;\n\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n\n        if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n          start = 0;\n        }\n\n        start += value;\n      }\n\n      const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n      let base = vScale.getPixelForValue(startValue);\n\n      if (this.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n\n      size = head - base;\n\n      if (Math.abs(size) < minBarLength) {\n        size = barSign(size, vScale, actualBase) * minBarLength;\n\n        if (value === actualBase) {\n          base -= size / 2;\n        }\n\n        head = base + size;\n      }\n\n      if (base === vScale.getPixelForValue(actualBase)) {\n        const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n        base += halfGrid;\n        size -= halfGrid;\n      }\n\n      return {\n        size,\n        base,\n        head,\n        center: head + size / 2\n      };\n    }\n\n    _calculateBarIndexPixels(index, ruler) {\n      const scale = ruler.scale;\n      const options = this.options;\n      const skipNull = options.skipNull;\n      const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n      let center, size;\n\n      if (ruler.grouped) {\n        const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n        const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n        const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center,\n        size\n      };\n    }\n\n    draw() {\n      const meta = this._cachedMeta;\n      const vScale = meta.vScale;\n      const rects = meta.data;\n      const ilen = rects.length;\n      let i = 0;\n\n      for (; i < ilen; ++i) {\n        if (this.getParsed(i)[vScale.axis] !== null) {\n          rects[i].draw(this._ctx);\n        }\n      }\n    }\n\n  }\n\n  BarController.id = 'bar';\n  BarController.defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n  BarController.overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true\n      }\n    }\n  };\n\n  class BubbleController extends DatasetController {\n    initialize() {\n      this.enableOptionSharing = true;\n      super.initialize();\n    }\n\n    parseObjectData(meta, data, start, count) {\n      const {\n        xScale,\n        yScale\n      } = meta;\n      const {\n        xAxisKey = 'x',\n        yAxisKey = 'y'\n      } = this._parsing;\n      const parsed = [];\n      let i, ilen, item;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        item = data[i];\n        parsed.push({\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n          _custom: item && item.r && +item.r\n        });\n      }\n\n      return parsed;\n    }\n\n    getMaxOverflow() {\n      const {\n        data,\n        _parsed\n      } = this._cachedMeta;\n      let max = 0;\n\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n      }\n\n      return max > 0 && max;\n    }\n\n    getLabelAndValue(index) {\n      const meta = this._cachedMeta;\n      const {\n        xScale,\n        yScale\n      } = meta;\n      const parsed = this.getParsed(index);\n      const x = xScale.getLabelForValue(parsed.x);\n      const y = yScale.getLabelForValue(parsed.y);\n      const r = parsed._custom;\n      return {\n        label: meta.label,\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n\n    update(mode) {\n      const points = this._cachedMeta.data;\n      this.updateElements(points, 0, points.length, mode);\n    }\n\n    updateElements(points, start, count, mode) {\n      const reset = mode === 'reset';\n      const {\n        iScale,\n        vScale\n      } = this._cachedMeta;\n      const firstOpts = this.resolveDataElementOptions(start, mode);\n      const sharedOptions = this.getSharedOptions(firstOpts);\n      const includeOptions = this.includeOptions(mode, sharedOptions);\n      const iAxis = iScale.axis;\n      const vAxis = vScale.axis;\n\n      for (let i = start; i < start + count; i++) {\n        const point = points[i];\n        const parsed = !reset && this.getParsed(i);\n        const properties = {};\n        const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n        const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n        if (includeOptions) {\n          properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n\n        this.updateElement(point, i, properties, mode);\n      }\n\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n\n    resolveDataElementOptions(index, mode) {\n      const parsed = this.getParsed(index);\n      let values = super.resolveDataElementOptions(index, mode);\n\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n\n      const radius = values.radius;\n\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n\n      values.radius += valueOrDefault(parsed && parsed._custom, radius);\n      return values;\n    }\n\n  }\n\n  BubbleController.id = 'bubble';\n  BubbleController.defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n  BubbleController.overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';\n          }\n\n        }\n      }\n    }\n  };\n\n  function getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n\n    if (circumference < TAU) {\n      const startAngle = rotation;\n      const endAngle = startAngle + circumference;\n      const startX = Math.cos(startAngle);\n      const startY = Math.sin(startAngle);\n      const endX = Math.cos(endAngle);\n      const endY = Math.sin(endAngle);\n\n      const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n\n      const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n\n      const maxX = calcMax(0, startX, endX);\n      const maxY = calcMax(HALF_PI, startY, endY);\n      const minX = calcMin(PI, startX, endX);\n      const minY = calcMin(PI + HALF_PI, startY, endY);\n      ratioX = (maxX - minX) / 2;\n      ratioY = (maxY - minY) / 2;\n      offsetX = -(maxX + minX) / 2;\n      offsetY = -(maxY + minY) / 2;\n    }\n\n    return {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    };\n  }\n\n  class DoughnutController extends DatasetController {\n    constructor(chart, datasetIndex) {\n      super(chart, datasetIndex);\n      this.enableOptionSharing = true;\n      this.innerRadius = undefined;\n      this.outerRadius = undefined;\n      this.offsetX = undefined;\n      this.offsetY = undefined;\n    }\n\n    linkScales() {}\n\n    parse(start, count) {\n      const data = this.getDataset().data;\n      const meta = this._cachedMeta;\n\n      if (this._parsing === false) {\n        meta._parsed = data;\n      } else {\n        let getter = i => +data[i];\n\n        if (isObject(data[start])) {\n          const {\n            key = 'value'\n          } = this._parsing;\n\n          getter = i => +resolveObjectKey(data[i], key);\n        }\n\n        let i, ilen;\n\n        for (i = start, ilen = start + count; i < ilen; ++i) {\n          meta._parsed[i] = getter(i);\n        }\n      }\n    }\n\n    _getRotation() {\n      return toRadians(this.options.rotation - 90);\n    }\n\n    _getCircumference() {\n      return toRadians(this.options.circumference);\n    }\n\n    _getRotationExtents() {\n      let min = TAU;\n      let max = -TAU;\n\n      for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          const controller = this.chart.getDatasetMeta(i).controller;\n\n          const rotation = controller._getRotation();\n\n          const circumference = controller._getCircumference();\n\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n\n    update(mode) {\n      const chart = this.chart;\n      const {\n        chartArea\n      } = chart;\n      const meta = this._cachedMeta;\n      const arcs = meta.data;\n      const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n      const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n\n      const chartWeight = this._getRingWeight(this.index);\n\n      const {\n        circumference,\n        rotation\n      } = this._getRotationExtents();\n\n      const {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n      } = getRatioAndOffset(rotation, circumference, cutout);\n      const maxWidth = (chartArea.width - spacing) / ratioX;\n      const maxHeight = (chartArea.height - spacing) / ratioY;\n      const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      const outerRadius = toDimension(this.options.radius, maxRadius);\n      const innerRadius = Math.max(outerRadius * cutout, 0);\n\n      const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n\n      this.offsetX = offsetX * outerRadius;\n      this.offsetY = offsetY * outerRadius;\n      meta.total = this.calculateTotal();\n      this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n      this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n\n    _circumference(i, reset) {\n      const opts = this.options;\n      const meta = this._cachedMeta;\n\n      const circumference = this._getCircumference();\n\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n        return 0;\n      }\n\n      return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n\n    updateElements(arcs, start, count, mode) {\n      const reset = mode === 'reset';\n      const chart = this.chart;\n      const chartArea = chart.chartArea;\n      const opts = chart.options;\n      const animationOpts = opts.animation;\n      const centerX = (chartArea.left + chartArea.right) / 2;\n      const centerY = (chartArea.top + chartArea.bottom) / 2;\n      const animateScale = reset && animationOpts.animateScale;\n      const innerRadius = animateScale ? 0 : this.innerRadius;\n      const outerRadius = animateScale ? 0 : this.outerRadius;\n      const firstOpts = this.resolveDataElementOptions(start, mode);\n      const sharedOptions = this.getSharedOptions(firstOpts);\n      const includeOptions = this.includeOptions(mode, sharedOptions);\n\n      let startAngle = this._getRotation();\n\n      let i;\n\n      for (i = 0; i < start; ++i) {\n        startAngle += this._circumference(i, reset);\n      }\n\n      for (i = start; i < start + count; ++i) {\n        const circumference = this._circumference(i, reset);\n\n        const arc = arcs[i];\n        const properties = {\n          x: centerX + this.offsetX,\n          y: centerY + this.offsetY,\n          startAngle,\n          endAngle: startAngle + circumference,\n          circumference,\n          outerRadius,\n          innerRadius\n        };\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n        }\n\n        startAngle += circumference;\n        this.updateElement(arc, i, properties, mode);\n      }\n\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n\n    calculateTotal() {\n      const meta = this._cachedMeta;\n      const metaData = meta.data;\n      let total = 0;\n      let i;\n\n      for (i = 0; i < metaData.length; i++) {\n        const value = meta._parsed[i];\n\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n          total += Math.abs(value);\n        }\n      }\n\n      return total;\n    }\n\n    calculateCircumference(value) {\n      const total = this._cachedMeta.total;\n\n      if (total > 0 && !isNaN(value)) {\n        return TAU * (Math.abs(value) / total);\n      }\n\n      return 0;\n    }\n\n    getLabelAndValue(index) {\n      const meta = this._cachedMeta;\n      const chart = this.chart;\n      const labels = chart.data.labels || [];\n      const value = formatNumber(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value\n      };\n    }\n\n    getMaxBorderWidth(arcs) {\n      let max = 0;\n      const chart = this.chart;\n      let i, ilen, meta, controller, options;\n\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n\n            if (controller !== this) {\n              controller.configure();\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n\n      return max;\n    }\n\n    getMaxOffset(arcs) {\n      let max = 0;\n\n      for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n        const options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n\n      return max;\n    }\n\n    _getRingWeightOffset(datasetIndex) {\n      let ringWeightOffset = 0;\n\n      for (let i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    }\n\n    _getRingWeight(datasetIndex) {\n      return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n\n    _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n\n  }\n\n  DoughnutController.id = 'doughnut';\n  DoughnutController.defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      }\n    },\n    cutout: '50%',\n    rotation: 0,\n    circumference: 360,\n    radius: '100%',\n    spacing: 0,\n    indexAxis: 'r'\n  };\n  DoughnutController.descriptors = {\n    _scriptable: name => name !== 'spacing',\n    _indexable: name => name !== 'spacing'\n  };\n  DoughnutController.overrides = {\n    aspectRatio: 1,\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n\n            if (data.labels.length && data.datasets.length) {\n              const {\n                labels: {\n                  pointStyle\n                }\n              } = chart.legend.options;\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: chart.getDataVisibility(i),\n                  index: i\n                };\n              });\n            }\n\n            return [];\n          }\n\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n\n      },\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';\n          },\n\n          label(tooltipItem) {\n            let dataLabel = tooltipItem.label;\n            const value = ': ' + tooltipItem.formattedValue;\n\n            if (isArray(dataLabel)) {\n              dataLabel = dataLabel.slice();\n              dataLabel[0] += value;\n            } else {\n              dataLabel += value;\n            }\n\n            return dataLabel;\n          }\n\n        }\n      }\n    }\n  };\n\n  class LineController extends DatasetController {\n    initialize() {\n      this.enableOptionSharing = true;\n      super.initialize();\n    }\n\n    update(mode) {\n      const meta = this._cachedMeta;\n      const {\n        dataset: line,\n        data: points = [],\n        _dataset\n      } = meta;\n      const animationsDisabled = this.chart._animationsDisabled;\n      let {\n        start,\n        count\n      } = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n      this._drawStart = start;\n      this._drawCount = count;\n\n      if (scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n      this.updateElements(points, start, count, mode);\n    }\n\n    updateElements(points, start, count, mode) {\n      const reset = mode === 'reset';\n      const {\n        iScale,\n        vScale,\n        _stacked\n      } = this._cachedMeta;\n      const firstOpts = this.resolveDataElementOptions(start, mode);\n      const sharedOptions = this.getSharedOptions(firstOpts);\n      const includeOptions = this.includeOptions(mode, sharedOptions);\n      const iAxis = iScale.axis;\n      const vAxis = vScale.axis;\n      const spanGaps = this.options.spanGaps;\n      const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      let prevParsed = start > 0 && this.getParsed(start - 1);\n\n      for (let i = start; i < start + count; ++i) {\n        const point = points[i];\n        const parsed = this.getParsed(i);\n        const properties = directUpdate ? point : {};\n        const nullData = isNullOrUndef(parsed[vAxis]);\n        const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && parsed[iAxis] - prevParsed[iAxis] > maxGapLength;\n        properties.parsed = parsed;\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n\n        prevParsed = parsed;\n      }\n\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n\n    getMaxOverflow() {\n      const meta = this._cachedMeta;\n      const dataset = meta.dataset;\n      const border = dataset.options && dataset.options.borderWidth || 0;\n      const data = meta.data || [];\n\n      if (!data.length) {\n        return border;\n      }\n\n      const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n\n    draw() {\n      const meta = this._cachedMeta;\n      meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n      super.draw();\n    }\n\n  }\n\n  LineController.id = 'line';\n  LineController.defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    showLine: true,\n    spanGaps: false\n  };\n  LineController.overrides = {\n    scales: {\n      _index_: {\n        type: 'category'\n      },\n      _value_: {\n        type: 'linear'\n      }\n    }\n  };\n\n  function getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n\n    if (meta._sorted) {\n      const {\n        iScale,\n        _parsed\n      } = meta;\n      const axis = iScale.axis;\n      const {\n        min,\n        max,\n        minDefined,\n        maxDefined\n      } = iScale.getUserBounds();\n\n      if (minDefined) {\n        start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n      }\n\n      if (maxDefined) {\n        count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n      } else {\n        count = pointCount - start;\n      }\n    }\n\n    return {\n      start,\n      count\n    };\n  }\n\n  function scaleRangesChanged(meta) {\n    const {\n      xScale,\n      yScale,\n      _scaleRanges\n    } = meta;\n    const newRanges = {\n      xmin: xScale.min,\n      xmax: xScale.max,\n      ymin: yScale.min,\n      ymax: yScale.max\n    };\n\n    if (!_scaleRanges) {\n      meta._scaleRanges = newRanges;\n      return true;\n    }\n\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n  }\n\n  class PolarAreaController extends DatasetController {\n    constructor(chart, datasetIndex) {\n      super(chart, datasetIndex);\n      this.innerRadius = undefined;\n      this.outerRadius = undefined;\n    }\n\n    getLabelAndValue(index) {\n      const meta = this._cachedMeta;\n      const chart = this.chart;\n      const labels = chart.data.labels || [];\n      const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value\n      };\n    }\n\n    update(mode) {\n      const arcs = this._cachedMeta.data;\n\n      this._updateRadius();\n\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n\n    _updateRadius() {\n      const chart = this.chart;\n      const chartArea = chart.chartArea;\n      const opts = chart.options;\n      const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      const outerRadius = Math.max(minSize / 2, 0);\n      const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      this.outerRadius = outerRadius - radiusLength * this.index;\n      this.innerRadius = this.outerRadius - radiusLength;\n    }\n\n    updateElements(arcs, start, count, mode) {\n      const reset = mode === 'reset';\n      const chart = this.chart;\n      const dataset = this.getDataset();\n      const opts = chart.options;\n      const animationOpts = opts.animation;\n      const scale = this._cachedMeta.rScale;\n      const centerX = scale.xCenter;\n      const centerY = scale.yCenter;\n      const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n      let angle = datasetStartAngle;\n      let i;\n      const defaultAngle = 360 / this.countVisibleElements();\n\n      for (i = 0; i < start; ++i) {\n        angle += this._computeAngle(i, mode, defaultAngle);\n      }\n\n      for (i = start; i < start + count; i++) {\n        const arc = arcs[i];\n        let startAngle = angle;\n\n        let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n\n        let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n        angle = endAngle;\n\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n\n        const properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius,\n          startAngle,\n          endAngle,\n          options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n        };\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n\n    countVisibleElements() {\n      const dataset = this.getDataset();\n      const meta = this._cachedMeta;\n      let count = 0;\n      meta.data.forEach((element, index) => {\n        if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n\n    _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n\n  }\n\n  PolarAreaController.id = 'polarArea';\n  PolarAreaController.defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      }\n    },\n    indexAxis: 'r',\n    startAngle: 0\n  };\n  PolarAreaController.overrides = {\n    aspectRatio: 1,\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n\n            if (data.labels.length && data.datasets.length) {\n              const {\n                labels: {\n                  pointStyle\n                }\n              } = chart.legend.options;\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n                  index: i\n                };\n              });\n            }\n\n            return [];\n          }\n\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n\n      },\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';\n          },\n\n          label(context) {\n            return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n          }\n\n        }\n      }\n    },\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  class PieController extends DoughnutController {}\n\n  PieController.id = 'pie';\n  PieController.defaults = {\n    cutout: 0,\n    rotation: 0,\n    circumference: 360,\n    radius: '100%'\n  };\n\n  class RadarController extends DatasetController {\n    getLabelAndValue(index) {\n      const vScale = this._cachedMeta.vScale;\n      const parsed = this.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n\n    update(mode) {\n      const meta = this._cachedMeta;\n      const line = meta.dataset;\n      const points = meta.data || [];\n      const labels = meta.iScale.getLabels();\n      line.points = points;\n\n      if (mode !== 'resize') {\n        const options = this.resolveDatasetElementOptions(mode);\n\n        if (!this.options.showLine) {\n          options.borderWidth = 0;\n        }\n\n        const properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options\n        };\n        this.updateElement(line, undefined, properties, mode);\n      }\n\n      this.updateElements(points, 0, points.length, mode);\n    }\n\n    updateElements(points, start, count, mode) {\n      const dataset = this.getDataset();\n      const scale = this._cachedMeta.rScale;\n      const reset = mode === 'reset';\n\n      for (let i = start; i < start + count; i++) {\n        const point = points[i];\n        const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n        const x = reset ? scale.xCenter : pointPosition.x;\n        const y = reset ? scale.yCenter : pointPosition.y;\n        const properties = {\n          x,\n          y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options\n        };\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n\n  }\n\n  RadarController.id = 'radar';\n  RadarController.defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    }\n  };\n  RadarController.overrides = {\n    aspectRatio: 1,\n    scales: {\n      r: {\n        type: 'radialLinear'\n      }\n    }\n  };\n\n  class ScatterController extends LineController {}\n\n  ScatterController.id = 'scatter';\n  ScatterController.defaults = {\n    showLine: false,\n    fill: false\n  };\n  ScatterController.overrides = {\n    interaction: {\n      mode: 'point'\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';\n          },\n\n          label(item) {\n            return '(' + item.label + ', ' + item.formattedValue + ')';\n          }\n\n        }\n      }\n    },\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n  var controllers = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    BarController: BarController,\n    BubbleController: BubbleController,\n    DoughnutController: DoughnutController,\n    LineController: LineController,\n    PolarAreaController: PolarAreaController,\n    PieController: PieController,\n    RadarController: RadarController,\n    ScatterController: ScatterController\n  });\n\n  function clipArc(ctx, element, endAngle) {\n    const {\n      startAngle,\n      pixelMargin,\n      x,\n      y,\n      outerRadius,\n      innerRadius\n    } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n\n    if (innerRadius > pixelMargin) {\n      angleMargin = pixelMargin / innerRadius;\n      ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n      ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  function toRadiusCorners(value) {\n    return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n  }\n\n  function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n    const computeOuterLimit = val => {\n      const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n      return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n\n    return {\n      outerStart: computeOuterLimit(o.outerStart),\n      outerEnd: computeOuterLimit(o.outerEnd),\n      innerStart: _limitValue(o.innerStart, 0, innerLimit),\n      innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n  }\n\n  function rThetaToXY(r, theta, x, y) {\n    return {\n      x: x + r * Math.cos(theta),\n      y: y + r * Math.sin(theta)\n    };\n  }\n\n  function pathArc(ctx, element, offset, spacing, end) {\n    const {\n      x,\n      y,\n      startAngle: start,\n      pixelMargin,\n      innerRadius: innerR\n    } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n\n    if (spacing) {\n      const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n      const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n      const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n      const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n      spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const {\n      outerStart,\n      outerEnd,\n      innerStart,\n      innerEnd\n    } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n\n    ctx.closePath();\n  }\n\n  function drawArc(ctx, element, offset, spacing) {\n    const {\n      fullCircles,\n      startAngle,\n      circumference\n    } = element;\n    let endAngle = element.endAngle;\n\n    if (fullCircles) {\n      pathArc(ctx, element, offset, spacing, startAngle + TAU);\n\n      for (let i = 0; i < fullCircles; ++i) {\n        ctx.fill();\n      }\n\n      if (!isNaN(circumference)) {\n        endAngle = startAngle + circumference % TAU;\n\n        if (circumference % TAU === 0) {\n          endAngle += TAU;\n        }\n      }\n    }\n\n    pathArc(ctx, element, offset, spacing, endAngle);\n    ctx.fill();\n    return endAngle;\n  }\n\n  function drawFullCircleBorders(ctx, element, inner) {\n    const {\n      x,\n      y,\n      startAngle,\n      pixelMargin,\n      fullCircles\n    } = element;\n    const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n    const innerRadius = element.innerRadius + pixelMargin;\n    let i;\n\n    if (inner) {\n      clipArc(ctx, element, startAngle + TAU);\n    }\n\n    ctx.beginPath();\n    ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n\n    for (i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n\n    for (i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n  }\n\n  function drawBorder(ctx, element, offset, spacing, endAngle) {\n    const {\n      options\n    } = element;\n    const inner = options.borderAlign === 'inner';\n\n    if (!options.borderWidth) {\n      return;\n    }\n\n    if (inner) {\n      ctx.lineWidth = options.borderWidth * 2;\n      ctx.lineJoin = 'round';\n    } else {\n      ctx.lineWidth = options.borderWidth;\n      ctx.lineJoin = 'bevel';\n    }\n\n    if (element.fullCircles) {\n      drawFullCircleBorders(ctx, element, inner);\n    }\n\n    if (inner) {\n      clipArc(ctx, element, endAngle);\n    }\n\n    pathArc(ctx, element, offset, spacing, endAngle);\n    ctx.stroke();\n  }\n\n  class ArcElement extends Element {\n    constructor(cfg) {\n      super();\n      this.options = undefined;\n      this.circumference = undefined;\n      this.startAngle = undefined;\n      this.endAngle = undefined;\n      this.innerRadius = undefined;\n      this.outerRadius = undefined;\n      this.pixelMargin = 0;\n      this.fullCircles = 0;\n\n      if (cfg) {\n        Object.assign(this, cfg);\n      }\n    }\n\n    inRange(chartX, chartY, useFinalPosition) {\n      const point = this.getProps(['x', 'y'], useFinalPosition);\n      const {\n        angle,\n        distance\n      } = getAngleFromPoint(point, {\n        x: chartX,\n        y: chartY\n      });\n      const {\n        startAngle,\n        endAngle,\n        innerRadius,\n        outerRadius,\n        circumference\n      } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n      const rAdjust = this.options.spacing / 2;\n\n      const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n\n      const withinRadius = distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust;\n      return betweenAngles && withinRadius;\n    }\n\n    getCenterPoint(useFinalPosition) {\n      const {\n        x,\n        y,\n        startAngle,\n        endAngle,\n        innerRadius,\n        outerRadius\n      } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n      const {\n        offset,\n        spacing\n      } = this.options;\n      const halfAngle = (startAngle + endAngle) / 2;\n      const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n\n    tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n\n    draw(ctx) {\n      const {\n        options,\n        circumference\n      } = this;\n      const offset = (options.offset || 0) / 2;\n      const spacing = (options.spacing || 0) / 2;\n      this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n      if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n        return;\n      }\n\n      ctx.save();\n      let radiusOffset = 0;\n\n      if (offset) {\n        radiusOffset = offset / 2;\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n\n        if (this.circumference >= PI) {\n          radiusOffset = offset;\n        }\n      }\n\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n      drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n      ctx.restore();\n    }\n\n  }\n\n  ArcElement.id = 'arc';\n  ArcElement.defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined\n  };\n  ArcElement.defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  function setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n  }\n\n  function lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n  }\n\n  function getLineMethod(options) {\n    if (options.stepped) {\n      return _steppedLineTo;\n    }\n\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n      return _bezierCurveTo;\n    }\n\n    return lineTo;\n  }\n\n  function pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const {\n      start: paramsStart = 0,\n      end: paramsEnd = count - 1\n    } = params;\n    const {\n      start: segmentStart,\n      end: segmentEnd\n    } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n      count,\n      start,\n      loop: segment.loop,\n      ilen: end < start && !outside ? count + end - start : end - start\n    };\n  }\n\n  function pathSegment(ctx, line, segment, params) {\n    const {\n      points,\n      options\n    } = line;\n    const {\n      count,\n      start,\n      loop,\n      ilen\n    } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let {\n      move = true,\n      reverse\n    } = params || {};\n    let i, point, prev;\n\n    for (i = 0; i <= ilen; ++i) {\n      point = points[(start + (reverse ? ilen - i : i)) % count];\n\n      if (point.skip) {\n        continue;\n      } else if (move) {\n        ctx.moveTo(point.x, point.y);\n        move = false;\n      } else {\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n      }\n\n      prev = point;\n    }\n\n    if (loop) {\n      point = points[(start + (reverse ? ilen : 0)) % count];\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    return !!loop;\n  }\n\n  function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const {\n      count,\n      start,\n      ilen\n    } = pathVars(points, segment, params);\n    const {\n      move = true,\n      reverse\n    } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n\n    const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n\n    const drawX = () => {\n      if (minY !== maxY) {\n        ctx.lineTo(avgX, maxY);\n        ctx.lineTo(avgX, minY);\n        ctx.lineTo(avgX, lastY);\n      }\n    };\n\n    if (move) {\n      point = points[pointIndex(0)];\n      ctx.moveTo(point.x, point.y);\n    }\n\n    for (i = 0; i <= ilen; ++i) {\n      point = points[pointIndex(i)];\n\n      if (point.skip) {\n        continue;\n      }\n\n      const x = point.x;\n      const y = point.y;\n      const truncX = x | 0;\n\n      if (truncX === prevX) {\n        if (y < minY) {\n          minY = y;\n        } else if (y > maxY) {\n          maxY = y;\n        }\n\n        avgX = (countX * avgX + x) / ++countX;\n      } else {\n        drawX();\n        ctx.lineTo(x, y);\n        prevX = truncX;\n        countX = 0;\n        minY = maxY = y;\n      }\n\n      lastY = y;\n    }\n\n    drawX();\n  }\n\n  function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n  }\n\n  function _getInterpolationMethod(options) {\n    if (options.stepped) {\n      return _steppedInterpolation;\n    }\n\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n      return _bezierInterpolation;\n    }\n\n    return _pointInLine;\n  }\n\n  function strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n\n    if (!path) {\n      path = line._path = new Path2D();\n\n      if (line.path(path, start, count)) {\n        path.closePath();\n      }\n    }\n\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n  }\n\n  function strokePathDirect(ctx, line, start, count) {\n    const {\n      segments,\n      options\n    } = line;\n\n    const segmentMethod = _getSegmentMethod(line);\n\n    for (const segment of segments) {\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n\n      if (segmentMethod(ctx, line, segment, {\n        start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n\n      ctx.stroke();\n    }\n  }\n\n  const usePath2D = typeof Path2D === 'function';\n\n  function draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n      strokePathWithCache(ctx, line, start, count);\n    } else {\n      strokePathDirect(ctx, line, start, count);\n    }\n  }\n\n  class LineElement extends Element {\n    constructor(cfg) {\n      super();\n      this.animated = true;\n      this.options = undefined;\n      this._loop = undefined;\n      this._fullLoop = undefined;\n      this._path = undefined;\n      this._points = undefined;\n      this._segments = undefined;\n      this._decimated = false;\n      this._pointsUpdated = false;\n      this._datasetIndex = undefined;\n\n      if (cfg) {\n        Object.assign(this, cfg);\n      }\n    }\n\n    updateControlPoints(chartArea, indexAxis) {\n      const options = this.options;\n\n      if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n        const loop = options.spanGaps ? this._loop : this._fullLoop;\n\n        _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n\n        this._pointsUpdated = true;\n      }\n    }\n\n    set points(points) {\n      this._points = points;\n      delete this._segments;\n      delete this._path;\n      this._pointsUpdated = false;\n    }\n\n    get points() {\n      return this._points;\n    }\n\n    get segments() {\n      return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n\n    first() {\n      const segments = this.segments;\n      const points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n\n    last() {\n      const segments = this.segments;\n      const points = this.points;\n      const count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n\n    interpolate(point, property) {\n      const options = this.options;\n      const value = point[property];\n      const points = this.points;\n\n      const segments = _boundSegments(this, {\n        property,\n        start: value,\n        end: value\n      });\n\n      if (!segments.length) {\n        return;\n      }\n\n      const result = [];\n\n      const _interpolate = _getInterpolationMethod(options);\n\n      let i, ilen;\n\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        const {\n          start,\n          end\n        } = segments[i];\n        const p1 = points[start];\n        const p2 = points[end];\n\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n\n        const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n\n        const interpolated = _interpolate(p1, p2, t, options.stepped);\n\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n\n      return result.length === 1 ? result[0] : result;\n    }\n\n    pathSegment(ctx, segment, params) {\n      const segmentMethod = _getSegmentMethod(this);\n\n      return segmentMethod(ctx, this, segment, params);\n    }\n\n    path(ctx, start, count) {\n      const segments = this.segments;\n\n      const segmentMethod = _getSegmentMethod(this);\n\n      let loop = this._loop;\n      start = start || 0;\n      count = count || this.points.length - start;\n\n      for (const segment of segments) {\n        loop &= segmentMethod(ctx, this, segment, {\n          start,\n          end: start + count - 1\n        });\n      }\n\n      return !!loop;\n    }\n\n    draw(ctx, chartArea, start, count) {\n      const options = this.options || {};\n      const points = this.points || [];\n\n      if (points.length && options.borderWidth) {\n        ctx.save();\n        draw(ctx, this, start, count);\n        ctx.restore();\n      }\n\n      if (this.animated) {\n        this._pointsUpdated = false;\n        this._path = undefined;\n      }\n    }\n\n  }\n\n  LineElement.id = 'line';\n  LineElement.defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0\n  };\n  LineElement.defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n  LineElement.descriptors = {\n    _scriptable: true,\n    _indexable: name => name !== 'borderDash' && name !== 'fill'\n  };\n\n  function inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const {\n      [axis]: value\n    } = el.getProps([axis], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n  }\n\n  class PointElement extends Element {\n    constructor(cfg) {\n      super();\n      this.options = undefined;\n      this.parsed = undefined;\n      this.skip = undefined;\n      this.stop = undefined;\n\n      if (cfg) {\n        Object.assign(this, cfg);\n      }\n    }\n\n    inRange(mouseX, mouseY, useFinalPosition) {\n      const options = this.options;\n      const {\n        x,\n        y\n      } = this.getProps(['x', 'y'], useFinalPosition);\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n\n    inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n\n    inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n\n    getCenterPoint(useFinalPosition) {\n      const {\n        x,\n        y\n      } = this.getProps(['x', 'y'], useFinalPosition);\n      return {\n        x,\n        y\n      };\n    }\n\n    size(options) {\n      options = options || this.options || {};\n      let radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      const borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n\n    draw(ctx, area) {\n      const options = this.options;\n\n      if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n        return;\n      }\n\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      drawPoint(ctx, options, this.x, this.y);\n    }\n\n    getRange() {\n      const options = this.options || {};\n      return options.radius + options.hitRadius;\n    }\n\n  }\n\n  PointElement.id = 'point';\n  PointElement.defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n  PointElement.defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  function getBarBounds(bar, useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      width,\n      height\n    } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n    let left, right, top, bottom, half;\n\n    if (bar.horizontal) {\n      half = height / 2;\n      left = Math.min(x, base);\n      right = Math.max(x, base);\n      top = y - half;\n      bottom = y + half;\n    } else {\n      half = width / 2;\n      left = x - half;\n      right = x + half;\n      top = Math.min(y, base);\n      bottom = Math.max(y, base);\n    }\n\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n\n  function skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n  }\n\n  function parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n      t: skipOrLimit(skip.top, o.top, 0, maxH),\n      r: skipOrLimit(skip.right, o.right, 0, maxW),\n      b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n      l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n  }\n\n  function parseBorderRadius(bar, maxW, maxH) {\n    const {\n      enableBorderRadius\n    } = bar.getProps(['enableBorderRadius']);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n      topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n      topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n      bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n      bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n  }\n\n  function boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height,\n        radius\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b,\n        radius: {\n          topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n          topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n          bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n          bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n        }\n      }\n    };\n  }\n\n  function inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  function hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n  }\n\n  function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n  }\n\n  function inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n      x: rect.x + x,\n      y: rect.y + y,\n      w: rect.w + w,\n      h: rect.h + h,\n      radius: rect.radius\n    };\n  }\n\n  class BarElement extends Element {\n    constructor(cfg) {\n      super();\n      this.options = undefined;\n      this.horizontal = undefined;\n      this.base = undefined;\n      this.width = undefined;\n      this.height = undefined;\n\n      if (cfg) {\n        Object.assign(this, cfg);\n      }\n    }\n\n    draw(ctx) {\n      const options = this.options;\n      const {\n        inner,\n        outer\n      } = boundingRects(this);\n      const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n      const inflateAmount = 0.33;\n      ctx.save();\n\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n        ctx.clip();\n        addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n        ctx.fillStyle = options.borderColor;\n        ctx.fill('evenodd');\n      }\n\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(inner, inflateAmount, outer));\n      ctx.fillStyle = options.backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n\n    inRange(mouseX, mouseY, useFinalPosition) {\n      return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n\n    inXRange(mouseX, useFinalPosition) {\n      return inRange(this, mouseX, null, useFinalPosition);\n    }\n\n    inYRange(mouseY, useFinalPosition) {\n      return inRange(this, null, mouseY, useFinalPosition);\n    }\n\n    getCenterPoint(useFinalPosition) {\n      const {\n        x,\n        y,\n        base,\n        horizontal\n      } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n\n    getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n\n  }\n\n  BarElement.id = 'bar';\n  BarElement.defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    enableBorderRadius: true,\n    pointStyle: undefined\n  };\n  BarElement.defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n  var elements = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ArcElement: ArcElement,\n    LineElement: LineElement,\n    PointElement: PointElement,\n    BarElement: BarElement\n  });\n\n  function lttbDecimation(data, start, count, availableWidth, options) {\n    const samples = options.samples || availableWidth;\n\n    if (samples >= count) {\n      return data.slice(start, start + count);\n    }\n\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n\n    for (i = 0; i < samples - 2; i++) {\n      let avgX = 0;\n      let avgY = 0;\n      let j;\n      const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n      const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n      const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n      for (j = avgRangeStart; j < avgRangeEnd; j++) {\n        avgX += data[j].x;\n        avgY += data[j].y;\n      }\n\n      avgX /= avgRangeLength;\n      avgY /= avgRangeLength;\n      const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n      const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n      const {\n        x: pointAx,\n        y: pointAy\n      } = data[a];\n      maxArea = area = -1;\n\n      for (j = rangeOffs; j < rangeTo; j++) {\n        area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n\n        if (area > maxArea) {\n          maxArea = area;\n          maxAreaPoint = data[j];\n          nextA = j;\n        }\n      }\n\n      decimated[sampledIndex++] = maxAreaPoint;\n      a = nextA;\n    }\n\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n  }\n\n  function minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n\n    for (i = start; i < start + count; ++i) {\n      point = data[i];\n      x = (point.x - xMin) / dx * availableWidth;\n      y = point.y;\n      const truncX = x | 0;\n\n      if (truncX === prevX) {\n        if (y < minY) {\n          minY = y;\n          minIndex = i;\n        } else if (y > maxY) {\n          maxY = y;\n          maxIndex = i;\n        }\n\n        avgX = (countX * avgX + point.x) / ++countX;\n      } else {\n        const lastIndex = i - 1;\n\n        if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n          const intermediateIndex1 = Math.min(minIndex, maxIndex);\n          const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n          if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n            decimated.push({ ...data[intermediateIndex1],\n              x: avgX\n            });\n          }\n\n          if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n            decimated.push({ ...data[intermediateIndex2],\n              x: avgX\n            });\n          }\n        }\n\n        if (i > 0 && lastIndex !== startIndex) {\n          decimated.push(data[lastIndex]);\n        }\n\n        decimated.push(point);\n        prevX = truncX;\n        countX = 0;\n        minY = maxY = y;\n        minIndex = maxIndex = startIndex = i;\n      }\n    }\n\n    return decimated;\n  }\n\n  function cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n      const data = dataset._data;\n      delete dataset._decimated;\n      delete dataset._data;\n      Object.defineProperty(dataset, 'data', {\n        value: data\n      });\n    }\n  }\n\n  function cleanDecimatedData(chart) {\n    chart.data.datasets.forEach(dataset => {\n      cleanDecimatedDataset(dataset);\n    });\n  }\n\n  function getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const {\n      iScale\n    } = meta;\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n\n    if (maxDefined) {\n      count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n\n    return {\n      start,\n      count\n    };\n  }\n\n  var plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n      algorithm: 'min-max',\n      enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options) => {\n      if (!options.enabled) {\n        cleanDecimatedData(chart);\n        return;\n      }\n\n      const availableWidth = chart.width;\n      chart.data.datasets.forEach((dataset, datasetIndex) => {\n        const {\n          _data,\n          indexAxis\n        } = dataset;\n        const meta = chart.getDatasetMeta(datasetIndex);\n        const data = _data || dataset.data;\n\n        if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n          return;\n        }\n\n        if (meta.type !== 'line') {\n          return;\n        }\n\n        const xAxis = chart.scales[meta.xAxisID];\n\n        if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n          return;\n        }\n\n        if (chart.options.parsing) {\n          return;\n        }\n\n        let {\n          start,\n          count\n        } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n        const threshold = options.threshold || 4 * availableWidth;\n\n        if (count <= threshold) {\n          cleanDecimatedDataset(dataset);\n          return;\n        }\n\n        if (isNullOrUndef(_data)) {\n          dataset._data = data;\n          delete dataset.data;\n          Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            get: function () {\n              return this._decimated;\n            },\n            set: function (d) {\n              this._data = d;\n            }\n          });\n        }\n\n        let decimated;\n\n        switch (options.algorithm) {\n          case 'lttb':\n            decimated = lttbDecimation(data, start, count, availableWidth, options);\n            break;\n\n          case 'min-max':\n            decimated = minMaxDecimation(data, start, count, availableWidth);\n            break;\n\n          default:\n            throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n        }\n\n        dataset._decimated = decimated;\n      });\n    },\n\n    destroy(chart) {\n      cleanDecimatedData(chart);\n    }\n\n  };\n\n  function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n  }\n\n  function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n    if (fill === undefined) {\n      fill = !!options.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    return fill;\n  }\n\n  function decodeFill(line, index, count) {\n    const fill = parseFillOption(line);\n\n    if (isObject(fill)) {\n      return isNaN(fill.value) ? false : fill;\n    }\n\n    let target = parseFloat(fill);\n\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n  }\n\n  function computeLinearBoundary(source) {\n    const {\n      scale = {},\n      fill\n    } = source;\n    let target = null;\n    let horizontal;\n\n    if (fill === 'start') {\n      target = scale.bottom;\n    } else if (fill === 'end') {\n      target = scale.top;\n    } else if (isObject(fill)) {\n      target = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (isNumberFinite(target)) {\n      horizontal = scale.isHorizontal();\n      return {\n        x: horizontal ? target : null,\n        y: horizontal ? null : target\n      };\n    }\n\n    return null;\n  }\n\n  class simpleArc {\n    constructor(opts) {\n      this.x = opts.x;\n      this.y = opts.y;\n      this.radius = opts.radius;\n    }\n\n    pathSegment(ctx, bounds, opts) {\n      const {\n        x,\n        y,\n        radius\n      } = this;\n      bounds = bounds || {\n        start: 0,\n        end: TAU\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n\n    interpolate(point) {\n      const {\n        x,\n        y,\n        radius\n      } = this;\n      const angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle\n      };\n    }\n\n  }\n\n  function computeCircularBoundary(source) {\n    const {\n      scale,\n      fill\n    } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const target = [];\n    const start = options.reverse ? scale.max : scale.min;\n    const end = options.reverse ? scale.min : scale.max;\n    let i, center, value;\n\n    if (fill === 'start') {\n      value = start;\n    } else if (fill === 'end') {\n      value = end;\n    } else if (isObject(fill)) {\n      value = fill.value;\n    } else {\n      value = scale.getBaseValue();\n    }\n\n    if (options.grid.circular) {\n      center = scale.getPointPositionForValue(0, start);\n      return new simpleArc({\n        x: center.x,\n        y: center.y,\n        radius: scale.getDistanceFromCenterForValue(value)\n      });\n    }\n\n    for (i = 0; i < length; ++i) {\n      target.push(scale.getPointPositionForValue(i, value));\n    }\n\n    return target;\n  }\n\n  function computeBoundary(source) {\n    const scale = source.scale || {};\n\n    if (scale.getPointPositionForValue) {\n      return computeCircularBoundary(source);\n    }\n\n    return computeLinearBoundary(source);\n  }\n\n  function findSegmentEnd(start, end, points) {\n    for (; end > start; end--) {\n      const point = points[end];\n\n      if (!isNaN(point.x) && !isNaN(point.y)) {\n        break;\n      }\n    }\n\n    return end;\n  }\n\n  function pointsFromSegments(boundary, line) {\n    const {\n      x = null,\n      y = null\n    } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({\n      start,\n      end\n    }) => {\n      end = findSegmentEnd(start, end, linePoints);\n      const first = linePoints[start];\n      const last = linePoints[end];\n\n      if (y !== null) {\n        points.push({\n          x: first.x,\n          y\n        });\n        points.push({\n          x: last.x,\n          y\n        });\n      } else if (x !== null) {\n        points.push({\n          x,\n          y: first.y\n        });\n        points.push({\n          x,\n          y: last.y\n        });\n      }\n    });\n    return points;\n  }\n\n  function buildStackLine(source) {\n    const {\n      chart,\n      scale,\n      index,\n      line\n    } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(chart, index);\n    linesBelow.push(createBoundaryLine({\n      x: null,\n      y: scale.bottom\n    }, line));\n\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n\n      for (let j = segment.start; j <= segment.end; j++) {\n        addPointsBelow(points, sourcePoints[j], linesBelow);\n      }\n    }\n\n    return new LineElement({\n      points,\n      options: {}\n    });\n  }\n\n  const isLineAndNotInHideAnimation = meta => meta.type === 'line' && !meta.hidden;\n\n  function getLinesBelow(chart, index) {\n    const below = [];\n    const metas = chart.getSortedVisibleDatasetMetas();\n\n    for (let i = 0; i < metas.length; i++) {\n      const meta = metas[i];\n\n      if (meta.index === index) {\n        break;\n      }\n\n      if (isLineAndNotInHideAnimation(meta)) {\n        below.unshift(meta.dataset);\n      }\n    }\n\n    return below;\n  }\n\n  function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n\n    for (let j = 0; j < linesBelow.length; j++) {\n      const line = linesBelow[j];\n      const {\n        first,\n        last,\n        point\n      } = findPoint(line, sourcePoint, 'x');\n\n      if (!point || first && last) {\n        continue;\n      }\n\n      if (first) {\n        postponed.unshift(point);\n      } else {\n        points.push(point);\n\n        if (!last) {\n          break;\n        }\n      }\n    }\n\n    points.push(...postponed);\n  }\n\n  function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n\n    if (!point) {\n      return {};\n    }\n\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n      const firstValue = linePoints[segment.start][property];\n      const lastValue = linePoints[segment.end][property];\n\n      if (pointValue >= firstValue && pointValue <= lastValue) {\n        first = pointValue === firstValue;\n        last = pointValue === lastValue;\n        break;\n      }\n    }\n\n    return {\n      first,\n      last,\n      point\n    };\n  }\n\n  function getTarget(source) {\n    const {\n      chart,\n      fill,\n      line\n    } = source;\n\n    if (isNumberFinite(fill)) {\n      return getLineByIndex(chart, fill);\n    }\n\n    if (fill === 'stack') {\n      return buildStackLine(source);\n    }\n\n    if (fill === 'shape') {\n      return true;\n    }\n\n    const boundary = computeBoundary(source);\n\n    if (boundary instanceof simpleArc) {\n      return boundary;\n    }\n\n    return createBoundaryLine(boundary, line);\n  }\n\n  function createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n\n    if (isArray(boundary)) {\n      _loop = true;\n      points = boundary;\n    } else {\n      points = pointsFromSegments(boundary, line);\n    }\n\n    return points.length ? new LineElement({\n      points,\n      options: {\n        tension: 0\n      },\n      _loop,\n      _fullLoop: _loop\n    }) : null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [index];\n    let target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isNumberFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function _clip(ctx, target, clipY) {\n    ctx.beginPath();\n    target.path(ctx);\n    ctx.lineTo(target.last().x, clipY);\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  function getBounds(property, first, last, loop) {\n    if (loop) {\n      return;\n    }\n\n    let start = first[property];\n    let end = last[property];\n\n    if (property === 'angle') {\n      start = _normalizeAngle(start);\n      end = _normalizeAngle(end);\n    }\n\n    return {\n      property,\n      start,\n      end\n    };\n  }\n\n  function _getEdge(a, b, prop, fn) {\n    if (a && b) {\n      return fn(a[prop], b[prop]);\n    }\n\n    return a ? a[prop] : b ? b[prop] : 0;\n  }\n\n  function _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n\n    for (const segment of segments) {\n      let {\n        start,\n        end\n      } = segment;\n      end = findSegmentEnd(start, end, points);\n      const bounds = getBounds(property, points[start], points[end], segment.loop);\n\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[start],\n          end: points[end]\n        });\n        continue;\n      }\n\n      const targetSegments = _boundSegments(target, bounds);\n\n      for (const tgt of targetSegments) {\n        const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n\n        const fillSources = _boundSegment(segment, points, subBounds);\n\n        for (const fillSource of fillSources) {\n          parts.push({\n            source: fillSource,\n            target: tgt,\n            start: {\n              [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n            },\n            end: {\n              [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n            }\n          });\n        }\n      }\n    }\n\n    return parts;\n  }\n\n  function clipBounds(ctx, scale, bounds) {\n    const {\n      top,\n      bottom\n    } = scale.chart.chartArea;\n    const {\n      property,\n      start,\n      end\n    } = bounds || {};\n\n    if (property === 'x') {\n      ctx.beginPath();\n      ctx.rect(start, top, end - start, bottom - top);\n      ctx.clip();\n    }\n  }\n\n  function interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n\n    if (interpolatedPoint) {\n      ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n  }\n\n  function _fill(ctx, cfg) {\n    const {\n      line,\n      target,\n      property,\n      color,\n      scale\n    } = cfg;\n\n    const segments = _segments(line, target, property);\n\n    for (const {\n      source: src,\n      target: tgt,\n      start,\n      end\n    } of segments) {\n      const {\n        style: {\n          backgroundColor = color\n        } = {}\n      } = src;\n      const notShape = target !== true;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n      ctx.beginPath();\n      const lineLoop = !!line.pathSegment(ctx, src);\n      let loop;\n\n      if (notShape) {\n        if (lineLoop) {\n          ctx.closePath();\n        } else {\n          interpolatedLineTo(ctx, target, end, property);\n        }\n\n        const targetLoop = !!target.pathSegment(ctx, tgt, {\n          move: lineLoop,\n          reverse: true\n        });\n        loop = lineLoop && targetLoop;\n\n        if (!loop) {\n          interpolatedLineTo(ctx, target, start, property);\n        }\n      }\n\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  }\n\n  function doFill(ctx, cfg) {\n    const {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale\n    } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n\n    if (property === 'x' && below !== above) {\n      _clip(ctx, target, area.top);\n\n      _fill(ctx, {\n        line,\n        target,\n        color: above,\n        scale,\n        property\n      });\n\n      ctx.restore();\n      ctx.save();\n\n      _clip(ctx, target, area.bottom);\n    }\n\n    _fill(ctx, {\n      line,\n      target,\n      color: below,\n      scale,\n      property\n    });\n\n    ctx.restore();\n  }\n\n  function drawfill(ctx, source, area) {\n    const target = getTarget(source);\n    const {\n      line,\n      scale,\n      axis\n    } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const {\n      above = color,\n      below = color\n    } = fillOption || {};\n\n    if (target && line.points.length) {\n      clipArea(ctx, area);\n      doFill(ctx, {\n        line,\n        target,\n        above,\n        below,\n        area,\n        scale,\n        axis\n      });\n      unclipArea(ctx);\n    }\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n\n    afterDatasetsUpdate(chart, _args, options) {\n      const count = (chart.data.datasets || []).length;\n      const sources = [];\n      let meta, i, line, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        line = meta.dataset;\n        source = null;\n\n        if (line && line.options && line instanceof LineElement) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            index: i,\n            fill: decodeFill(line, i, count),\n            chart,\n            axis: meta.controller.options.indexAxis,\n            scale: meta.vScale,\n            line\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source || source.fill === false) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, options.propagate);\n      }\n    },\n\n    beforeDraw(chart, _args, options) {\n      const draw = options.drawTime === 'beforeDraw';\n      const metasets = chart.getSortedVisibleDatasetMetas();\n      const area = chart.chartArea;\n\n      for (let i = metasets.length - 1; i >= 0; --i) {\n        const source = metasets[i].$filler;\n\n        if (!source) {\n          continue;\n        }\n\n        source.line.updateControlPoints(area, source.axis);\n\n        if (draw) {\n          drawfill(chart.ctx, source, area);\n        }\n      }\n    },\n\n    beforeDatasetsDraw(chart, _args, options) {\n      if (options.drawTime !== 'beforeDatasetsDraw') {\n        return;\n      }\n\n      const metasets = chart.getSortedVisibleDatasetMetas();\n\n      for (let i = metasets.length - 1; i >= 0; --i) {\n        const source = metasets[i].$filler;\n\n        if (source) {\n          drawfill(chart.ctx, source, chart.chartArea);\n        }\n      }\n    },\n\n    beforeDatasetDraw(chart, args, options) {\n      const source = args.meta.$filler;\n\n      if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n        return;\n      }\n\n      drawfill(chart.ctx, source, chart.chartArea);\n    },\n\n    defaults: {\n      propagate: true,\n      drawTime: 'beforeDatasetDraw'\n    }\n  };\n\n  const getBoxSize = (labelOpts, fontSize) => {\n    let {\n      boxHeight = fontSize,\n      boxWidth = fontSize\n    } = labelOpts;\n\n    if (labelOpts.usePointStyle) {\n      boxHeight = Math.min(boxHeight, fontSize);\n      boxWidth = Math.min(boxWidth, fontSize);\n    }\n\n    return {\n      boxWidth,\n      boxHeight,\n      itemHeight: Math.max(fontSize, boxHeight)\n    };\n  };\n\n  const itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\n  class Legend extends Element {\n    constructor(config) {\n      super();\n      this._added = false;\n      this.legendHitBoxes = [];\n      this._hoveredItem = null;\n      this.doughnutMode = false;\n      this.chart = config.chart;\n      this.options = config.options;\n      this.ctx = config.ctx;\n      this.legendItems = undefined;\n      this.columnSizes = undefined;\n      this.lineWidths = undefined;\n      this.maxHeight = undefined;\n      this.maxWidth = undefined;\n      this.top = undefined;\n      this.bottom = undefined;\n      this.left = undefined;\n      this.right = undefined;\n      this.height = undefined;\n      this.width = undefined;\n      this._margins = undefined;\n      this.position = undefined;\n      this.weight = undefined;\n      this.fullSize = undefined;\n    }\n\n    update(maxWidth, maxHeight, margins) {\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins;\n      this.setDimensions();\n      this.buildLabels();\n      this.fit();\n    }\n\n    setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = this._margins.left;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = this._margins.top;\n        this.bottom = this.height;\n      }\n    }\n\n    buildLabels() {\n      const labelOpts = this.options.labels || {};\n      let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(item => labelOpts.filter(item, this.chart.data));\n      }\n\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n      }\n\n      if (this.options.reverse) {\n        legendItems.reverse();\n      }\n\n      this.legendItems = legendItems;\n    }\n\n    fit() {\n      const {\n        options,\n        ctx\n      } = this;\n\n      if (!options.display) {\n        this.width = this.height = 0;\n        return;\n      }\n\n      const labelOpts = options.labels;\n      const labelFont = toFont(labelOpts.font);\n      const fontSize = labelFont.size;\n\n      const titleHeight = this._computeTitleHeight();\n\n      const {\n        boxWidth,\n        itemHeight\n      } = getBoxSize(labelOpts, fontSize);\n      let width, height;\n      ctx.font = labelFont.string;\n\n      if (this.isHorizontal()) {\n        width = this.maxWidth;\n        height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = this.maxHeight;\n        width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      }\n\n      this.width = Math.min(width, options.maxWidth || this.maxWidth);\n      this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n\n    _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      const {\n        ctx,\n        maxWidth,\n        options: {\n          labels: {\n            padding\n          }\n        }\n      } = this;\n      const hitboxes = this.legendHitBoxes = [];\n      const lineWidths = this.lineWidths = [0];\n      const lineHeight = itemHeight + padding;\n      let totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      let row = -1;\n      let top = -lineHeight;\n      this.legendItems.forEach((legendItem, i) => {\n        const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n\n        hitboxes[i] = {\n          left: 0,\n          top,\n          row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n\n    _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n      const {\n        ctx,\n        maxHeight,\n        options: {\n          labels: {\n            padding\n          }\n        }\n      } = this;\n      const hitboxes = this.legendHitBoxes = [];\n      const columnSizes = this.columnSizes = [];\n      const heightLimit = maxHeight - titleHeight;\n      let totalWidth = padding;\n      let currentColWidth = 0;\n      let currentColHeight = 0;\n      let left = 0;\n      let col = 0;\n      this.legendItems.forEach((legendItem, i) => {\n        const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n        if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          currentColWidth = currentColHeight = 0;\n        }\n\n        hitboxes[i] = {\n          left,\n          top: currentColHeight,\n          col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n\n    adjustHitBoxes() {\n      if (!this.options.display) {\n        return;\n      }\n\n      const titleHeight = this._computeTitleHeight();\n\n      const {\n        legendHitBoxes: hitboxes,\n        options: {\n          align,\n          labels: {\n            padding\n          },\n          rtl\n        }\n      } = this;\n      const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n\n      if (this.isHorizontal()) {\n        let row = 0;\n\n        let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n\n        for (const hitbox of hitboxes) {\n          if (row !== hitbox.row) {\n            row = hitbox.row;\n            left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n          }\n\n          hitbox.top += this.top + titleHeight + padding;\n          hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n          left += hitbox.width + padding;\n        }\n      } else {\n        let col = 0;\n\n        let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n\n        for (const hitbox of hitboxes) {\n          if (hitbox.col !== col) {\n            col = hitbox.col;\n            top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n          }\n\n          hitbox.top = top;\n          hitbox.left += this.left + padding;\n          hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n          top += hitbox.height + padding;\n        }\n      }\n    }\n\n    isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n\n    draw() {\n      if (this.options.display) {\n        const ctx = this.ctx;\n        clipArea(ctx, this);\n\n        this._draw();\n\n        unclipArea(ctx);\n      }\n    }\n\n    _draw() {\n      const {\n        options: opts,\n        columnSizes,\n        lineWidths,\n        ctx\n      } = this;\n      const {\n        align,\n        labels: labelOpts\n      } = opts;\n      const defaultColor = defaults.color;\n      const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      const labelFont = toFont(labelOpts.font);\n      const {\n        color: fontColor,\n        padding\n      } = labelOpts;\n      const fontSize = labelFont.size;\n      const halfFontSize = fontSize / 2;\n      let cursor;\n      this.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n      const {\n        boxWidth,\n        boxHeight,\n        itemHeight\n      } = getBoxSize(labelOpts, fontSize);\n\n      const drawLegendBox = function (x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n\n        ctx.save();\n        const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n        if (labelOpts.usePointStyle) {\n          const drawOptions = {\n            radius: boxWidth * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          const centerY = y + halfFontSize;\n          drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n          const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          const borderRadius = toTRBLCorners(legendItem.borderRadius);\n          ctx.beginPath();\n\n          if (Object.values(borderRadius).some(v => v !== 0)) {\n            addRoundedRectPath(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n\n          ctx.fill();\n\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n\n        ctx.restore();\n      };\n\n      const fillText = function (x, y, legendItem) {\n        renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: rtlHelper.textAlign(legendItem.textAlign)\n        });\n      };\n\n      const isHorizontal = this.isHorizontal();\n\n      const titleHeight = this._computeTitleHeight();\n\n      if (isHorizontal) {\n        cursor = {\n          x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n          y: this.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: this.left + padding,\n          y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n\n      overrideTextDirection(this.ctx, opts.textDirection);\n      const lineHeight = itemHeight + padding;\n      this.legendItems.forEach((legendItem, i) => {\n        ctx.strokeStyle = legendItem.fontColor || fontColor;\n        ctx.fillStyle = legendItem.fontColor || fontColor;\n        const textWidth = ctx.measureText(legendItem.text).width;\n        const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        const width = boxWidth + halfFontSize + textWidth;\n        let x = cursor.x;\n        let y = cursor.y;\n        rtlHelper.setWidth(this.width);\n\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > this.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > this.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n        }\n\n        const realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n        fillText(rtlHelper.x(x), y, legendItem);\n\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      restoreTextDirection(this.ctx, opts.textDirection);\n    }\n\n    drawTitle() {\n      const opts = this.options;\n      const titleOpts = opts.title;\n      const titleFont = toFont(titleOpts.font);\n      const titlePadding = toPadding(titleOpts.padding);\n\n      if (!titleOpts.display) {\n        return;\n      }\n\n      const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      const ctx = this.ctx;\n      const position = titleOpts.position;\n      const halfFontSize = titleFont.size / 2;\n      const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      let y;\n      let left = this.left;\n      let maxWidth = this.width;\n\n      if (this.isHorizontal()) {\n        maxWidth = Math.max(...this.lineWidths);\n        y = this.top + topPaddingPlusHalfFontSize;\n        left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n      } else {\n        const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n        y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n      }\n\n      const x = _alignStartEnd(position, left, left + maxWidth);\n\n      ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n\n    _computeTitleHeight() {\n      const titleOpts = this.options.title;\n      const titleFont = toFont(titleOpts.font);\n      const titlePadding = toPadding(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n\n    _getLegendItemAt(x, y) {\n      let i, hitBox, lh;\n\n      if (x >= this.left && x <= this.right && y >= this.top && y <= this.bottom) {\n        lh = this.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            return this.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    }\n\n    handleEvent(e) {\n      const opts = this.options;\n\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n\n      const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n      if (e.type === 'mousemove') {\n        const previous = this._hoveredItem;\n        const sameItem = itemsEqual(previous, hoveredItem);\n\n        if (previous && !sameItem) {\n          callback(opts.onLeave, [e, previous, this], this);\n        }\n\n        this._hoveredItem = hoveredItem;\n\n        if (hoveredItem && !sameItem) {\n          callback(opts.onHover, [e, hoveredItem, this], this);\n        }\n      } else if (hoveredItem) {\n        callback(opts.onClick, [e, hoveredItem, this], this);\n      }\n    }\n\n  }\n\n  function isListened(type, opts) {\n    if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n      return true;\n    }\n\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n      return true;\n    }\n\n    return false;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n    _element: Legend,\n\n    start(chart, _args, options) {\n      const legend = chart.legend = new Legend({\n        ctx: chart.ctx,\n        options,\n        chart\n      });\n      layouts.configure(chart, legend, options);\n      layouts.addBox(chart, legend);\n    },\n\n    stop(chart) {\n      layouts.removeBox(chart, chart.legend);\n      delete chart.legend;\n    },\n\n    beforeUpdate(chart, _args, options) {\n      const legend = chart.legend;\n      layouts.configure(chart, legend, options);\n      legend.options = options;\n    },\n\n    afterUpdate(chart) {\n      const legend = chart.legend;\n      legend.buildLabels();\n      legend.adjustHitBoxes();\n    },\n\n    afterEvent(chart, args) {\n      if (!args.replay) {\n        chart.legend.handleEvent(args.event);\n      }\n    },\n\n    defaults: {\n      display: true,\n      position: 'top',\n      align: 'center',\n      fullSize: true,\n      reverse: false,\n      weight: 1000,\n\n      onClick(e, legendItem, legend) {\n        const index = legendItem.datasetIndex;\n        const ci = legend.chart;\n\n        if (ci.isDatasetVisible(index)) {\n          ci.hide(index);\n          legendItem.hidden = true;\n        } else {\n          ci.show(index);\n          legendItem.hidden = false;\n        }\n      },\n\n      onHover: null,\n      onLeave: null,\n      labels: {\n        color: ctx => ctx.chart.options.color,\n        boxWidth: 40,\n        padding: 10,\n\n        generateLabels(chart) {\n          const datasets = chart.data.datasets;\n          const {\n            labels: {\n              usePointStyle,\n              pointStyle,\n              textAlign,\n              color\n            }\n          } = chart.legend.options;\n          return chart._getSortedDatasetMetas().map(meta => {\n            const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n            const borderWidth = toPadding(style.borderWidth);\n            return {\n              text: datasets[meta.index].label,\n              fillStyle: style.backgroundColor,\n              fontColor: color,\n              hidden: !meta.visible,\n              lineCap: style.borderCapStyle,\n              lineDash: style.borderDash,\n              lineDashOffset: style.borderDashOffset,\n              lineJoin: style.borderJoinStyle,\n              lineWidth: (borderWidth.width + borderWidth.height) / 4,\n              strokeStyle: style.borderColor,\n              pointStyle: pointStyle || style.pointStyle,\n              rotation: style.rotation,\n              textAlign: textAlign || style.textAlign,\n              borderRadius: 0,\n              datasetIndex: meta.index\n            };\n          }, this);\n        }\n\n      },\n      title: {\n        color: ctx => ctx.chart.options.color,\n        display: false,\n        position: 'center',\n        text: ''\n      }\n    },\n    descriptors: {\n      _scriptable: name => !name.startsWith('on'),\n      labels: {\n        _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n      }\n    }\n  };\n\n  class Title extends Element {\n    constructor(config) {\n      super();\n      this.chart = config.chart;\n      this.options = config.options;\n      this.ctx = config.ctx;\n      this._padding = undefined;\n      this.top = undefined;\n      this.bottom = undefined;\n      this.left = undefined;\n      this.right = undefined;\n      this.width = undefined;\n      this.height = undefined;\n      this.position = undefined;\n      this.weight = undefined;\n      this.fullSize = undefined;\n    }\n\n    update(maxWidth, maxHeight) {\n      const opts = this.options;\n      this.left = 0;\n      this.top = 0;\n\n      if (!opts.display) {\n        this.width = this.height = this.right = this.bottom = 0;\n        return;\n      }\n\n      this.width = this.right = maxWidth;\n      this.height = this.bottom = maxHeight;\n      const lineCount = isArray(opts.text) ? opts.text.length : 1;\n      this._padding = toPadding(opts.padding);\n\n      const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n      if (this.isHorizontal()) {\n        this.height = textSize;\n      } else {\n        this.width = textSize;\n      }\n    }\n\n    isHorizontal() {\n      const pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n\n    _drawArgs(offset) {\n      const {\n        top,\n        left,\n        bottom,\n        right,\n        options\n      } = this;\n      const align = options.align;\n      let rotation = 0;\n      let maxWidth, titleX, titleY;\n\n      if (this.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = _alignStartEnd(align, bottom, top);\n          rotation = PI * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = _alignStartEnd(align, top, bottom);\n          rotation = PI * 0.5;\n        }\n\n        maxWidth = bottom - top;\n      }\n\n      return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n      };\n    }\n\n    draw() {\n      const ctx = this.ctx;\n      const opts = this.options;\n\n      if (!opts.display) {\n        return;\n      }\n\n      const fontOpts = toFont(opts.font);\n      const lineHeight = fontOpts.lineHeight;\n      const offset = lineHeight / 2 + this._padding.top;\n\n      const {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n      } = this._drawArgs(offset);\n\n      renderText(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth,\n        rotation,\n        textAlign: _toLeftRightCenter(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n\n  }\n\n  function createTitle(chart, titleOpts) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n    _element: Title,\n\n    start(chart, _args, options) {\n      createTitle(chart, options);\n    },\n\n    stop(chart) {\n      const titleBlock = chart.titleBlock;\n      layouts.removeBox(chart, titleBlock);\n      delete chart.titleBlock;\n    },\n\n    beforeUpdate(chart, _args, options) {\n      const title = chart.titleBlock;\n      layouts.configure(chart, title, options);\n      title.options = options;\n    },\n\n    defaults: {\n      align: 'center',\n      display: false,\n      font: {\n        weight: 'bold'\n      },\n      fullSize: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000\n    },\n    defaultRoutes: {\n      color: 'color'\n    },\n    descriptors: {\n      _scriptable: true,\n      _indexable: false\n    }\n  };\n  const map = new WeakMap();\n  var plugin_subtitle = {\n    id: 'subtitle',\n\n    start(chart, _args, options) {\n      const title = new Title({\n        ctx: chart.ctx,\n        options,\n        chart\n      });\n      layouts.configure(chart, title, options);\n      layouts.addBox(chart, title);\n      map.set(chart, title);\n    },\n\n    stop(chart) {\n      layouts.removeBox(chart, map.get(chart));\n      map.delete(chart);\n    },\n\n    beforeUpdate(chart, _args, options) {\n      const title = map.get(chart);\n      layouts.configure(chart, title, options);\n      title.options = options;\n    },\n\n    defaults: {\n      align: 'center',\n      display: false,\n      font: {\n        weight: 'normal'\n      },\n      fullSize: true,\n      padding: 0,\n      position: 'top',\n      text: '',\n      weight: 1500\n    },\n    defaultRoutes: {\n      color: 'color'\n    },\n    descriptors: {\n      _scriptable: true,\n      _indexable: false\n    }\n  };\n  const positioners = {\n    average(items) {\n      if (!items.length) {\n        return false;\n      }\n\n      let i, len;\n      let x = 0;\n      let y = 0;\n      let count = 0;\n\n      for (i = 0, len = items.length; i < len; ++i) {\n        const el = items[i].element;\n\n        if (el && el.hasValue()) {\n          const pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    nearest(items, eventPosition) {\n      if (!items.length) {\n        return false;\n      }\n\n      let x = eventPosition.x;\n      let y = eventPosition.y;\n      let minDistance = Number.POSITIVE_INFINITY;\n      let i, len, nearestElement;\n\n      for (i = 0, len = items.length; i < len; ++i) {\n        const el = items[i].element;\n\n        if (el && el.hasValue()) {\n          const center = el.getCenterPoint();\n          const d = distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        const tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x,\n        y\n      };\n    }\n\n  };\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (isArray(toPush)) {\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n\n  function createTooltipItem(chart, item) {\n    const {\n      element,\n      datasetIndex,\n      index\n    } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const {\n      label,\n      value\n    } = controller.getLabelAndValue(index);\n    return {\n      chart,\n      label,\n      parsed: controller.getParsed(index),\n      raw: chart.data.datasets[datasetIndex].data[index],\n      formattedValue: value,\n      dataset: controller.getDataset(),\n      dataIndex: index,\n      datasetIndex,\n      element\n    };\n  }\n\n  function getTooltipSize(tooltip, options) {\n    const ctx = tooltip._chart.ctx;\n    const {\n      body,\n      footer,\n      title\n    } = tooltip;\n    const {\n      boxWidth,\n      boxHeight\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n    if (titleLineCount) {\n      height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n\n    if (combinedBodyLength) {\n      const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n      height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n\n    if (footerLineCount) {\n      height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n\n    let widthPadding = 0;\n\n    const maxLineWidth = function (line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, bodyItem => {\n      each(bodyItem.before, maxLineWidth);\n      each(bodyItem.lines, maxLineWidth);\n      each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n      width,\n      height\n    };\n  }\n\n  function determineYAlign(chart, size) {\n    const {\n      y,\n      height\n    } = size;\n\n    if (y < height / 2) {\n      return 'top';\n    } else if (y > chart.height - height / 2) {\n      return 'bottom';\n    }\n\n    return 'center';\n  }\n\n  function doesNotFitWithAlign(xAlign, chart, options, size) {\n    const {\n      x,\n      width\n    } = size;\n    const caret = options.caretSize + options.caretPadding;\n\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n      return true;\n    }\n\n    if (xAlign === 'right' && x - width - caret < 0) {\n      return true;\n    }\n  }\n\n  function determineXAlign(chart, options, size, yAlign) {\n    const {\n      x,\n      width\n    } = size;\n    const {\n      width: chartWidth,\n      chartArea: {\n        left,\n        right\n      }\n    } = chart;\n    let xAlign = 'center';\n\n    if (yAlign === 'center') {\n      xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n      xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n      xAlign = 'right';\n    }\n\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n      xAlign = 'center';\n    }\n\n    return xAlign;\n  }\n\n  function determineAlignment(chart, options, size) {\n    const yAlign = options.yAlign || determineYAlign(chart, size);\n    return {\n      xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n      yAlign\n    };\n  }\n\n  function alignX(size, xAlign) {\n    let {\n      x,\n      width\n    } = size;\n\n    if (xAlign === 'right') {\n      x -= width;\n    } else if (xAlign === 'center') {\n      x -= width / 2;\n    }\n\n    return x;\n  }\n\n  function alignY(size, yAlign, paddingAndSize) {\n    let {\n      y,\n      height\n    } = size;\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= height + paddingAndSize;\n    } else {\n      y -= height / 2;\n    }\n\n    return y;\n  }\n\n  function getBackgroundPoint(options, size, alignment, chart) {\n    const {\n      caretSize,\n      caretPadding,\n      cornerRadius\n    } = options;\n    const {\n      xAlign,\n      yAlign\n    } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= Math.max(topLeft, bottomLeft) + caretPadding;\n    } else if (xAlign === 'right') {\n      x += Math.max(topRight, bottomRight) + caretPadding;\n    }\n\n    return {\n      x: _limitValue(x, 0, chart.width - size.width),\n      y: _limitValue(y, 0, chart.height - size.height)\n    };\n  }\n\n  function getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n  }\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  function createTooltipContext(parent, tooltip, tooltipItems) {\n    return Object.assign(Object.create(parent), {\n      tooltip,\n      tooltipItems,\n      type: 'tooltip'\n    });\n  }\n\n  function overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n  }\n\n  class Tooltip extends Element {\n    constructor(config) {\n      super();\n      this.opacity = 0;\n      this._active = [];\n      this._chart = config._chart;\n      this._eventPosition = undefined;\n      this._size = undefined;\n      this._cachedAnimations = undefined;\n      this._tooltipItems = [];\n      this.$animations = undefined;\n      this.$context = undefined;\n      this.options = config.options;\n      this.dataPoints = undefined;\n      this.title = undefined;\n      this.beforeBody = undefined;\n      this.body = undefined;\n      this.afterBody = undefined;\n      this.footer = undefined;\n      this.xAlign = undefined;\n      this.yAlign = undefined;\n      this.x = undefined;\n      this.y = undefined;\n      this.height = undefined;\n      this.width = undefined;\n      this.caretX = undefined;\n      this.caretY = undefined;\n      this.labelColors = undefined;\n      this.labelPointStyles = undefined;\n      this.labelTextColors = undefined;\n    }\n\n    initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n\n    _resolveAnimations() {\n      const cached = this._cachedAnimations;\n\n      if (cached) {\n        return cached;\n      }\n\n      const chart = this._chart;\n      const options = this.options.setContext(this.getContext());\n      const opts = options.enabled && chart.options.animation && options.animations;\n      const animations = new Animations(this._chart, opts);\n\n      if (opts._cacheable) {\n        this._cachedAnimations = Object.freeze(animations);\n      }\n\n      return animations;\n    }\n\n    getContext() {\n      return this.$context || (this.$context = createTooltipContext(this._chart.getContext(), this, this._tooltipItems));\n    }\n\n    getTitle(context, options) {\n      const {\n        callbacks\n      } = options;\n      const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n      const title = callbacks.title.apply(this, [context]);\n      const afterTitle = callbacks.afterTitle.apply(this, [context]);\n      let lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n\n    getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n    }\n\n    getBody(tooltipItems, options) {\n      const {\n        callbacks\n      } = options;\n      const bodyItems = [];\n      each(tooltipItems, context => {\n        const bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        const scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n        pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n        pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n\n    getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n    }\n\n    getFooter(tooltipItems, options) {\n      const {\n        callbacks\n      } = options;\n      const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n      const footer = callbacks.footer.apply(this, [tooltipItems]);\n      const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n      let lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n\n    _createItems(options) {\n      const active = this._active;\n      const data = this._chart.data;\n      const labelColors = [];\n      const labelPointStyles = [];\n      const labelTextColors = [];\n      let tooltipItems = [];\n      let i, len;\n\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(this._chart, active[i]));\n      }\n\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n      }\n\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n      }\n\n      each(tooltipItems, context => {\n        const scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(scoped.labelColor.call(this, context));\n        labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n        labelTextColors.push(scoped.labelTextColor.call(this, context));\n      });\n      this.labelColors = labelColors;\n      this.labelPointStyles = labelPointStyles;\n      this.labelTextColors = labelTextColors;\n      this.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n\n    update(changed, replay) {\n      const options = this.options.setContext(this.getContext());\n      const active = this._active;\n      let properties;\n      let tooltipItems = [];\n\n      if (!active.length) {\n        if (this.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        const position = positioners[options.position].call(this, active, this._eventPosition);\n        tooltipItems = this._createItems(options);\n        this.title = this.getTitle(tooltipItems, options);\n        this.beforeBody = this.getBeforeBody(tooltipItems, options);\n        this.body = this.getBody(tooltipItems, options);\n        this.afterBody = this.getAfterBody(tooltipItems, options);\n        this.footer = this.getFooter(tooltipItems, options);\n        const size = this._size = getTooltipSize(this, options);\n        const positionAndSize = Object.assign({}, position, size);\n        const alignment = determineAlignment(this._chart, options, positionAndSize);\n        const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this._chart);\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n\n      this._tooltipItems = tooltipItems;\n      this.$context = undefined;\n\n      if (properties) {\n        this._resolveAnimations().update(this, properties);\n      }\n\n      if (changed && options.external) {\n        options.external.call(this, {\n          chart: this._chart,\n          tooltip: this,\n          replay\n        });\n      }\n    }\n\n    drawCaret(tooltipPoint, ctx, size, options) {\n      const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n\n    getCaretPosition(tooltipPoint, size, options) {\n      const {\n        xAlign,\n        yAlign\n      } = this;\n      const {\n        caretSize,\n        cornerRadius\n      } = options;\n      const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n      } = toTRBLCorners(cornerRadius);\n      const {\n        x: ptX,\n        y: ptY\n      } = tooltipPoint;\n      const {\n        width,\n        height\n      } = size;\n      let x1, x2, x3, y1, y2, y3;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n\n        y3 = y1;\n      }\n\n      return {\n        x1,\n        x2,\n        x3,\n        y1,\n        y2,\n        y3\n      };\n    }\n\n    drawTitle(pt, ctx, options) {\n      const title = this.title;\n      const length = title.length;\n      let titleFont, titleSpacing, i;\n\n      if (length) {\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = toFont(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n\n    _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      const labelColors = this.labelColors[i];\n      const labelPointStyle = this.labelPointStyles[i];\n      const {\n        boxHeight,\n        boxWidth,\n        boxPadding\n      } = options;\n      const bodyFont = toFont(options.bodyFont);\n      const colorX = getAlignedX(this, 'left', options);\n      const rtlColorX = rtlHelper.x(colorX);\n      const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      const colorY = pt.y + yOffSet;\n\n      if (options.usePointStyle) {\n        const drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        const centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.fillStyle = labelColors.backgroundColor;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = labelColors.borderWidth || 1;\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.setLineDash(labelColors.borderDash || []);\n        ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n        const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n        const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n        const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          addRoundedRectPath(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n\n      ctx.fillStyle = this.labelTextColors[i];\n    }\n\n    drawBody(pt, ctx, options) {\n      const {\n        body\n      } = this;\n      const {\n        bodySpacing,\n        bodyAlign,\n        displayColors,\n        boxHeight,\n        boxWidth,\n        boxPadding\n      } = options;\n      const bodyFont = toFont(options.bodyFont);\n      let bodyLineHeight = bodyFont.lineHeight;\n      let xLinePadding = 0;\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      const fillLineOfText = function (line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n\n      const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      let bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      each(this.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = this.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        each(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n\n        if (displayColors && lines.length) {\n          this._drawColorBox(ctx, pt, i, rtlHelper, options);\n\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n\n        each(bodyItem.after, fillLineOfText);\n      }\n\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      each(this.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n\n    drawFooter(pt, ctx, options) {\n      const footer = this.footer;\n      const length = footer.length;\n      let footerFont, i;\n\n      if (length) {\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = toFont(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n\n    drawBackground(pt, ctx, tooltipSize, options) {\n      const {\n        xAlign,\n        yAlign\n      } = this;\n      const {\n        x,\n        y\n      } = pt;\n      const {\n        width,\n        height\n      } = tooltipSize;\n      const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n      } = toTRBLCorners(options.cornerRadius);\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + topLeft, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + width - topRight, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + width, y + height - bottomRight);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + bottomLeft, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x, y + topLeft);\n      ctx.quadraticCurveTo(x, y, x + topLeft, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n\n    _updateAnimationTarget(options) {\n      const chart = this._chart;\n      const anims = this.$animations;\n      const animX = anims && anims.x;\n      const animY = anims && anims.y;\n\n      if (animX || animY) {\n        const position = positioners[options.position].call(this, this._active, this._eventPosition);\n\n        if (!position) {\n          return;\n        }\n\n        const size = this._size = getTooltipSize(this, options);\n        const positionAndSize = Object.assign({}, position, this._size);\n        const alignment = determineAlignment(chart, options, positionAndSize);\n        const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n\n        if (animX._to !== point.x || animY._to !== point.y) {\n          this.xAlign = alignment.xAlign;\n          this.yAlign = alignment.yAlign;\n          this.width = size.width;\n          this.height = size.height;\n          this.caretX = position.x;\n          this.caretY = position.y;\n\n          this._resolveAnimations().update(this, point);\n        }\n      }\n    }\n\n    draw(ctx) {\n      const options = this.options.setContext(this.getContext());\n      let opacity = this.opacity;\n\n      if (!opacity) {\n        return;\n      }\n\n      this._updateAnimationTarget(options);\n\n      const tooltipSize = {\n        width: this.width,\n        height: this.height\n      };\n      const pt = {\n        x: this.x,\n        y: this.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      const padding = toPadding(options.padding);\n      const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        this.drawBackground(pt, ctx, tooltipSize, options);\n        overrideTextDirection(ctx, options.textDirection);\n        pt.y += padding.top;\n        this.drawTitle(pt, ctx, options);\n        this.drawBody(pt, ctx, options);\n        this.drawFooter(pt, ctx, options);\n        restoreTextDirection(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n\n    getActiveElements() {\n      return this._active || [];\n    }\n\n    setActiveElements(activeElements, eventPosition) {\n      const lastActive = this._active;\n      const active = activeElements.map(({\n        datasetIndex,\n        index\n      }) => {\n        const meta = this._chart.getDatasetMeta(datasetIndex);\n\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n\n        return {\n          datasetIndex,\n          element: meta.data[index],\n          index\n        };\n      });\n      const changed = !_elementsEqual(lastActive, active);\n\n      const positionChanged = this._positionChanged(active, eventPosition);\n\n      if (changed || positionChanged) {\n        this._active = active;\n        this._eventPosition = eventPosition;\n        this.update(true);\n      }\n    }\n\n    handleEvent(e, replay) {\n      const options = this.options;\n      const lastActive = this._active || [];\n      let changed = false;\n      let active = [];\n\n      if (e.type !== 'mouseout') {\n        active = this._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n        if (options.reverse) {\n          active.reverse();\n        }\n      }\n\n      const positionChanged = this._positionChanged(active, e);\n\n      changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n      if (changed) {\n        this._active = active;\n\n        if (options.enabled || options.external) {\n          this._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          this.update(true, replay);\n        }\n      }\n\n      return changed;\n    }\n\n    _positionChanged(active, e) {\n      const {\n        caretX,\n        caretY,\n        options\n      } = this;\n      const position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n\n  }\n\n  Tooltip.positioners = positioners;\n  var plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n\n    afterInit(chart, _args, options) {\n      if (options) {\n        chart.tooltip = new Tooltip({\n          _chart: chart,\n          options\n        });\n      }\n    },\n\n    beforeUpdate(chart, _args, options) {\n      if (chart.tooltip) {\n        chart.tooltip.initialize(options);\n      }\n    },\n\n    reset(chart, _args, options) {\n      if (chart.tooltip) {\n        chart.tooltip.initialize(options);\n      }\n    },\n\n    afterDraw(chart) {\n      const tooltip = chart.tooltip;\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n\n      if (tooltip) {\n        tooltip.draw(chart.ctx);\n      }\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    },\n\n    afterEvent(chart, args) {\n      if (chart.tooltip) {\n        const useFinalPosition = args.replay;\n\n        if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n          args.changed = true;\n        }\n      }\n    },\n\n    defaults: {\n      enabled: true,\n      external: null,\n      position: 'average',\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleColor: '#fff',\n      titleFont: {\n        weight: 'bold'\n      },\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleAlign: 'left',\n      bodyColor: '#fff',\n      bodySpacing: 2,\n      bodyFont: {},\n      bodyAlign: 'left',\n      footerColor: '#fff',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFont: {\n        weight: 'bold'\n      },\n      footerAlign: 'left',\n      padding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      boxHeight: (ctx, opts) => opts.bodyFont.size,\n      boxWidth: (ctx, opts) => opts.bodyFont.size,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      boxPadding: 0,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      animation: {\n        duration: 400,\n        easing: 'easeOutQuart'\n      },\n      animations: {\n        numbers: {\n          type: 'number',\n          properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n        },\n        opacity: {\n          easing: 'linear',\n          duration: 200\n        }\n      },\n      callbacks: {\n        beforeTitle: noop,\n\n        title(tooltipItems) {\n          if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n\n            if (this && this.options && this.options.mode === 'dataset') {\n              return item.dataset.label || '';\n            } else if (item.label) {\n              return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n              return labels[item.dataIndex];\n            }\n          }\n\n          return '';\n        },\n\n        afterTitle: noop,\n        beforeBody: noop,\n        beforeLabel: noop,\n\n        label(tooltipItem) {\n          if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n          }\n\n          let label = tooltipItem.dataset.label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          const value = tooltipItem.formattedValue;\n\n          if (!isNullOrUndef(value)) {\n            label += value;\n          }\n\n          return label;\n        },\n\n        labelColor(tooltipItem) {\n          const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n          const options = meta.controller.getStyle(tooltipItem.dataIndex);\n          return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n          };\n        },\n\n        labelTextColor() {\n          return this.options.bodyColor;\n        },\n\n        labelPointStyle(tooltipItem) {\n          const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n          const options = meta.controller.getStyle(tooltipItem.dataIndex);\n          return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n          };\n        },\n\n        afterLabel: noop,\n        afterBody: noop,\n        beforeFooter: noop,\n        footer: noop,\n        afterFooter: noop\n      }\n    },\n    defaultRoutes: {\n      bodyFont: 'font',\n      footerFont: 'font',\n      titleFont: 'font'\n    },\n    descriptors: {\n      _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n      _indexable: false,\n      callbacks: {\n        _scriptable: false,\n        _indexable: false\n      },\n      animation: {\n        _fallback: false\n      },\n      animations: {\n        _fallback: 'animation'\n      }\n    },\n    additionalOptionScopes: ['interaction']\n  };\n  var plugins = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    Decimation: plugin_decimation,\n    Filler: plugin_filler,\n    Legend: plugin_legend,\n    SubTitle: plugin_subtitle,\n    Title: plugin_title,\n    Tooltip: plugin_tooltip\n  });\n\n  const addIfString = (labels, raw, index) => typeof raw === 'string' ? labels.push(raw) - 1 : isNaN(raw) ? null : index;\n\n  function findOrAddLabel(labels, raw, index) {\n    const first = labels.indexOf(raw);\n\n    if (first === -1) {\n      return addIfString(labels, raw, index);\n    }\n\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n  }\n\n  const validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\n  class CategoryScale extends Scale {\n    constructor(cfg) {\n      super(cfg);\n      this._startValue = undefined;\n      this._valueRange = 0;\n    }\n\n    parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n\n      const labels = this.getLabels();\n      index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n      return validIndex(index, labels.length - 1);\n    }\n\n    determineDataLimits() {\n      const {\n        minDefined,\n        maxDefined\n      } = this.getUserBounds();\n      let {\n        min,\n        max\n      } = this.getMinMax(true);\n\n      if (this.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n\n        if (!maxDefined) {\n          max = this.getLabels().length - 1;\n        }\n      }\n\n      this.min = min;\n      this.max = max;\n    }\n\n    buildTicks() {\n      const min = this.min;\n      const max = this.max;\n      const offset = this.options.offset;\n      const ticks = [];\n      let labels = this.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      this._startValue = this.min - (offset ? 0.5 : 0);\n\n      for (let value = min; value <= max; value++) {\n        ticks.push({\n          value\n        });\n      }\n\n      return ticks;\n    }\n\n    getLabelForValue(value) {\n      const labels = this.getLabels();\n\n      if (value >= 0 && value < labels.length) {\n        return labels[value];\n      }\n\n      return value;\n    }\n\n    configure() {\n      super.configure();\n\n      if (!this.isHorizontal()) {\n        this._reversePixels = !this._reversePixels;\n      }\n    }\n\n    getPixelForValue(value) {\n      if (typeof value !== 'number') {\n        value = this.parse(value);\n      }\n\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n\n    getPixelForTick(index) {\n      const ticks = this.ticks;\n\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n\n      return this.getPixelForValue(ticks[index].value);\n    }\n\n    getValueForPixel(pixel) {\n      return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n\n    getBasePixel() {\n      return this.bottom;\n    }\n\n  }\n\n  CategoryScale.id = 'category';\n  CategoryScale.defaults = {\n    ticks: {\n      callback: CategoryScale.prototype.getLabelForValue\n    }\n  };\n\n  function generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const {\n      bounds,\n      step,\n      min,\n      max,\n      precision,\n      count,\n      maxTicks,\n      maxDigits,\n      includeBounds\n    } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const {\n      min: rmin,\n      max: rmax\n    } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n      return [{\n        value: rmin\n      }, {\n        value: rmax\n      }];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxSpaces) {\n      spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n\n    if (!isNullOrUndef(precision)) {\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    if (bounds === 'ticks') {\n      niceMin = Math.floor(rmin / spacing) * spacing;\n      niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n      niceMin = rmin;\n      niceMax = rmax;\n    }\n\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n      numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n      spacing = (max - min) / numSpaces;\n      niceMin = min;\n      niceMax = max;\n    } else if (countDefined) {\n      niceMin = minDefined ? min : niceMin;\n      niceMax = maxDefined ? max : niceMax;\n      numSpaces = count - 1;\n      spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n      numSpaces = (niceMax - niceMin) / spacing;\n\n      if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n        numSpaces = Math.round(numSpaces);\n      } else {\n        numSpaces = Math.ceil(numSpaces);\n      }\n    }\n\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n\n    if (minDefined) {\n      if (includeBounds && niceMin !== min) {\n        ticks.push({\n          value: min\n        });\n\n        if (niceMin < min) {\n          j++;\n        }\n\n        if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n          j++;\n        }\n      } else if (niceMin < min) {\n        j++;\n      }\n    }\n\n    for (; j < numSpaces; ++j) {\n      ticks.push({\n        value: Math.round((niceMin + j * spacing) * factor) / factor\n      });\n    }\n\n    if (maxDefined && includeBounds && niceMax !== max) {\n      if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n        ticks[ticks.length - 1].value = max;\n      } else {\n        ticks.push({\n          value: max\n        });\n      }\n    } else if (!maxDefined || niceMax === max) {\n      ticks.push({\n        value: niceMax\n      });\n    }\n\n    return ticks;\n  }\n\n  function relativeLabelSize(value, minSpacing, {\n    horizontal,\n    minRotation\n  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n  }\n\n  class LinearScaleBase extends Scale {\n    constructor(cfg) {\n      super(cfg);\n      this.start = undefined;\n      this.end = undefined;\n      this._startValue = undefined;\n      this._endValue = undefined;\n      this._valueRange = 0;\n    }\n\n    parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n\n      return +raw;\n    }\n\n    handleTickRangeOptions() {\n      const {\n        beginAtZero\n      } = this.options;\n      const {\n        minDefined,\n        maxDefined\n      } = this.getUserBounds();\n      let {\n        min,\n        max\n      } = this;\n\n      const setMin = v => min = minDefined ? min : v;\n\n      const setMax = v => max = maxDefined ? max : v;\n\n      if (beginAtZero) {\n        const minSign = sign(min);\n        const maxSign = sign(max);\n\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n\n      if (min === max) {\n        let offset = 1;\n\n        if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n          offset = Math.abs(max * 0.05);\n        }\n\n        setMax(max + offset);\n\n        if (!beginAtZero) {\n          setMin(min - offset);\n        }\n      }\n\n      this.min = min;\n      this.max = max;\n    }\n\n    getTickLimit() {\n      const tickOpts = this.options.ticks;\n      let {\n        maxTicksLimit,\n        stepSize\n      } = tickOpts;\n      let maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      } else {\n        maxTicks = this.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    }\n\n    computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n\n    buildTicks() {\n      const opts = this.options;\n      const tickOpts = opts.ticks;\n      let maxTicks = this.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      const numericGeneratorOptions = {\n        maxTicks,\n        bounds: opts.bounds,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count,\n        maxDigits: this._maxDigits(),\n        horizontal: this.isHorizontal(),\n        minRotation: tickOpts.minRotation || 0,\n        includeBounds: tickOpts.includeBounds !== false\n      };\n      const dataRange = this._range || this;\n      const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n\n      return ticks;\n    }\n\n    configure() {\n      const ticks = this.ticks;\n      let start = this.min;\n      let end = this.max;\n      super.configure();\n\n      if (this.options.offset && ticks.length) {\n        const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n\n      this._startValue = start;\n      this._endValue = end;\n      this._valueRange = end - start;\n    }\n\n    getLabelForValue(value) {\n      return formatNumber(value, this.chart.options.locale);\n    }\n\n  }\n\n  class LinearScale extends LinearScaleBase {\n    determineDataLimits() {\n      const {\n        min,\n        max\n      } = this.getMinMax(true);\n      this.min = isNumberFinite(min) ? min : 0;\n      this.max = isNumberFinite(max) ? max : 1;\n      this.handleTickRangeOptions();\n    }\n\n    computeTickLimit() {\n      const horizontal = this.isHorizontal();\n      const length = horizontal ? this.width : this.height;\n      const minRotation = toRadians(this.options.ticks.minRotation);\n      const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n\n      const tickFont = this._resolveTickFontOptions(0);\n\n      return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n\n    getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n\n    getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n\n  }\n\n  LinearScale.id = 'linear';\n  LinearScale.defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n  function isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n    return remain === 1;\n  }\n\n  function generateTicks(generationOptions, dataRange) {\n    const endExp = Math.floor(log10(dataRange.max));\n    const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    const ticks = [];\n    let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n    let exp = Math.floor(log10(tickVal));\n    let significand = Math.floor(tickVal / Math.pow(10, exp));\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push({\n        value: tickVal,\n        major: isMajor(tickVal)\n      });\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n    ticks.push({\n      value: lastTick,\n      major: isMajor(tickVal)\n    });\n    return ticks;\n  }\n\n  class LogarithmicScale extends Scale {\n    constructor(cfg) {\n      super(cfg);\n      this.start = undefined;\n      this.end = undefined;\n      this._startValue = undefined;\n      this._valueRange = 0;\n    }\n\n    parse(raw, index) {\n      const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n\n      return isNumberFinite(value) && value > 0 ? value : null;\n    }\n\n    determineDataLimits() {\n      const {\n        min,\n        max\n      } = this.getMinMax(true);\n      this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n      this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n\n      if (this.options.beginAtZero) {\n        this._zero = true;\n      }\n\n      this.handleTickRangeOptions();\n    }\n\n    handleTickRangeOptions() {\n      const {\n        minDefined,\n        maxDefined\n      } = this.getUserBounds();\n      let min = this.min;\n      let max = this.max;\n\n      const setMin = v => min = minDefined ? min : v;\n\n      const setMax = v => max = maxDefined ? max : v;\n\n      const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(exp(min, -1));\n          setMax(exp(max, +1));\n        }\n      }\n\n      if (min <= 0) {\n        setMin(exp(max, -1));\n      }\n\n      if (max <= 0) {\n        setMax(exp(min, +1));\n      }\n\n      if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n        setMin(exp(min, -1));\n      }\n\n      this.min = min;\n      this.max = max;\n    }\n\n    buildTicks() {\n      const opts = this.options;\n      const generationOptions = {\n        min: this._userMin,\n        max: this._userMax\n      };\n      const ticks = generateTicks(generationOptions, this);\n\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n\n      return ticks;\n    }\n\n    getLabelForValue(value) {\n      return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n    }\n\n    configure() {\n      const start = this.min;\n      super.configure();\n      this._startValue = log10(start);\n      this._valueRange = log10(this.max) - log10(start);\n    }\n\n    getPixelForValue(value) {\n      if (value === undefined || value === 0) {\n        value = this.min;\n      }\n\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n\n      return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n\n    getValueForPixel(pixel) {\n      const decimal = this.getDecimalForPixel(pixel);\n      return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n\n  }\n\n  LogarithmicScale.id = 'logarithmic';\n  LogarithmicScale.defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n  function getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      const padding = toPadding(tickOpts.backdropPadding);\n      return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [label];\n    return {\n      w: _longestText(ctx, font.string, label),\n      h: label.length * font.lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n\n  function fitWithPointLabels(scale) {\n    const furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    const furthestAngles = {};\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale.getLabels().length;\n\n    for (let i = 0; i < valueCount; i++) {\n      const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n      padding[i] = opts.padding;\n      const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n      const plFont = toFont(opts.font);\n      const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n      labelSizes[i] = textSize;\n      const angleRadians = scale.getIndexAngle(i);\n      const angle = toDegrees(angleRadians);\n      const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n  }\n\n  function buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale.getLabels().length;\n    const opts = scale.options;\n    const tickBackdropHeight = getTickBackdropHeight(opts);\n    const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n    for (let i = 0; i < valueCount; i++) {\n      const extra = i === 0 ? tickBackdropHeight / 2 : 0;\n      const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n      const angle = toDegrees(scale.getIndexAngle(i));\n      const size = labelSizes[i];\n      const y = yForAngle(pointLabelPosition.y, size.h, angle);\n      const textAlign = getTextAlignForAngle(angle);\n      const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n      items.push({\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n      });\n    }\n\n    return items;\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n      x -= w;\n    } else if (align === 'center') {\n      x -= w / 2;\n    }\n\n    return x;\n  }\n\n  function yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n      y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n      y -= h;\n    }\n\n    return y;\n  }\n\n  function drawPointLabels(scale, labelCount) {\n    const {\n      ctx,\n      options: {\n        pointLabels\n      }\n    } = scale;\n\n    for (let i = labelCount - 1; i >= 0; i--) {\n      const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n      const plFont = toFont(optsAtIndex.font);\n      const {\n        x,\n        y,\n        textAlign,\n        left,\n        top,\n        right,\n        bottom\n      } = scale._pointLabelItems[i];\n      const {\n        backdropColor\n      } = optsAtIndex;\n\n      if (!isNullOrUndef(backdropColor)) {\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n      }\n\n      renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      });\n    }\n  }\n\n  function pathRadiusLine(scale, radius, circular, labelCount) {\n    const {\n      ctx\n    } = scale;\n\n    if (circular) {\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n      let pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (let i = 1; i < labelCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const {\n      color,\n      lineWidth\n    } = gridLineOpts;\n\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(gridLineOpts.borderDash);\n    ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return isNumber(param) ? param : 0;\n  }\n\n  function createPointLabelContext(parent, index, label) {\n    return Object.assign(Object.create(parent), {\n      label,\n      index,\n      type: 'pointLabel'\n    });\n  }\n\n  class RadialLinearScale extends LinearScaleBase {\n    constructor(cfg) {\n      super(cfg);\n      this.xCenter = undefined;\n      this.yCenter = undefined;\n      this.drawingArea = undefined;\n      this._pointLabels = [];\n      this._pointLabelItems = [];\n    }\n\n    setDimensions() {\n      this.width = this.maxWidth;\n      this.height = this.maxHeight;\n      this.paddingTop = getTickBackdropHeight(this.options) / 2;\n      this.xCenter = Math.floor(this.width / 2);\n      this.yCenter = Math.floor((this.height - this.paddingTop) / 2);\n      this.drawingArea = Math.min(this.height - this.paddingTop, this.width) / 2;\n    }\n\n    determineDataLimits() {\n      const {\n        min,\n        max\n      } = this.getMinMax(false);\n      this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n      this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n      this.handleTickRangeOptions();\n    }\n\n    computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n\n    generateTickLabels(ticks) {\n      LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n      this._pointLabels = this.getLabels().map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      });\n    }\n\n    fit() {\n      const opts = this.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        this.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n\n    _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      let radiusReductionRight = Math.max(furthestLimits.r - this.width, 0) / Math.sin(furthestAngles.r);\n      let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      let radiusReductionBottom = -Math.max(furthestLimits.b - (this.height - this.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      this.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n      this.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    }\n\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      const maxRight = this.width - rightMovement - this.drawingArea;\n      const maxLeft = leftMovement + this.drawingArea;\n      const maxTop = topMovement + this.drawingArea;\n      const maxBottom = this.height - this.paddingTop - bottomMovement - this.drawingArea;\n      this.xCenter = Math.floor((maxLeft + maxRight) / 2 + this.left);\n      this.yCenter = Math.floor((maxTop + maxBottom) / 2 + this.top + this.paddingTop);\n    }\n\n    getIndexAngle(index) {\n      const angleMultiplier = TAU / this.getLabels().length;\n      const startAngle = this.options.startAngle || 0;\n      return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n\n    getDistanceFromCenterForValue(value) {\n      if (isNullOrUndef(value)) {\n        return NaN;\n      }\n\n      const scalingFactor = this.drawingArea / (this.max - this.min);\n\n      if (this.options.reverse) {\n        return (this.max - value) * scalingFactor;\n      }\n\n      return (value - this.min) * scalingFactor;\n    }\n\n    getValueForDistanceFromCenter(distance) {\n      if (isNullOrUndef(distance)) {\n        return NaN;\n      }\n\n      const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n      return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n\n    getPointLabelContext(index) {\n      const pointLabels = this._pointLabels || [];\n\n      if (index >= 0 && index < pointLabels.length) {\n        const pointLabel = pointLabels[index];\n        return createPointLabelContext(this.getContext(), index, pointLabel);\n      }\n    }\n\n    getPointPosition(index, distanceFromCenter) {\n      const angle = this.getIndexAngle(index) - HALF_PI;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n        angle\n      };\n    }\n\n    getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n\n    getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n\n    getPointLabelPosition(index) {\n      const {\n        left,\n        top,\n        right,\n        bottom\n      } = this._pointLabelItems[index];\n      return {\n        left,\n        top,\n        right,\n        bottom\n      };\n    }\n\n    drawBackground() {\n      const {\n        backgroundColor,\n        grid: {\n          circular\n        }\n      } = this.options;\n\n      if (backgroundColor) {\n        const ctx = this.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this.getLabels().length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n\n    drawGrid() {\n      const ctx = this.ctx;\n      const opts = this.options;\n      const {\n        angleLines,\n        grid\n      } = opts;\n      const labelCount = this.getLabels().length;\n      let i, offset, position;\n\n      if (opts.pointLabels.display) {\n        drawPointLabels(this, labelCount);\n      }\n\n      if (grid.display) {\n        this.ticks.forEach((tick, index) => {\n          if (index !== 0) {\n            offset = this.getDistanceFromCenterForValue(tick.value);\n            const optsAtIndex = grid.setContext(this.getContext(index - 1));\n            drawRadiusLine(this, optsAtIndex, offset, labelCount);\n          }\n        });\n      }\n\n      if (angleLines.display) {\n        ctx.save();\n\n        for (i = this.getLabels().length - 1; i >= 0; i--) {\n          const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n          const {\n            color,\n            lineWidth\n          } = optsAtIndex;\n\n          if (!lineWidth || !color) {\n            continue;\n          }\n\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n          position = this.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(this.xCenter, this.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n\n        ctx.restore();\n      }\n    }\n\n    drawBorder() {}\n\n    drawLabels() {\n      const ctx = this.ctx;\n      const opts = this.options;\n      const tickOpts = opts.ticks;\n\n      if (!tickOpts.display) {\n        return;\n      }\n\n      const startAngle = this.getIndexAngle(0);\n      let offset, width;\n      ctx.save();\n      ctx.translate(this.xCenter, this.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      this.ticks.forEach((tick, index) => {\n        if (index === 0 && !opts.reverse) {\n          return;\n        }\n\n        const optsAtIndex = tickOpts.setContext(this.getContext(index));\n        const tickFont = toFont(optsAtIndex.font);\n        offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n        if (optsAtIndex.showLabelBackdrop) {\n          ctx.font = tickFont.string;\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          const padding = toPadding(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n\n        renderText(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color\n        });\n      });\n      ctx.restore();\n    }\n\n    drawTitle() {}\n\n  }\n\n  RadialLinearScale.id = 'radialLinear';\n  RadialLinearScale.defaults = {\n    display: true,\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    grid: {\n      circular: false\n    },\n    startAngle: 0,\n    ticks: {\n      showLabelBackdrop: true,\n      callback: Ticks.formatters.numeric\n    },\n    pointLabels: {\n      backdropColor: undefined,\n      backdropPadding: 2,\n      display: true,\n      font: {\n        size: 10\n      },\n\n      callback(label) {\n        return label;\n      },\n\n      padding: 5\n    }\n  };\n  RadialLinearScale.defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n  RadialLinearScale.descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n  const INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: 1000\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: 60\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: 60\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: 24\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: 30\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: 4\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: 12\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: 4\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  const UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n      return null;\n    }\n\n    const adapter = scale._adapter;\n    const {\n      parser,\n      round,\n      isoWeekday\n    } = scale._parseOpts;\n    let value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    }\n\n    if (!isNumberFinite(value)) {\n      value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n\n    if (value === null) {\n      return null;\n    }\n\n    if (round) {\n      value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n\n    return +value;\n  }\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n\n    for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      const interval = INTERVALS[UNITS[i]];\n      const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n\n  function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n      const unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n\n  function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n      ticks[time] = true;\n    } else if (timestamps.length) {\n      const {\n        lo,\n        hi\n      } = _lookup(timestamps, time);\n\n      const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n      ticks[timestamp] = true;\n    }\n  }\n\n  function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n\n    for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n      index = map[major];\n\n      if (index >= 0) {\n        ticks[index].major = true;\n      }\n    }\n\n    return ticks;\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n    const map = {};\n    const ilen = values.length;\n    let i, value;\n\n    for (i = 0; i < ilen; ++i) {\n      value = values[i];\n      map[value] = i;\n      ticks.push({\n        value,\n        major: false\n      });\n    }\n\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n  }\n\n  class TimeScale extends Scale {\n    constructor(props) {\n      super(props);\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n      this._unit = 'day';\n      this._majorUnit = undefined;\n      this._offsets = {};\n      this._normalized = false;\n      this._parseOpts = undefined;\n    }\n\n    init(scaleOpts, opts) {\n      const time = scaleOpts.time || (scaleOpts.time = {});\n      const adapter = this._adapter = new _adapters._date(scaleOpts.adapters.date);\n      mergeIf(time.displayFormats, adapter.formats());\n      this._parseOpts = {\n        parser: time.parser,\n        round: time.round,\n        isoWeekday: time.isoWeekday\n      };\n      super.init(scaleOpts);\n      this._normalized = opts.normalized;\n    }\n\n    parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n\n      return parse(this, raw);\n    }\n\n    beforeLayout() {\n      super.beforeLayout();\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n\n    determineDataLimits() {\n      const options = this.options;\n      const adapter = this._adapter;\n      const unit = options.time.unit || 'day';\n      let {\n        min,\n        max,\n        minDefined,\n        maxDefined\n      } = this.getUserBounds();\n\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n\n      if (!minDefined || !maxDefined) {\n        _applyBounds(this._getLabelBounds());\n\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(this.getMinMax(false));\n        }\n      }\n\n      min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      this.min = Math.min(min, max - 1);\n      this.max = Math.max(min + 1, max);\n    }\n\n    _getLabelBounds() {\n      const arr = this.getLabelTimestamps();\n      let min = Number.POSITIVE_INFINITY;\n      let max = Number.NEGATIVE_INFINITY;\n\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n\n      return {\n        min,\n        max\n      };\n    }\n\n    buildTicks() {\n      const options = this.options;\n      const timeOpts = options.time;\n      const tickOpts = options.ticks;\n      const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        this.min = this._userMin || timestamps[0];\n        this.max = this._userMax || timestamps[timestamps.length - 1];\n      }\n\n      const min = this.min;\n      const max = this.max;\n\n      const ticks = _filterBetween(timestamps, min, max);\n\n      this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n      this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n      this.initOffsets(timestamps);\n\n      if (options.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n\n    initOffsets(timestamps) {\n      let start = 0;\n      let end = 0;\n      let first, last;\n\n      if (this.options.offset && timestamps.length) {\n        first = this.getDecimalForValue(timestamps[0]);\n\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n\n        last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n\n      const limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = _limitValue(start, 0, limit);\n      end = _limitValue(end, 0, limit);\n      this._offsets = {\n        start,\n        end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n\n    _generate() {\n      const adapter = this._adapter;\n      const min = this.min;\n      const max = this.max;\n      const options = this.options;\n      const timeOpts = options.time;\n      const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n      const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n      const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      const hasWeekday = isNumber(weekday) || weekday === true;\n      const ticks = {};\n      let first = min;\n      let time, count;\n\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n\n      const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n\n      return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n    }\n\n    getLabelForValue(value) {\n      const adapter = this._adapter;\n      const timeOpts = this.options.time;\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n\n    _tickFormatFunction(time, index, ticks, format) {\n      const options = this.options;\n      const formats = options.time.displayFormats;\n      const unit = this._unit;\n      const majorUnit = this._majorUnit;\n      const minorFormat = unit && formats[unit];\n      const majorFormat = majorUnit && formats[majorUnit];\n      const tick = ticks[index];\n      const major = majorUnit && majorFormat && tick && tick.major;\n\n      const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n\n      const formatter = options.ticks.callback;\n      return formatter ? callback(formatter, [label, index, ticks], this) : label;\n    }\n\n    generateTickLabels(ticks) {\n      let i, ilen, tick;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n\n    getDecimalForValue(value) {\n      return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n\n    getPixelForValue(value) {\n      const offsets = this._offsets;\n      const pos = this.getDecimalForValue(value);\n      return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n\n    getValueForPixel(pixel) {\n      const offsets = this._offsets;\n      const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return this.min + pos * (this.max - this.min);\n    }\n\n    _getLabelSize(label) {\n      const ticksOpts = this.options.ticks;\n      const tickLabelWidth = this.ctx.measureText(label).width;\n      const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      const cosRotation = Math.cos(angle);\n      const sinRotation = Math.sin(angle);\n\n      const tickFontSize = this._resolveTickFontOptions(0).size;\n\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n\n    _getLabelCapacity(exampleTime) {\n      const timeOpts = this.options.time;\n      const displayFormats = timeOpts.displayFormats;\n      const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n\n      const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n\n      const size = this._getLabelSize(exampleLabel);\n\n      const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n\n    getDataTimestamps() {\n      let timestamps = this._cache.data || [];\n      let i, ilen;\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      const metas = this.getMatchingVisibleMetas();\n\n      if (this._normalized && metas.length) {\n        return this._cache.data = metas[0].controller.getAllParsedValues(this);\n      }\n\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n      }\n\n      return this._cache.data = this.normalize(timestamps);\n    }\n\n    getLabelTimestamps() {\n      const timestamps = this._cache.labels || [];\n      let i, ilen;\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      const labels = this.getLabels();\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(parse(this, labels[i]));\n      }\n\n      return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n\n    normalize(values) {\n      return _arrayUnique(values.sort(sorter));\n    }\n\n  }\n\n  TimeScale.id = 'time';\n  TimeScale.defaults = {\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      unit: false,\n      round: false,\n      isoWeekday: false,\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  function interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n\n    if (reverse) {\n      if (val >= table[lo].pos && val <= table[hi].pos) {\n        ({\n          lo,\n          hi\n        } = _lookupByKey(table, 'pos', val));\n      }\n\n      ({\n        pos: prevSource,\n        time: prevTarget\n      } = table[lo]);\n      ({\n        pos: nextSource,\n        time: nextTarget\n      } = table[hi]);\n    } else {\n      if (val >= table[lo].time && val <= table[hi].time) {\n        ({\n          lo,\n          hi\n        } = _lookupByKey(table, 'time', val));\n      }\n\n      ({\n        time: prevSource,\n        pos: prevTarget\n      } = table[lo]);\n      ({\n        time: nextSource,\n        pos: nextTarget\n      } = table[hi]);\n    }\n\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n  }\n\n  class TimeSeriesScale extends TimeScale {\n    constructor(props) {\n      super(props);\n      this._table = [];\n      this._minPos = undefined;\n      this._tableRange = undefined;\n    }\n\n    initOffsets() {\n      const timestamps = this._getTimestampsForTable();\n\n      const table = this._table = this.buildLookupTable(timestamps);\n      this._minPos = interpolate(table, this.min);\n      this._tableRange = interpolate(table, this.max) - this._minPos;\n      super.initOffsets(timestamps);\n    }\n\n    buildLookupTable(timestamps) {\n      const {\n        min,\n        max\n      } = this;\n      const items = [];\n      const table = [];\n      let i, ilen, prev, curr, next;\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n\n        if (curr >= min && curr <= max) {\n          items.push(curr);\n        }\n      }\n\n      if (items.length < 2) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        next = items[i + 1];\n        prev = items[i - 1];\n        curr = items[i];\n\n        if (Math.round((next + prev) / 2) !== curr) {\n          table.push({\n            time: curr,\n            pos: i / (ilen - 1)\n          });\n        }\n      }\n\n      return table;\n    }\n\n    _getTimestampsForTable() {\n      let timestamps = this._cache.all || [];\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      const data = this.getDataTimestamps();\n      const label = this.getLabelTimestamps();\n\n      if (data.length && label.length) {\n        timestamps = this.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n\n      timestamps = this._cache.all = timestamps;\n      return timestamps;\n    }\n\n    getDecimalForValue(value) {\n      return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n\n    getValueForPixel(pixel) {\n      const offsets = this._offsets;\n      const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n\n  }\n\n  TimeSeriesScale.id = 'timeseries';\n  TimeSeriesScale.defaults = TimeScale.defaults;\n  var scales = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    CategoryScale: CategoryScale,\n    LinearScale: LinearScale,\n    LogarithmicScale: LogarithmicScale,\n    RadialLinearScale: RadialLinearScale,\n    TimeScale: TimeScale,\n    TimeSeriesScale: TimeSeriesScale\n  });\n  Chart.register(controllers, scales, elements, plugins);\n  Chart.helpers = { ...helpers\n  };\n  Chart._adapters = _adapters;\n  Chart.Animation = Animation;\n  Chart.Animations = Animations;\n  Chart.animator = animator;\n  Chart.controllers = registry.controllers.items;\n  Chart.DatasetController = DatasetController;\n  Chart.Element = Element;\n  Chart.elements = elements;\n  Chart.Interaction = Interaction;\n  Chart.layouts = layouts;\n  Chart.platforms = platforms;\n  Chart.Scale = Scale;\n  Chart.Ticks = Ticks;\n  Object.assign(Chart, controllers, scales, elements, plugins, platforms);\n  Chart.Chart = Chart;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = Chart;\n  }\n\n  return Chart;\n});","map":{"version":3,"sources":["D:/dougnut-chart-library/node_modules/chart.js/dist/chart.js"],"names":["global","factory","exports","module","define","amd","globalThis","self","Chart","fontString","pixelSize","fontStyle","fontFamily","requestAnimFrame","window","callback","requestAnimationFrame","throttled","fn","thisArg","updateFn","updateArgs","args","Array","prototype","slice","call","ticking","rest","apply","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","start","end","_textX","left","right","rtl","check","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","initial","currentStep","Math","min","_refresh","_update","Date","now","remaining","running","items","length","i","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","v","r","g","hexParse","str","len","ret","hexString","round","lim","l","h","p2b","n2b","b2n","n2p","RGB_RE","rgbParse","m","exec","rgbString","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","range","calln","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","p1","p2","rotate","deg","hslString","map$1$1","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names$1","nameParse","transparent","toLowerCase","modHSL","ratio","tmp","clone$1","proto","assign","fromObject","input","functionParse","charAt","Color","_rgb","_valid","valid","obj","mix","color","weight","me","c1","c2","w2","p","w1","clone","alpha","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","index_esm","isPatternOrGradient","value","CanvasGradient","CanvasPattern","getHoverColor","noop","uid","id","isNullOrUndef","toString","substr","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","_deprecated","scope","previous","current","console","warn","emptyString","dot","indexOfDotOrLength","idx","resolveObjectKey","pos","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","overrides","descriptors","getScope$1","node","split","root","values","Defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","defaults","_scriptable","startsWith","_indexable","_fallback","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","roundedRange","almostEquals","niceRange","pow","floor","fraction","niceFraction","_factorize","result","sqrt","sort","isNumber","isNaN","y","epsilon","abs","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","width","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","splice","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","sin","cos","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","opts","lines","strokeWidth","strokeColor","line","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","_lookup","table","cmp","hi","lo","mid","_lookupByKey","_rlookupByKey","_filterBetween","arrayEvents","listenArrayEvents","listener","_chartjs","defineProperty","configurable","method","base","res","object","unlistenArrayEvents","stub","_arrayUnique","Set","from","_isDomSupported","document","_getParentNode","domNode","parent","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","useOffsetPos","shadowRoot","getCanvasPosition","evt","native","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition$1","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","clientWidth","clientHeight","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","matches","match","getRelativePosition","evaluateAllVisibleItems","handler","metasets","getSortedVisibleDatasetMetas","skip","binarySearch","metaset","axis","controller","_sorted","iScale","_cachedMeta","lookupMethod","_reversePixels","_sharedOptions","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","chartArea","_minPadding","evaluationFunc","inRange","getNearestItems","distanceMetric","minDistance","center","getCenterPoint","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","meta","dataset","getDatasetMeta","nearest","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","numberOrZero$1","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","info","cacheable","_addGrace","minmax","grace","STATIC_POSITIONS","filterByPosition","filter","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stack","stackWeight","horizontal","isHorizontal","buildStacks","layouts","stacks","wrap","includes","_stack","count","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","factor","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","changed","update","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","configure","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","display","freeze","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","Error","join","createSubResolver","arr","resolver","resolveFallback","getScope","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","t","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","delta","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","atEdge","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","formatNumber","num","format","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","bounds","startBound","endBound","_boundSegment","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","last","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","helpers","__proto__","easingEffects","BasePlatform","acquireContext","releaseContext","isAttached","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","createAttachObserver","observer","MutationObserver","entries","entry","addedNodes","contains","observe","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","platforms","interpolators","boolean","to","c0","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","_target","_prop","_from","_to","_promises","active","elapsed","remain","wait","promises","Promise","rej","resolved","numbers","colors","animationOptions","properties","show","animations","visible","hide","Animations","config","_chart","_properties","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","xScale","yScale","toClip","disabled","getSortedDatasetIndices","filterVisible","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","getUserBounds","minDefined","maxDefined","NEGATIVE_INFINITY","getOrCreateStack","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","parsed","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","shift","createDatasetContext","createDataContext","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","hidden","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","_onDataUnshift","Element","tooltipPosition","getProps","hasValue","final","defaultRoutes","formatters","numeric","tickValue","ticks","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","offset","beginAtZero","grid","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","title","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","spacing","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","_length","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","diff","reverseAlign","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","getPixelForValue","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","nestedLabel","_resolveTickFontOptions","valueAt","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","labelPadding","_computeLabelArea","drawBackground","fillRect","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","parts","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","existingEvents","newEvents","unbindEvents","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_updateHoverStyles","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","lastEvent","invalidatePlugins","abstract","DateAdapter","formats","timestamp","amount","unit","startOf","weekday","endOf","members","_adapters","_date","getAllScaleValues","$bar","visibleMetas","computeMinSampleSize","curr","updateMinAndPrev","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","borderProps","setBorderSkipped","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","BarController","iAxisKey","vAxisKey","bars","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","_getStacks","grouped","_getStackCount","_getStackIndex","baseValue","minBarLength","floating","halfGrid","skipNull","maxBarThickness","Infinity","stackIndex","rects","_index_","_value_","BubbleController","tooltip","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","tooltipItem","dataLabel","formattedValue","LineController","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","pointCount","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","PolarAreaController","_updateRadius","cutoutPercentage","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","inflateAmount","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","getLineByIndex","parseFillOption","fillOption","decodeFill","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","findSegmentEnd","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","isLineAndNotInHideAnimation","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","resolveTarget","propagate","visited","clipY","getBounds","_getEdge","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","notShape","lineLoop","targetLoop","doFill","above","drawfill","lineOpts","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointLabelContext","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","buildPointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","numberOrZero","param","createPointLabelContext","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"mappings":"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","sourcesContent":["/*!\r\n * Chart.js v3.5.1\r\n * https://www.chartjs.org\r\n * (c) 2021 Chart.js Contributors\r\n * Released under the MIT License\r\n */\r\n(function (global, factory) {\r\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\ntypeof define === 'function' && define.amd ? define(factory) :\r\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Chart = factory());\r\n}(this, (function () { 'use strict';\r\n\r\nfunction fontString(pixelSize, fontStyle, fontFamily) {\r\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\r\n}\r\nconst requestAnimFrame = (function() {\r\n  if (typeof window === 'undefined') {\r\n    return function(callback) {\r\n      return callback();\r\n    };\r\n  }\r\n  return window.requestAnimationFrame;\r\n}());\r\nfunction throttled(fn, thisArg, updateFn) {\r\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\r\n  let ticking = false;\r\n  let args = [];\r\n  return function(...rest) {\r\n    args = updateArgs(rest);\r\n    if (!ticking) {\r\n      ticking = true;\r\n      requestAnimFrame.call(window, () => {\r\n        ticking = false;\r\n        fn.apply(thisArg, args);\r\n      });\r\n    }\r\n  };\r\n}\r\nfunction debounce(fn, delay) {\r\n  let timeout;\r\n  return function(...args) {\r\n    if (delay) {\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(fn, delay, args);\r\n    } else {\r\n      fn.apply(this, args);\r\n    }\r\n    return delay;\r\n  };\r\n}\r\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\r\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\r\nconst _textX = (align, left, right, rtl) => {\r\n  const check = rtl ? 'left' : 'right';\r\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\r\n};\r\n\r\nclass Animator {\r\n  constructor() {\r\n    this._request = null;\r\n    this._charts = new Map();\r\n    this._running = false;\r\n    this._lastDate = undefined;\r\n  }\r\n  _notify(chart, anims, date, type) {\r\n    const callbacks = anims.listeners[type];\r\n    const numSteps = anims.duration;\r\n    callbacks.forEach(fn => fn({\r\n      chart,\r\n      initial: anims.initial,\r\n      numSteps,\r\n      currentStep: Math.min(date - anims.start, numSteps)\r\n    }));\r\n  }\r\n  _refresh() {\r\n    if (this._request) {\r\n      return;\r\n    }\r\n    this._running = true;\r\n    this._request = requestAnimFrame.call(window, () => {\r\n      this._update();\r\n      this._request = null;\r\n      if (this._running) {\r\n        this._refresh();\r\n      }\r\n    });\r\n  }\r\n  _update(date = Date.now()) {\r\n    let remaining = 0;\r\n    this._charts.forEach((anims, chart) => {\r\n      if (!anims.running || !anims.items.length) {\r\n        return;\r\n      }\r\n      const items = anims.items;\r\n      let i = items.length - 1;\r\n      let draw = false;\r\n      let item;\r\n      for (; i >= 0; --i) {\r\n        item = items[i];\r\n        if (item._active) {\r\n          if (item._total > anims.duration) {\r\n            anims.duration = item._total;\r\n          }\r\n          item.tick(date);\r\n          draw = true;\r\n        } else {\r\n          items[i] = items[items.length - 1];\r\n          items.pop();\r\n        }\r\n      }\r\n      if (draw) {\r\n        chart.draw();\r\n        this._notify(chart, anims, date, 'progress');\r\n      }\r\n      if (!items.length) {\r\n        anims.running = false;\r\n        this._notify(chart, anims, date, 'complete');\r\n        anims.initial = false;\r\n      }\r\n      remaining += items.length;\r\n    });\r\n    this._lastDate = date;\r\n    if (remaining === 0) {\r\n      this._running = false;\r\n    }\r\n  }\r\n  _getAnims(chart) {\r\n    const charts = this._charts;\r\n    let anims = charts.get(chart);\r\n    if (!anims) {\r\n      anims = {\r\n        running: false,\r\n        initial: true,\r\n        items: [],\r\n        listeners: {\r\n          complete: [],\r\n          progress: []\r\n        }\r\n      };\r\n      charts.set(chart, anims);\r\n    }\r\n    return anims;\r\n  }\r\n  listen(chart, event, cb) {\r\n    this._getAnims(chart).listeners[event].push(cb);\r\n  }\r\n  add(chart, items) {\r\n    if (!items || !items.length) {\r\n      return;\r\n    }\r\n    this._getAnims(chart).items.push(...items);\r\n  }\r\n  has(chart) {\r\n    return this._getAnims(chart).items.length > 0;\r\n  }\r\n  start(chart) {\r\n    const anims = this._charts.get(chart);\r\n    if (!anims) {\r\n      return;\r\n    }\r\n    anims.running = true;\r\n    anims.start = Date.now();\r\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\r\n    this._refresh();\r\n  }\r\n  running(chart) {\r\n    if (!this._running) {\r\n      return false;\r\n    }\r\n    const anims = this._charts.get(chart);\r\n    if (!anims || !anims.running || !anims.items.length) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  stop(chart) {\r\n    const anims = this._charts.get(chart);\r\n    if (!anims || !anims.items.length) {\r\n      return;\r\n    }\r\n    const items = anims.items;\r\n    let i = items.length - 1;\r\n    for (; i >= 0; --i) {\r\n      items[i].cancel();\r\n    }\r\n    anims.items = [];\r\n    this._notify(chart, anims, Date.now(), 'complete');\r\n  }\r\n  remove(chart) {\r\n    return this._charts.delete(chart);\r\n  }\r\n}\r\nvar animator = new Animator();\r\n\r\n/*!\r\n * @kurkle/color v0.1.9\r\n * https://github.com/kurkle/color#readme\r\n * (c) 2020 Jukka Kurkela\r\n * Released under the MIT License\r\n */\r\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\r\nconst hex = '0123456789ABCDEF';\r\nconst h1 = (b) => hex[b & 0xF];\r\nconst h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\r\nconst eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\r\nfunction isShort(v) {\r\n\treturn eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\r\n}\r\nfunction hexParse(str) {\r\n\tvar len = str.length;\r\n\tvar ret;\r\n\tif (str[0] === '#') {\r\n\t\tif (len === 4 || len === 5) {\r\n\t\t\tret = {\r\n\t\t\t\tr: 255 & map$1[str[1]] * 17,\r\n\t\t\t\tg: 255 & map$1[str[2]] * 17,\r\n\t\t\t\tb: 255 & map$1[str[3]] * 17,\r\n\t\t\t\ta: len === 5 ? map$1[str[4]] * 17 : 255\r\n\t\t\t};\r\n\t\t} else if (len === 7 || len === 9) {\r\n\t\t\tret = {\r\n\t\t\t\tr: map$1[str[1]] << 4 | map$1[str[2]],\r\n\t\t\t\tg: map$1[str[3]] << 4 | map$1[str[4]],\r\n\t\t\t\tb: map$1[str[5]] << 4 | map$1[str[6]],\r\n\t\t\t\ta: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\treturn ret;\r\n}\r\nfunction hexString(v) {\r\n\tvar f = isShort(v) ? h1 : h2;\r\n\treturn v\r\n\t\t? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\r\n\t\t: v;\r\n}\r\nfunction round(v) {\r\n\treturn v + 0.5 | 0;\r\n}\r\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\r\nfunction p2b(v) {\r\n\treturn lim(round(v * 2.55), 0, 255);\r\n}\r\nfunction n2b(v) {\r\n\treturn lim(round(v * 255), 0, 255);\r\n}\r\nfunction b2n(v) {\r\n\treturn lim(round(v / 2.55) / 100, 0, 1);\r\n}\r\nfunction n2p(v) {\r\n\treturn lim(round(v * 100), 0, 100);\r\n}\r\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\r\nfunction rgbParse(str) {\r\n\tconst m = RGB_RE.exec(str);\r\n\tlet a = 255;\r\n\tlet r, g, b;\r\n\tif (!m) {\r\n\t\treturn;\r\n\t}\r\n\tif (m[7] !== r) {\r\n\t\tconst v = +m[7];\r\n\t\ta = 255 & (m[8] ? p2b(v) : v * 255);\r\n\t}\r\n\tr = +m[1];\r\n\tg = +m[3];\r\n\tb = +m[5];\r\n\tr = 255 & (m[2] ? p2b(r) : r);\r\n\tg = 255 & (m[4] ? p2b(g) : g);\r\n\tb = 255 & (m[6] ? p2b(b) : b);\r\n\treturn {\r\n\t\tr: r,\r\n\t\tg: g,\r\n\t\tb: b,\r\n\t\ta: a\r\n\t};\r\n}\r\nfunction rgbString(v) {\r\n\treturn v && (\r\n\t\tv.a < 255\r\n\t\t\t? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\r\n\t\t\t: `rgb(${v.r}, ${v.g}, ${v.b})`\r\n\t);\r\n}\r\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\r\nfunction hsl2rgbn(h, s, l) {\r\n\tconst a = s * Math.min(l, 1 - l);\r\n\tconst f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\r\n\treturn [f(0), f(8), f(4)];\r\n}\r\nfunction hsv2rgbn(h, s, v) {\r\n\tconst f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\r\n\treturn [f(5), f(3), f(1)];\r\n}\r\nfunction hwb2rgbn(h, w, b) {\r\n\tconst rgb = hsl2rgbn(h, 1, 0.5);\r\n\tlet i;\r\n\tif (w + b > 1) {\r\n\t\ti = 1 / (w + b);\r\n\t\tw *= i;\r\n\t\tb *= i;\r\n\t}\r\n\tfor (i = 0; i < 3; i++) {\r\n\t\trgb[i] *= 1 - w - b;\r\n\t\trgb[i] += w;\r\n\t}\r\n\treturn rgb;\r\n}\r\nfunction rgb2hsl(v) {\r\n\tconst range = 255;\r\n\tconst r = v.r / range;\r\n\tconst g = v.g / range;\r\n\tconst b = v.b / range;\r\n\tconst max = Math.max(r, g, b);\r\n\tconst min = Math.min(r, g, b);\r\n\tconst l = (max + min) / 2;\r\n\tlet h, s, d;\r\n\tif (max !== min) {\r\n\t\td = max - min;\r\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\t\th = max === r\r\n\t\t\t? ((g - b) / d) + (g < b ? 6 : 0)\r\n\t\t\t: max === g\r\n\t\t\t\t? (b - r) / d + 2\r\n\t\t\t\t: (r - g) / d + 4;\r\n\t\th = h * 60 + 0.5;\r\n\t}\r\n\treturn [h | 0, s || 0, l];\r\n}\r\nfunction calln(f, a, b, c) {\r\n\treturn (\r\n\t\tArray.isArray(a)\r\n\t\t\t? f(a[0], a[1], a[2])\r\n\t\t\t: f(a, b, c)\r\n\t).map(n2b);\r\n}\r\nfunction hsl2rgb(h, s, l) {\r\n\treturn calln(hsl2rgbn, h, s, l);\r\n}\r\nfunction hwb2rgb(h, w, b) {\r\n\treturn calln(hwb2rgbn, h, w, b);\r\n}\r\nfunction hsv2rgb(h, s, v) {\r\n\treturn calln(hsv2rgbn, h, s, v);\r\n}\r\nfunction hue(h) {\r\n\treturn (h % 360 + 360) % 360;\r\n}\r\nfunction hueParse(str) {\r\n\tconst m = HUE_RE.exec(str);\r\n\tlet a = 255;\r\n\tlet v;\r\n\tif (!m) {\r\n\t\treturn;\r\n\t}\r\n\tif (m[5] !== v) {\r\n\t\ta = m[6] ? p2b(+m[5]) : n2b(+m[5]);\r\n\t}\r\n\tconst h = hue(+m[2]);\r\n\tconst p1 = +m[3] / 100;\r\n\tconst p2 = +m[4] / 100;\r\n\tif (m[1] === 'hwb') {\r\n\t\tv = hwb2rgb(h, p1, p2);\r\n\t} else if (m[1] === 'hsv') {\r\n\t\tv = hsv2rgb(h, p1, p2);\r\n\t} else {\r\n\t\tv = hsl2rgb(h, p1, p2);\r\n\t}\r\n\treturn {\r\n\t\tr: v[0],\r\n\t\tg: v[1],\r\n\t\tb: v[2],\r\n\t\ta: a\r\n\t};\r\n}\r\nfunction rotate(v, deg) {\r\n\tvar h = rgb2hsl(v);\r\n\th[0] = hue(h[0] + deg);\r\n\th = hsl2rgb(h);\r\n\tv.r = h[0];\r\n\tv.g = h[1];\r\n\tv.b = h[2];\r\n}\r\nfunction hslString(v) {\r\n\tif (!v) {\r\n\t\treturn;\r\n\t}\r\n\tconst a = rgb2hsl(v);\r\n\tconst h = a[0];\r\n\tconst s = n2p(a[1]);\r\n\tconst l = n2p(a[2]);\r\n\treturn v.a < 255\r\n\t\t? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\r\n\t\t: `hsl(${h}, ${s}%, ${l}%)`;\r\n}\r\nconst map$1$1 = {\r\n\tx: 'dark',\r\n\tZ: 'light',\r\n\tY: 're',\r\n\tX: 'blu',\r\n\tW: 'gr',\r\n\tV: 'medium',\r\n\tU: 'slate',\r\n\tA: 'ee',\r\n\tT: 'ol',\r\n\tS: 'or',\r\n\tB: 'ra',\r\n\tC: 'lateg',\r\n\tD: 'ights',\r\n\tR: 'in',\r\n\tQ: 'turquois',\r\n\tE: 'hi',\r\n\tP: 'ro',\r\n\tO: 'al',\r\n\tN: 'le',\r\n\tM: 'de',\r\n\tL: 'yello',\r\n\tF: 'en',\r\n\tK: 'ch',\r\n\tG: 'arks',\r\n\tH: 'ea',\r\n\tI: 'ightg',\r\n\tJ: 'wh'\r\n};\r\nconst names = {\r\n\tOiceXe: 'f0f8ff',\r\n\tantiquewEte: 'faebd7',\r\n\taqua: 'ffff',\r\n\taquamarRe: '7fffd4',\r\n\tazuY: 'f0ffff',\r\n\tbeige: 'f5f5dc',\r\n\tbisque: 'ffe4c4',\r\n\tblack: '0',\r\n\tblanKedOmond: 'ffebcd',\r\n\tXe: 'ff',\r\n\tXeviTet: '8a2be2',\r\n\tbPwn: 'a52a2a',\r\n\tburlywood: 'deb887',\r\n\tcaMtXe: '5f9ea0',\r\n\tKartYuse: '7fff00',\r\n\tKocTate: 'd2691e',\r\n\tcSO: 'ff7f50',\r\n\tcSnflowerXe: '6495ed',\r\n\tcSnsilk: 'fff8dc',\r\n\tcrimson: 'dc143c',\r\n\tcyan: 'ffff',\r\n\txXe: '8b',\r\n\txcyan: '8b8b',\r\n\txgTMnPd: 'b8860b',\r\n\txWay: 'a9a9a9',\r\n\txgYF: '6400',\r\n\txgYy: 'a9a9a9',\r\n\txkhaki: 'bdb76b',\r\n\txmagFta: '8b008b',\r\n\txTivegYF: '556b2f',\r\n\txSange: 'ff8c00',\r\n\txScEd: '9932cc',\r\n\txYd: '8b0000',\r\n\txsOmon: 'e9967a',\r\n\txsHgYF: '8fbc8f',\r\n\txUXe: '483d8b',\r\n\txUWay: '2f4f4f',\r\n\txUgYy: '2f4f4f',\r\n\txQe: 'ced1',\r\n\txviTet: '9400d3',\r\n\tdAppRk: 'ff1493',\r\n\tdApskyXe: 'bfff',\r\n\tdimWay: '696969',\r\n\tdimgYy: '696969',\r\n\tdodgerXe: '1e90ff',\r\n\tfiYbrick: 'b22222',\r\n\tflSOwEte: 'fffaf0',\r\n\tfoYstWAn: '228b22',\r\n\tfuKsia: 'ff00ff',\r\n\tgaRsbSo: 'dcdcdc',\r\n\tghostwEte: 'f8f8ff',\r\n\tgTd: 'ffd700',\r\n\tgTMnPd: 'daa520',\r\n\tWay: '808080',\r\n\tgYF: '8000',\r\n\tgYFLw: 'adff2f',\r\n\tgYy: '808080',\r\n\thoneyMw: 'f0fff0',\r\n\thotpRk: 'ff69b4',\r\n\tRdianYd: 'cd5c5c',\r\n\tRdigo: '4b0082',\r\n\tivSy: 'fffff0',\r\n\tkhaki: 'f0e68c',\r\n\tlavFMr: 'e6e6fa',\r\n\tlavFMrXsh: 'fff0f5',\r\n\tlawngYF: '7cfc00',\r\n\tNmoncEffon: 'fffacd',\r\n\tZXe: 'add8e6',\r\n\tZcSO: 'f08080',\r\n\tZcyan: 'e0ffff',\r\n\tZgTMnPdLw: 'fafad2',\r\n\tZWay: 'd3d3d3',\r\n\tZgYF: '90ee90',\r\n\tZgYy: 'd3d3d3',\r\n\tZpRk: 'ffb6c1',\r\n\tZsOmon: 'ffa07a',\r\n\tZsHgYF: '20b2aa',\r\n\tZskyXe: '87cefa',\r\n\tZUWay: '778899',\r\n\tZUgYy: '778899',\r\n\tZstAlXe: 'b0c4de',\r\n\tZLw: 'ffffe0',\r\n\tlime: 'ff00',\r\n\tlimegYF: '32cd32',\r\n\tlRF: 'faf0e6',\r\n\tmagFta: 'ff00ff',\r\n\tmaPon: '800000',\r\n\tVaquamarRe: '66cdaa',\r\n\tVXe: 'cd',\r\n\tVScEd: 'ba55d3',\r\n\tVpurpN: '9370db',\r\n\tVsHgYF: '3cb371',\r\n\tVUXe: '7b68ee',\r\n\tVsprRggYF: 'fa9a',\r\n\tVQe: '48d1cc',\r\n\tVviTetYd: 'c71585',\r\n\tmidnightXe: '191970',\r\n\tmRtcYam: 'f5fffa',\r\n\tmistyPse: 'ffe4e1',\r\n\tmoccasR: 'ffe4b5',\r\n\tnavajowEte: 'ffdead',\r\n\tnavy: '80',\r\n\tTdlace: 'fdf5e6',\r\n\tTive: '808000',\r\n\tTivedBb: '6b8e23',\r\n\tSange: 'ffa500',\r\n\tSangeYd: 'ff4500',\r\n\tScEd: 'da70d6',\r\n\tpOegTMnPd: 'eee8aa',\r\n\tpOegYF: '98fb98',\r\n\tpOeQe: 'afeeee',\r\n\tpOeviTetYd: 'db7093',\r\n\tpapayawEp: 'ffefd5',\r\n\tpHKpuff: 'ffdab9',\r\n\tperu: 'cd853f',\r\n\tpRk: 'ffc0cb',\r\n\tplum: 'dda0dd',\r\n\tpowMrXe: 'b0e0e6',\r\n\tpurpN: '800080',\r\n\tYbeccapurpN: '663399',\r\n\tYd: 'ff0000',\r\n\tPsybrown: 'bc8f8f',\r\n\tPyOXe: '4169e1',\r\n\tsaddNbPwn: '8b4513',\r\n\tsOmon: 'fa8072',\r\n\tsandybPwn: 'f4a460',\r\n\tsHgYF: '2e8b57',\r\n\tsHshell: 'fff5ee',\r\n\tsiFna: 'a0522d',\r\n\tsilver: 'c0c0c0',\r\n\tskyXe: '87ceeb',\r\n\tUXe: '6a5acd',\r\n\tUWay: '708090',\r\n\tUgYy: '708090',\r\n\tsnow: 'fffafa',\r\n\tsprRggYF: 'ff7f',\r\n\tstAlXe: '4682b4',\r\n\ttan: 'd2b48c',\r\n\tteO: '8080',\r\n\ttEstN: 'd8bfd8',\r\n\ttomato: 'ff6347',\r\n\tQe: '40e0d0',\r\n\tviTet: 'ee82ee',\r\n\tJHt: 'f5deb3',\r\n\twEte: 'ffffff',\r\n\twEtesmoke: 'f5f5f5',\r\n\tLw: 'ffff00',\r\n\tLwgYF: '9acd32'\r\n};\r\nfunction unpack() {\r\n\tconst unpacked = {};\r\n\tconst keys = Object.keys(names);\r\n\tconst tkeys = Object.keys(map$1$1);\r\n\tlet i, j, k, ok, nk;\r\n\tfor (i = 0; i < keys.length; i++) {\r\n\t\tok = nk = keys[i];\r\n\t\tfor (j = 0; j < tkeys.length; j++) {\r\n\t\t\tk = tkeys[j];\r\n\t\t\tnk = nk.replace(k, map$1$1[k]);\r\n\t\t}\r\n\t\tk = parseInt(names[ok], 16);\r\n\t\tunpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\r\n\t}\r\n\treturn unpacked;\r\n}\r\nlet names$1;\r\nfunction nameParse(str) {\r\n\tif (!names$1) {\r\n\t\tnames$1 = unpack();\r\n\t\tnames$1.transparent = [0, 0, 0, 0];\r\n\t}\r\n\tconst a = names$1[str.toLowerCase()];\r\n\treturn a && {\r\n\t\tr: a[0],\r\n\t\tg: a[1],\r\n\t\tb: a[2],\r\n\t\ta: a.length === 4 ? a[3] : 255\r\n\t};\r\n}\r\nfunction modHSL(v, i, ratio) {\r\n\tif (v) {\r\n\t\tlet tmp = rgb2hsl(v);\r\n\t\ttmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\r\n\t\ttmp = hsl2rgb(tmp);\r\n\t\tv.r = tmp[0];\r\n\t\tv.g = tmp[1];\r\n\t\tv.b = tmp[2];\r\n\t}\r\n}\r\nfunction clone$1(v, proto) {\r\n\treturn v ? Object.assign(proto || {}, v) : v;\r\n}\r\nfunction fromObject(input) {\r\n\tvar v = {r: 0, g: 0, b: 0, a: 255};\r\n\tif (Array.isArray(input)) {\r\n\t\tif (input.length >= 3) {\r\n\t\t\tv = {r: input[0], g: input[1], b: input[2], a: 255};\r\n\t\t\tif (input.length > 3) {\r\n\t\t\t\tv.a = n2b(input[3]);\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\tv = clone$1(input, {r: 0, g: 0, b: 0, a: 1});\r\n\t\tv.a = n2b(v.a);\r\n\t}\r\n\treturn v;\r\n}\r\nfunction functionParse(str) {\r\n\tif (str.charAt(0) === 'r') {\r\n\t\treturn rgbParse(str);\r\n\t}\r\n\treturn hueParse(str);\r\n}\r\nclass Color {\r\n\tconstructor(input) {\r\n\t\tif (input instanceof Color) {\r\n\t\t\treturn input;\r\n\t\t}\r\n\t\tconst type = typeof input;\r\n\t\tlet v;\r\n\t\tif (type === 'object') {\r\n\t\t\tv = fromObject(input);\r\n\t\t} else if (type === 'string') {\r\n\t\t\tv = hexParse(input) || nameParse(input) || functionParse(input);\r\n\t\t}\r\n\t\tthis._rgb = v;\r\n\t\tthis._valid = !!v;\r\n\t}\r\n\tget valid() {\r\n\t\treturn this._valid;\r\n\t}\r\n\tget rgb() {\r\n\t\tvar v = clone$1(this._rgb);\r\n\t\tif (v) {\r\n\t\t\tv.a = b2n(v.a);\r\n\t\t}\r\n\t\treturn v;\r\n\t}\r\n\tset rgb(obj) {\r\n\t\tthis._rgb = fromObject(obj);\r\n\t}\r\n\trgbString() {\r\n\t\treturn this._valid ? rgbString(this._rgb) : this._rgb;\r\n\t}\r\n\thexString() {\r\n\t\treturn this._valid ? hexString(this._rgb) : this._rgb;\r\n\t}\r\n\thslString() {\r\n\t\treturn this._valid ? hslString(this._rgb) : this._rgb;\r\n\t}\r\n\tmix(color, weight) {\r\n\t\tconst me = this;\r\n\t\tif (color) {\r\n\t\t\tconst c1 = me.rgb;\r\n\t\t\tconst c2 = color.rgb;\r\n\t\t\tlet w2;\r\n\t\t\tconst p = weight === w2 ? 0.5 : weight;\r\n\t\t\tconst w = 2 * p - 1;\r\n\t\t\tconst a = c1.a - c2.a;\r\n\t\t\tconst w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n\t\t\tw2 = 1 - w1;\r\n\t\t\tc1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\r\n\t\t\tc1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\r\n\t\t\tc1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\r\n\t\t\tc1.a = p * c1.a + (1 - p) * c2.a;\r\n\t\t\tme.rgb = c1;\r\n\t\t}\r\n\t\treturn me;\r\n\t}\r\n\tclone() {\r\n\t\treturn new Color(this.rgb);\r\n\t}\r\n\talpha(a) {\r\n\t\tthis._rgb.a = n2b(a);\r\n\t\treturn this;\r\n\t}\r\n\tclearer(ratio) {\r\n\t\tconst rgb = this._rgb;\r\n\t\trgb.a *= 1 - ratio;\r\n\t\treturn this;\r\n\t}\r\n\tgreyscale() {\r\n\t\tconst rgb = this._rgb;\r\n\t\tconst val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\r\n\t\trgb.r = rgb.g = rgb.b = val;\r\n\t\treturn this;\r\n\t}\r\n\topaquer(ratio) {\r\n\t\tconst rgb = this._rgb;\r\n\t\trgb.a *= 1 + ratio;\r\n\t\treturn this;\r\n\t}\r\n\tnegate() {\r\n\t\tconst v = this._rgb;\r\n\t\tv.r = 255 - v.r;\r\n\t\tv.g = 255 - v.g;\r\n\t\tv.b = 255 - v.b;\r\n\t\treturn this;\r\n\t}\r\n\tlighten(ratio) {\r\n\t\tmodHSL(this._rgb, 2, ratio);\r\n\t\treturn this;\r\n\t}\r\n\tdarken(ratio) {\r\n\t\tmodHSL(this._rgb, 2, -ratio);\r\n\t\treturn this;\r\n\t}\r\n\tsaturate(ratio) {\r\n\t\tmodHSL(this._rgb, 1, ratio);\r\n\t\treturn this;\r\n\t}\r\n\tdesaturate(ratio) {\r\n\t\tmodHSL(this._rgb, 1, -ratio);\r\n\t\treturn this;\r\n\t}\r\n\trotate(deg) {\r\n\t\trotate(this._rgb, deg);\r\n\t\treturn this;\r\n\t}\r\n}\r\nfunction index_esm(input) {\r\n\treturn new Color(input);\r\n}\r\n\r\nconst isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\r\nfunction color(value) {\r\n  return isPatternOrGradient(value) ? value : index_esm(value);\r\n}\r\nfunction getHoverColor(value) {\r\n  return isPatternOrGradient(value)\r\n    ? value\r\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\r\n}\r\n\r\nfunction noop() {}\r\nconst uid = (function() {\r\n  let id = 0;\r\n  return function() {\r\n    return id++;\r\n  };\r\n}());\r\nfunction isNullOrUndef(value) {\r\n  return value === null || typeof value === 'undefined';\r\n}\r\nfunction isArray(value) {\r\n  if (Array.isArray && Array.isArray(value)) {\r\n    return true;\r\n  }\r\n  const type = Object.prototype.toString.call(value);\r\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nfunction isObject(value) {\r\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\r\n}\r\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\r\nfunction finiteOrDefault(value, defaultValue) {\r\n  return isNumberFinite(value) ? value : defaultValue;\r\n}\r\nfunction valueOrDefault(value, defaultValue) {\r\n  return typeof value === 'undefined' ? defaultValue : value;\r\n}\r\nconst toPercentage = (value, dimension) =>\r\n  typeof value === 'string' && value.endsWith('%') ?\r\n    parseFloat(value) / 100\r\n    : value / dimension;\r\nconst toDimension = (value, dimension) =>\r\n  typeof value === 'string' && value.endsWith('%') ?\r\n    parseFloat(value) / 100 * dimension\r\n    : +value;\r\nfunction callback(fn, args, thisArg) {\r\n  if (fn && typeof fn.call === 'function') {\r\n    return fn.apply(thisArg, args);\r\n  }\r\n}\r\nfunction each(loopable, fn, thisArg, reverse) {\r\n  let i, len, keys;\r\n  if (isArray(loopable)) {\r\n    len = loopable.length;\r\n    if (reverse) {\r\n      for (i = len - 1; i >= 0; i--) {\r\n        fn.call(thisArg, loopable[i], i);\r\n      }\r\n    } else {\r\n      for (i = 0; i < len; i++) {\r\n        fn.call(thisArg, loopable[i], i);\r\n      }\r\n    }\r\n  } else if (isObject(loopable)) {\r\n    keys = Object.keys(loopable);\r\n    len = keys.length;\r\n    for (i = 0; i < len; i++) {\r\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\r\n    }\r\n  }\r\n}\r\nfunction _elementsEqual(a0, a1) {\r\n  let i, ilen, v0, v1;\r\n  if (!a0 || !a1 || a0.length !== a1.length) {\r\n    return false;\r\n  }\r\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\r\n    v0 = a0[i];\r\n    v1 = a1[i];\r\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\nfunction clone(source) {\r\n  if (isArray(source)) {\r\n    return source.map(clone);\r\n  }\r\n  if (isObject(source)) {\r\n    const target = Object.create(null);\r\n    const keys = Object.keys(source);\r\n    const klen = keys.length;\r\n    let k = 0;\r\n    for (; k < klen; ++k) {\r\n      target[keys[k]] = clone(source[keys[k]]);\r\n    }\r\n    return target;\r\n  }\r\n  return source;\r\n}\r\nfunction isValidKey(key) {\r\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\r\n}\r\nfunction _merger(key, target, source, options) {\r\n  if (!isValidKey(key)) {\r\n    return;\r\n  }\r\n  const tval = target[key];\r\n  const sval = source[key];\r\n  if (isObject(tval) && isObject(sval)) {\r\n    merge(tval, sval, options);\r\n  } else {\r\n    target[key] = clone(sval);\r\n  }\r\n}\r\nfunction merge(target, source, options) {\r\n  const sources = isArray(source) ? source : [source];\r\n  const ilen = sources.length;\r\n  if (!isObject(target)) {\r\n    return target;\r\n  }\r\n  options = options || {};\r\n  const merger = options.merger || _merger;\r\n  for (let i = 0; i < ilen; ++i) {\r\n    source = sources[i];\r\n    if (!isObject(source)) {\r\n      continue;\r\n    }\r\n    const keys = Object.keys(source);\r\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\r\n      merger(keys[k], target, source, options);\r\n    }\r\n  }\r\n  return target;\r\n}\r\nfunction mergeIf(target, source) {\r\n  return merge(target, source, {merger: _mergerIf});\r\n}\r\nfunction _mergerIf(key, target, source) {\r\n  if (!isValidKey(key)) {\r\n    return;\r\n  }\r\n  const tval = target[key];\r\n  const sval = source[key];\r\n  if (isObject(tval) && isObject(sval)) {\r\n    mergeIf(tval, sval);\r\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\r\n    target[key] = clone(sval);\r\n  }\r\n}\r\nfunction _deprecated(scope, value, previous, current) {\r\n  if (value !== undefined) {\r\n    console.warn(scope + ': \"' + previous +\r\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\r\n  }\r\n}\r\nconst emptyString = '';\r\nconst dot = '.';\r\nfunction indexOfDotOrLength(key, start) {\r\n  const idx = key.indexOf(dot, start);\r\n  return idx === -1 ? key.length : idx;\r\n}\r\nfunction resolveObjectKey(obj, key) {\r\n  if (key === emptyString) {\r\n    return obj;\r\n  }\r\n  let pos = 0;\r\n  let idx = indexOfDotOrLength(key, pos);\r\n  while (obj && idx > pos) {\r\n    obj = obj[key.substr(pos, idx - pos)];\r\n    pos = idx + 1;\r\n    idx = indexOfDotOrLength(key, pos);\r\n  }\r\n  return obj;\r\n}\r\nfunction _capitalize(str) {\r\n  return str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\nconst defined = (value) => typeof value !== 'undefined';\r\nconst isFunction = (value) => typeof value === 'function';\r\nconst setsEqual = (a, b) => {\r\n  if (a.size !== b.size) {\r\n    return false;\r\n  }\r\n  for (const item of a) {\r\n    if (!b.has(item)) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\n\r\nconst overrides = Object.create(null);\r\nconst descriptors = Object.create(null);\r\nfunction getScope$1(node, key) {\r\n  if (!key) {\r\n    return node;\r\n  }\r\n  const keys = key.split('.');\r\n  for (let i = 0, n = keys.length; i < n; ++i) {\r\n    const k = keys[i];\r\n    node = node[k] || (node[k] = Object.create(null));\r\n  }\r\n  return node;\r\n}\r\nfunction set(root, scope, values) {\r\n  if (typeof scope === 'string') {\r\n    return merge(getScope$1(root, scope), values);\r\n  }\r\n  return merge(getScope$1(root, ''), scope);\r\n}\r\nclass Defaults {\r\n  constructor(_descriptors) {\r\n    this.animation = undefined;\r\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\r\n    this.borderColor = 'rgba(0,0,0,0.1)';\r\n    this.color = '#666';\r\n    this.datasets = {};\r\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\r\n    this.elements = {};\r\n    this.events = [\r\n      'mousemove',\r\n      'mouseout',\r\n      'click',\r\n      'touchstart',\r\n      'touchmove'\r\n    ];\r\n    this.font = {\r\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\r\n      size: 12,\r\n      style: 'normal',\r\n      lineHeight: 1.2,\r\n      weight: null\r\n    };\r\n    this.hover = {};\r\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\r\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\r\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\r\n    this.indexAxis = 'x';\r\n    this.interaction = {\r\n      mode: 'nearest',\r\n      intersect: true\r\n    };\r\n    this.maintainAspectRatio = true;\r\n    this.onHover = null;\r\n    this.onClick = null;\r\n    this.parsing = true;\r\n    this.plugins = {};\r\n    this.responsive = true;\r\n    this.scale = undefined;\r\n    this.scales = {};\r\n    this.showLine = true;\r\n    this.describe(_descriptors);\r\n  }\r\n  set(scope, values) {\r\n    return set(this, scope, values);\r\n  }\r\n  get(scope) {\r\n    return getScope$1(this, scope);\r\n  }\r\n  describe(scope, values) {\r\n    return set(descriptors, scope, values);\r\n  }\r\n  override(scope, values) {\r\n    return set(overrides, scope, values);\r\n  }\r\n  route(scope, name, targetScope, targetName) {\r\n    const scopeObject = getScope$1(this, scope);\r\n    const targetScopeObject = getScope$1(this, targetScope);\r\n    const privateName = '_' + name;\r\n    Object.defineProperties(scopeObject, {\r\n      [privateName]: {\r\n        value: scopeObject[name],\r\n        writable: true\r\n      },\r\n      [name]: {\r\n        enumerable: true,\r\n        get() {\r\n          const local = this[privateName];\r\n          const target = targetScopeObject[targetName];\r\n          if (isObject(local)) {\r\n            return Object.assign({}, target, local);\r\n          }\r\n          return valueOrDefault(local, target);\r\n        },\r\n        set(value) {\r\n          this[privateName] = value;\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\nvar defaults = new Defaults({\r\n  _scriptable: (name) => !name.startsWith('on'),\r\n  _indexable: (name) => name !== 'events',\r\n  hover: {\r\n    _fallback: 'interaction'\r\n  },\r\n  interaction: {\r\n    _scriptable: false,\r\n    _indexable: false,\r\n  }\r\n});\r\n\r\nconst PI = Math.PI;\r\nconst TAU = 2 * PI;\r\nconst PITAU = TAU + PI;\r\nconst INFINITY = Number.POSITIVE_INFINITY;\r\nconst RAD_PER_DEG = PI / 180;\r\nconst HALF_PI = PI / 2;\r\nconst QUARTER_PI = PI / 4;\r\nconst TWO_THIRDS_PI = PI * 2 / 3;\r\nconst log10 = Math.log10;\r\nconst sign = Math.sign;\r\nfunction niceNum(range) {\r\n  const roundedRange = Math.round(range);\r\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\r\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\r\n  const fraction = range / niceRange;\r\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\r\n  return niceFraction * niceRange;\r\n}\r\nfunction _factorize(value) {\r\n  const result = [];\r\n  const sqrt = Math.sqrt(value);\r\n  let i;\r\n  for (i = 1; i < sqrt; i++) {\r\n    if (value % i === 0) {\r\n      result.push(i);\r\n      result.push(value / i);\r\n    }\r\n  }\r\n  if (sqrt === (sqrt | 0)) {\r\n    result.push(sqrt);\r\n  }\r\n  result.sort((a, b) => a - b).pop();\r\n  return result;\r\n}\r\nfunction isNumber(n) {\r\n  return !isNaN(parseFloat(n)) && isFinite(n);\r\n}\r\nfunction almostEquals(x, y, epsilon) {\r\n  return Math.abs(x - y) < epsilon;\r\n}\r\nfunction almostWhole(x, epsilon) {\r\n  const rounded = Math.round(x);\r\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\r\n}\r\nfunction _setMinAndMaxByKey(array, target, property) {\r\n  let i, ilen, value;\r\n  for (i = 0, ilen = array.length; i < ilen; i++) {\r\n    value = array[i][property];\r\n    if (!isNaN(value)) {\r\n      target.min = Math.min(target.min, value);\r\n      target.max = Math.max(target.max, value);\r\n    }\r\n  }\r\n}\r\nfunction toRadians(degrees) {\r\n  return degrees * (PI / 180);\r\n}\r\nfunction toDegrees(radians) {\r\n  return radians * (180 / PI);\r\n}\r\nfunction _decimalPlaces(x) {\r\n  if (!isNumberFinite(x)) {\r\n    return;\r\n  }\r\n  let e = 1;\r\n  let p = 0;\r\n  while (Math.round(x * e) / e !== x) {\r\n    e *= 10;\r\n    p++;\r\n  }\r\n  return p;\r\n}\r\nfunction getAngleFromPoint(centrePoint, anglePoint) {\r\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\r\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\r\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\r\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\r\n  if (angle < (-0.5 * PI)) {\r\n    angle += TAU;\r\n  }\r\n  return {\r\n    angle,\r\n    distance: radialDistanceFromCenter\r\n  };\r\n}\r\nfunction distanceBetweenPoints(pt1, pt2) {\r\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\r\n}\r\nfunction _angleDiff(a, b) {\r\n  return (a - b + PITAU) % TAU - PI;\r\n}\r\nfunction _normalizeAngle(a) {\r\n  return (a % TAU + TAU) % TAU;\r\n}\r\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\r\n  const a = _normalizeAngle(angle);\r\n  const s = _normalizeAngle(start);\r\n  const e = _normalizeAngle(end);\r\n  const angleToStart = _normalizeAngle(s - a);\r\n  const angleToEnd = _normalizeAngle(e - a);\r\n  const startToAngle = _normalizeAngle(a - s);\r\n  const endToAngle = _normalizeAngle(a - e);\r\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\r\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\r\n}\r\nfunction _limitValue(value, min, max) {\r\n  return Math.max(min, Math.min(max, value));\r\n}\r\nfunction _int16Range(value) {\r\n  return _limitValue(value, -32768, 32767);\r\n}\r\n\r\nfunction toFontString(font) {\r\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\r\n    return null;\r\n  }\r\n  return (font.style ? font.style + ' ' : '')\r\n\t\t+ (font.weight ? font.weight + ' ' : '')\r\n\t\t+ font.size + 'px '\r\n\t\t+ font.family;\r\n}\r\nfunction _measureText(ctx, data, gc, longest, string) {\r\n  let textWidth = data[string];\r\n  if (!textWidth) {\r\n    textWidth = data[string] = ctx.measureText(string).width;\r\n    gc.push(string);\r\n  }\r\n  if (textWidth > longest) {\r\n    longest = textWidth;\r\n  }\r\n  return longest;\r\n}\r\nfunction _longestText(ctx, font, arrayOfThings, cache) {\r\n  cache = cache || {};\r\n  let data = cache.data = cache.data || {};\r\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\r\n  if (cache.font !== font) {\r\n    data = cache.data = {};\r\n    gc = cache.garbageCollect = [];\r\n    cache.font = font;\r\n  }\r\n  ctx.save();\r\n  ctx.font = font;\r\n  let longest = 0;\r\n  const ilen = arrayOfThings.length;\r\n  let i, j, jlen, thing, nestedThing;\r\n  for (i = 0; i < ilen; i++) {\r\n    thing = arrayOfThings[i];\r\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\r\n      longest = _measureText(ctx, data, gc, longest, thing);\r\n    } else if (isArray(thing)) {\r\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\r\n        nestedThing = thing[j];\r\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\r\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  ctx.restore();\r\n  const gcLen = gc.length / 2;\r\n  if (gcLen > arrayOfThings.length) {\r\n    for (i = 0; i < gcLen; i++) {\r\n      delete data[gc[i]];\r\n    }\r\n    gc.splice(0, gcLen);\r\n  }\r\n  return longest;\r\n}\r\nfunction _alignPixel(chart, pixel, width) {\r\n  const devicePixelRatio = chart.currentDevicePixelRatio;\r\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\r\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\r\n}\r\nfunction clearCanvas(canvas, ctx) {\r\n  ctx = ctx || canvas.getContext('2d');\r\n  ctx.save();\r\n  ctx.resetTransform();\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  ctx.restore();\r\n}\r\nfunction drawPoint(ctx, options, x, y) {\r\n  let type, xOffset, yOffset, size, cornerRadius;\r\n  const style = options.pointStyle;\r\n  const rotation = options.rotation;\r\n  const radius = options.radius;\r\n  let rad = (rotation || 0) * RAD_PER_DEG;\r\n  if (style && typeof style === 'object') {\r\n    type = style.toString();\r\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\r\n      ctx.save();\r\n      ctx.translate(x, y);\r\n      ctx.rotate(rad);\r\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\r\n      ctx.restore();\r\n      return;\r\n    }\r\n  }\r\n  if (isNaN(radius) || radius <= 0) {\r\n    return;\r\n  }\r\n  ctx.beginPath();\r\n  switch (style) {\r\n  default:\r\n    ctx.arc(x, y, radius, 0, TAU);\r\n    ctx.closePath();\r\n    break;\r\n  case 'triangle':\r\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\r\n    rad += TWO_THIRDS_PI;\r\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\r\n    rad += TWO_THIRDS_PI;\r\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\r\n    ctx.closePath();\r\n    break;\r\n  case 'rectRounded':\r\n    cornerRadius = radius * 0.516;\r\n    size = radius - cornerRadius;\r\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\r\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\r\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\r\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\r\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\r\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\r\n    ctx.closePath();\r\n    break;\r\n  case 'rect':\r\n    if (!rotation) {\r\n      size = Math.SQRT1_2 * radius;\r\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\r\n      break;\r\n    }\r\n    rad += QUARTER_PI;\r\n  case 'rectRot':\r\n    xOffset = Math.cos(rad) * radius;\r\n    yOffset = Math.sin(rad) * radius;\r\n    ctx.moveTo(x - xOffset, y - yOffset);\r\n    ctx.lineTo(x + yOffset, y - xOffset);\r\n    ctx.lineTo(x + xOffset, y + yOffset);\r\n    ctx.lineTo(x - yOffset, y + xOffset);\r\n    ctx.closePath();\r\n    break;\r\n  case 'crossRot':\r\n    rad += QUARTER_PI;\r\n  case 'cross':\r\n    xOffset = Math.cos(rad) * radius;\r\n    yOffset = Math.sin(rad) * radius;\r\n    ctx.moveTo(x - xOffset, y - yOffset);\r\n    ctx.lineTo(x + xOffset, y + yOffset);\r\n    ctx.moveTo(x + yOffset, y - xOffset);\r\n    ctx.lineTo(x - yOffset, y + xOffset);\r\n    break;\r\n  case 'star':\r\n    xOffset = Math.cos(rad) * radius;\r\n    yOffset = Math.sin(rad) * radius;\r\n    ctx.moveTo(x - xOffset, y - yOffset);\r\n    ctx.lineTo(x + xOffset, y + yOffset);\r\n    ctx.moveTo(x + yOffset, y - xOffset);\r\n    ctx.lineTo(x - yOffset, y + xOffset);\r\n    rad += QUARTER_PI;\r\n    xOffset = Math.cos(rad) * radius;\r\n    yOffset = Math.sin(rad) * radius;\r\n    ctx.moveTo(x - xOffset, y - yOffset);\r\n    ctx.lineTo(x + xOffset, y + yOffset);\r\n    ctx.moveTo(x + yOffset, y - xOffset);\r\n    ctx.lineTo(x - yOffset, y + xOffset);\r\n    break;\r\n  case 'line':\r\n    xOffset = Math.cos(rad) * radius;\r\n    yOffset = Math.sin(rad) * radius;\r\n    ctx.moveTo(x - xOffset, y - yOffset);\r\n    ctx.lineTo(x + xOffset, y + yOffset);\r\n    break;\r\n  case 'dash':\r\n    ctx.moveTo(x, y);\r\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\r\n    break;\r\n  }\r\n  ctx.fill();\r\n  if (options.borderWidth > 0) {\r\n    ctx.stroke();\r\n  }\r\n}\r\nfunction _isPointInArea(point, area, margin) {\r\n  margin = margin || 0.5;\r\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\r\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\r\n}\r\nfunction clipArea(ctx, area) {\r\n  ctx.save();\r\n  ctx.beginPath();\r\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\r\n  ctx.clip();\r\n}\r\nfunction unclipArea(ctx) {\r\n  ctx.restore();\r\n}\r\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\r\n  if (!previous) {\r\n    return ctx.lineTo(target.x, target.y);\r\n  }\r\n  if (mode === 'middle') {\r\n    const midpoint = (previous.x + target.x) / 2.0;\r\n    ctx.lineTo(midpoint, previous.y);\r\n    ctx.lineTo(midpoint, target.y);\r\n  } else if (mode === 'after' !== !!flip) {\r\n    ctx.lineTo(previous.x, target.y);\r\n  } else {\r\n    ctx.lineTo(target.x, previous.y);\r\n  }\r\n  ctx.lineTo(target.x, target.y);\r\n}\r\nfunction _bezierCurveTo(ctx, previous, target, flip) {\r\n  if (!previous) {\r\n    return ctx.lineTo(target.x, target.y);\r\n  }\r\n  ctx.bezierCurveTo(\r\n    flip ? previous.cp1x : previous.cp2x,\r\n    flip ? previous.cp1y : previous.cp2y,\r\n    flip ? target.cp2x : target.cp1x,\r\n    flip ? target.cp2y : target.cp1y,\r\n    target.x,\r\n    target.y);\r\n}\r\nfunction renderText(ctx, text, x, y, font, opts = {}) {\r\n  const lines = isArray(text) ? text : [text];\r\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\r\n  let i, line;\r\n  ctx.save();\r\n  ctx.font = font.string;\r\n  setRenderOpts(ctx, opts);\r\n  for (i = 0; i < lines.length; ++i) {\r\n    line = lines[i];\r\n    if (stroke) {\r\n      if (opts.strokeColor) {\r\n        ctx.strokeStyle = opts.strokeColor;\r\n      }\r\n      if (!isNullOrUndef(opts.strokeWidth)) {\r\n        ctx.lineWidth = opts.strokeWidth;\r\n      }\r\n      ctx.strokeText(line, x, y, opts.maxWidth);\r\n    }\r\n    ctx.fillText(line, x, y, opts.maxWidth);\r\n    decorateText(ctx, x, y, line, opts);\r\n    y += font.lineHeight;\r\n  }\r\n  ctx.restore();\r\n}\r\nfunction setRenderOpts(ctx, opts) {\r\n  if (opts.translation) {\r\n    ctx.translate(opts.translation[0], opts.translation[1]);\r\n  }\r\n  if (!isNullOrUndef(opts.rotation)) {\r\n    ctx.rotate(opts.rotation);\r\n  }\r\n  if (opts.color) {\r\n    ctx.fillStyle = opts.color;\r\n  }\r\n  if (opts.textAlign) {\r\n    ctx.textAlign = opts.textAlign;\r\n  }\r\n  if (opts.textBaseline) {\r\n    ctx.textBaseline = opts.textBaseline;\r\n  }\r\n}\r\nfunction decorateText(ctx, x, y, line, opts) {\r\n  if (opts.strikethrough || opts.underline) {\r\n    const metrics = ctx.measureText(line);\r\n    const left = x - metrics.actualBoundingBoxLeft;\r\n    const right = x + metrics.actualBoundingBoxRight;\r\n    const top = y - metrics.actualBoundingBoxAscent;\r\n    const bottom = y + metrics.actualBoundingBoxDescent;\r\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\r\n    ctx.strokeStyle = ctx.fillStyle;\r\n    ctx.beginPath();\r\n    ctx.lineWidth = opts.decorationWidth || 2;\r\n    ctx.moveTo(left, yDecoration);\r\n    ctx.lineTo(right, yDecoration);\r\n    ctx.stroke();\r\n  }\r\n}\r\nfunction addRoundedRectPath(ctx, rect) {\r\n  const {x, y, w, h, radius} = rect;\r\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\r\n  ctx.lineTo(x, y + h - radius.bottomLeft);\r\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\r\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\r\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\r\n  ctx.lineTo(x + w, y + radius.topRight);\r\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\r\n  ctx.lineTo(x + radius.topLeft, y);\r\n}\r\n\r\nfunction _lookup(table, value, cmp) {\r\n  cmp = cmp || ((index) => table[index] < value);\r\n  let hi = table.length - 1;\r\n  let lo = 0;\r\n  let mid;\r\n  while (hi - lo > 1) {\r\n    mid = (lo + hi) >> 1;\r\n    if (cmp(mid)) {\r\n      lo = mid;\r\n    } else {\r\n      hi = mid;\r\n    }\r\n  }\r\n  return {lo, hi};\r\n}\r\nconst _lookupByKey = (table, key, value) =>\r\n  _lookup(table, value, index => table[index][key] < value);\r\nconst _rlookupByKey = (table, key, value) =>\r\n  _lookup(table, value, index => table[index][key] >= value);\r\nfunction _filterBetween(values, min, max) {\r\n  let start = 0;\r\n  let end = values.length;\r\n  while (start < end && values[start] < min) {\r\n    start++;\r\n  }\r\n  while (end > start && values[end - 1] > max) {\r\n    end--;\r\n  }\r\n  return start > 0 || end < values.length\r\n    ? values.slice(start, end)\r\n    : values;\r\n}\r\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\r\nfunction listenArrayEvents(array, listener) {\r\n  if (array._chartjs) {\r\n    array._chartjs.listeners.push(listener);\r\n    return;\r\n  }\r\n  Object.defineProperty(array, '_chartjs', {\r\n    configurable: true,\r\n    enumerable: false,\r\n    value: {\r\n      listeners: [listener]\r\n    }\r\n  });\r\n  arrayEvents.forEach((key) => {\r\n    const method = '_onData' + _capitalize(key);\r\n    const base = array[key];\r\n    Object.defineProperty(array, key, {\r\n      configurable: true,\r\n      enumerable: false,\r\n      value(...args) {\r\n        const res = base.apply(this, args);\r\n        array._chartjs.listeners.forEach((object) => {\r\n          if (typeof object[method] === 'function') {\r\n            object[method](...args);\r\n          }\r\n        });\r\n        return res;\r\n      }\r\n    });\r\n  });\r\n}\r\nfunction unlistenArrayEvents(array, listener) {\r\n  const stub = array._chartjs;\r\n  if (!stub) {\r\n    return;\r\n  }\r\n  const listeners = stub.listeners;\r\n  const index = listeners.indexOf(listener);\r\n  if (index !== -1) {\r\n    listeners.splice(index, 1);\r\n  }\r\n  if (listeners.length > 0) {\r\n    return;\r\n  }\r\n  arrayEvents.forEach((key) => {\r\n    delete array[key];\r\n  });\r\n  delete array._chartjs;\r\n}\r\nfunction _arrayUnique(items) {\r\n  const set = new Set();\r\n  let i, ilen;\r\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n    set.add(items[i]);\r\n  }\r\n  if (set.size === ilen) {\r\n    return items;\r\n  }\r\n  return Array.from(set);\r\n}\r\n\r\nfunction _isDomSupported() {\r\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\r\n}\r\nfunction _getParentNode(domNode) {\r\n  let parent = domNode.parentNode;\r\n  if (parent && parent.toString() === '[object ShadowRoot]') {\r\n    parent = parent.host;\r\n  }\r\n  return parent;\r\n}\r\nfunction parseMaxStyle(styleValue, node, parentProperty) {\r\n  let valueInPixels;\r\n  if (typeof styleValue === 'string') {\r\n    valueInPixels = parseInt(styleValue, 10);\r\n    if (styleValue.indexOf('%') !== -1) {\r\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\r\n    }\r\n  } else {\r\n    valueInPixels = styleValue;\r\n  }\r\n  return valueInPixels;\r\n}\r\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\r\nfunction getStyle(el, property) {\r\n  return getComputedStyle(el).getPropertyValue(property);\r\n}\r\nconst positions = ['top', 'right', 'bottom', 'left'];\r\nfunction getPositionedStyle(styles, style, suffix) {\r\n  const result = {};\r\n  suffix = suffix ? '-' + suffix : '';\r\n  for (let i = 0; i < 4; i++) {\r\n    const pos = positions[i];\r\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\r\n  }\r\n  result.width = result.left + result.right;\r\n  result.height = result.top + result.bottom;\r\n  return result;\r\n}\r\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\r\nfunction getCanvasPosition(evt, canvas) {\r\n  const e = evt.native || evt;\r\n  const touches = e.touches;\r\n  const source = touches && touches.length ? touches[0] : e;\r\n  const {offsetX, offsetY} = source;\r\n  let box = false;\r\n  let x, y;\r\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\r\n    x = offsetX;\r\n    y = offsetY;\r\n  } else {\r\n    const rect = canvas.getBoundingClientRect();\r\n    x = source.clientX - rect.left;\r\n    y = source.clientY - rect.top;\r\n    box = true;\r\n  }\r\n  return {x, y, box};\r\n}\r\nfunction getRelativePosition$1(evt, chart) {\r\n  const {canvas, currentDevicePixelRatio} = chart;\r\n  const style = getComputedStyle(canvas);\r\n  const borderBox = style.boxSizing === 'border-box';\r\n  const paddings = getPositionedStyle(style, 'padding');\r\n  const borders = getPositionedStyle(style, 'border', 'width');\r\n  const {x, y, box} = getCanvasPosition(evt, canvas);\r\n  const xOffset = paddings.left + (box && borders.left);\r\n  const yOffset = paddings.top + (box && borders.top);\r\n  let {width, height} = chart;\r\n  if (borderBox) {\r\n    width -= paddings.width + borders.width;\r\n    height -= paddings.height + borders.height;\r\n  }\r\n  return {\r\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\r\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\r\n  };\r\n}\r\nfunction getContainerSize(canvas, width, height) {\r\n  let maxWidth, maxHeight;\r\n  if (width === undefined || height === undefined) {\r\n    const container = _getParentNode(canvas);\r\n    if (!container) {\r\n      width = canvas.clientWidth;\r\n      height = canvas.clientHeight;\r\n    } else {\r\n      const rect = container.getBoundingClientRect();\r\n      const containerStyle = getComputedStyle(container);\r\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\r\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\r\n      width = rect.width - containerPadding.width - containerBorder.width;\r\n      height = rect.height - containerPadding.height - containerBorder.height;\r\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\r\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\r\n    }\r\n  }\r\n  return {\r\n    width,\r\n    height,\r\n    maxWidth: maxWidth || INFINITY,\r\n    maxHeight: maxHeight || INFINITY\r\n  };\r\n}\r\nconst round1 = v => Math.round(v * 10) / 10;\r\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\r\n  const style = getComputedStyle(canvas);\r\n  const margins = getPositionedStyle(style, 'margin');\r\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\r\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\r\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\r\n  let {width, height} = containerSize;\r\n  if (style.boxSizing === 'content-box') {\r\n    const borders = getPositionedStyle(style, 'border', 'width');\r\n    const paddings = getPositionedStyle(style, 'padding');\r\n    width -= paddings.width + borders.width;\r\n    height -= paddings.height + borders.height;\r\n  }\r\n  width = Math.max(0, width - margins.width);\r\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\r\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\r\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\r\n  if (width && !height) {\r\n    height = round1(width / 2);\r\n  }\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\nfunction retinaScale(chart, forceRatio, forceStyle) {\r\n  const pixelRatio = forceRatio || 1;\r\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\r\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\r\n  chart.height = deviceHeight / pixelRatio;\r\n  chart.width = deviceWidth / pixelRatio;\r\n  const canvas = chart.canvas;\r\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\r\n    canvas.style.height = `${chart.height}px`;\r\n    canvas.style.width = `${chart.width}px`;\r\n  }\r\n  if (chart.currentDevicePixelRatio !== pixelRatio\r\n      || canvas.height !== deviceHeight\r\n      || canvas.width !== deviceWidth) {\r\n    chart.currentDevicePixelRatio = pixelRatio;\r\n    canvas.height = deviceHeight;\r\n    canvas.width = deviceWidth;\r\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nconst supportsEventListenerOptions = (function() {\r\n  let passiveSupported = false;\r\n  try {\r\n    const options = {\r\n      get passive() {\r\n        passiveSupported = true;\r\n        return false;\r\n      }\r\n    };\r\n    window.addEventListener('test', null, options);\r\n    window.removeEventListener('test', null, options);\r\n  } catch (e) {\r\n  }\r\n  return passiveSupported;\r\n}());\r\nfunction readUsedSize(element, property) {\r\n  const value = getStyle(element, property);\r\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\r\n  return matches ? +matches[1] : undefined;\r\n}\r\n\r\nfunction getRelativePosition(e, chart) {\r\n  if ('native' in e) {\r\n    return {\r\n      x: e.x,\r\n      y: e.y\r\n    };\r\n  }\r\n  return getRelativePosition$1(e, chart);\r\n}\r\nfunction evaluateAllVisibleItems(chart, handler) {\r\n  const metasets = chart.getSortedVisibleDatasetMetas();\r\n  let index, data, element;\r\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    ({index, data} = metasets[i]);\r\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\r\n      element = data[j];\r\n      if (!element.skip) {\r\n        handler(element, index, j);\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction binarySearch(metaset, axis, value, intersect) {\r\n  const {controller, data, _sorted} = metaset;\r\n  const iScale = controller._cachedMeta.iScale;\r\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\r\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\r\n    if (!intersect) {\r\n      return lookupMethod(data, axis, value);\r\n    } else if (controller._sharedOptions) {\r\n      const el = data[0];\r\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\r\n      if (range) {\r\n        const start = lookupMethod(data, axis, value - range);\r\n        const end = lookupMethod(data, axis, value + range);\r\n        return {lo: start.lo, hi: end.hi};\r\n      }\r\n    }\r\n  }\r\n  return {lo: 0, hi: data.length - 1};\r\n}\r\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\r\n  const metasets = chart.getSortedVisibleDatasetMetas();\r\n  const value = position[axis];\r\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    const {index, data} = metasets[i];\r\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\r\n    for (let j = lo; j <= hi; ++j) {\r\n      const element = data[j];\r\n      if (!element.skip) {\r\n        handler(element, index, j);\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction getDistanceMetricForAxis(axis) {\r\n  const useX = axis.indexOf('x') !== -1;\r\n  const useY = axis.indexOf('y') !== -1;\r\n  return function(pt1, pt2) {\r\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\r\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\r\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\r\n  };\r\n}\r\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\r\n  const items = [];\r\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\r\n    return items;\r\n  }\r\n  const evaluationFunc = function(element, datasetIndex, index) {\r\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  };\r\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\r\n  return items;\r\n}\r\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\r\n  const distanceMetric = getDistanceMetricForAxis(axis);\r\n  let minDistance = Number.POSITIVE_INFINITY;\r\n  let items = [];\r\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\r\n    return items;\r\n  }\r\n  const evaluationFunc = function(element, datasetIndex, index) {\r\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\r\n      return;\r\n    }\r\n    const center = element.getCenterPoint(useFinalPosition);\r\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\r\n      return;\r\n    }\r\n    const distance = distanceMetric(position, center);\r\n    if (distance < minDistance) {\r\n      items = [{element, datasetIndex, index}];\r\n      minDistance = distance;\r\n    } else if (distance === minDistance) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  };\r\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\r\n  return items;\r\n}\r\nfunction getAxisItems(chart, e, options, useFinalPosition) {\r\n  const position = getRelativePosition(e, chart);\r\n  const items = [];\r\n  const axis = options.axis;\r\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\r\n  let intersectsItem = false;\r\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\r\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\r\n      intersectsItem = true;\r\n    }\r\n  });\r\n  if (options.intersect && !intersectsItem) {\r\n    return [];\r\n  }\r\n  return items;\r\n}\r\nvar Interaction = {\r\n  modes: {\r\n    index(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'x';\r\n      const items = options.intersect\r\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\r\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\r\n      const elements = [];\r\n      if (!items.length) {\r\n        return [];\r\n      }\r\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\r\n        const index = items[0].index;\r\n        const element = meta.data[index];\r\n        if (element && !element.skip) {\r\n          elements.push({element, datasetIndex: meta.index, index});\r\n        }\r\n      });\r\n      return elements;\r\n    },\r\n    dataset(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      let items = options.intersect\r\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\r\n        getNearestItems(chart, position, axis, false, useFinalPosition);\r\n      if (items.length > 0) {\r\n        const datasetIndex = items[0].datasetIndex;\r\n        const data = chart.getDatasetMeta(datasetIndex).data;\r\n        items = [];\r\n        for (let i = 0; i < data.length; ++i) {\r\n          items.push({element: data[i], datasetIndex, index: i});\r\n        }\r\n      }\r\n      return items;\r\n    },\r\n    point(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      return getIntersectItems(chart, position, axis, useFinalPosition);\r\n    },\r\n    nearest(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\r\n    },\r\n    x(chart, e, options, useFinalPosition) {\r\n      options.axis = 'x';\r\n      return getAxisItems(chart, e, options, useFinalPosition);\r\n    },\r\n    y(chart, e, options, useFinalPosition) {\r\n      options.axis = 'y';\r\n      return getAxisItems(chart, e, options, useFinalPosition);\r\n    }\r\n  }\r\n};\r\n\r\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\r\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\r\nfunction toLineHeight(value, size) {\r\n  const matches = ('' + value).match(LINE_HEIGHT);\r\n  if (!matches || matches[1] === 'normal') {\r\n    return size * 1.2;\r\n  }\r\n  value = +matches[2];\r\n  switch (matches[3]) {\r\n  case 'px':\r\n    return value;\r\n  case '%':\r\n    value /= 100;\r\n    break;\r\n  }\r\n  return size * value;\r\n}\r\nconst numberOrZero$1 = v => +v || 0;\r\nfunction _readValueToProps(value, props) {\r\n  const ret = {};\r\n  const objProps = isObject(props);\r\n  const keys = objProps ? Object.keys(props) : props;\r\n  const read = isObject(value)\r\n    ? objProps\r\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\r\n      : prop => value[prop]\r\n    : () => value;\r\n  for (const prop of keys) {\r\n    ret[prop] = numberOrZero$1(read(prop));\r\n  }\r\n  return ret;\r\n}\r\nfunction toTRBL(value) {\r\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\r\n}\r\nfunction toTRBLCorners(value) {\r\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\r\n}\r\nfunction toPadding(value) {\r\n  const obj = toTRBL(value);\r\n  obj.width = obj.left + obj.right;\r\n  obj.height = obj.top + obj.bottom;\r\n  return obj;\r\n}\r\nfunction toFont(options, fallback) {\r\n  options = options || {};\r\n  fallback = fallback || defaults.font;\r\n  let size = valueOrDefault(options.size, fallback.size);\r\n  if (typeof size === 'string') {\r\n    size = parseInt(size, 10);\r\n  }\r\n  let style = valueOrDefault(options.style, fallback.style);\r\n  if (style && !('' + style).match(FONT_STYLE)) {\r\n    console.warn('Invalid font style specified: \"' + style + '\"');\r\n    style = '';\r\n  }\r\n  const font = {\r\n    family: valueOrDefault(options.family, fallback.family),\r\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\r\n    size,\r\n    style,\r\n    weight: valueOrDefault(options.weight, fallback.weight),\r\n    string: ''\r\n  };\r\n  font.string = toFontString(font);\r\n  return font;\r\n}\r\nfunction resolve(inputs, context, index, info) {\r\n  let cacheable = true;\r\n  let i, ilen, value;\r\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\r\n    value = inputs[i];\r\n    if (value === undefined) {\r\n      continue;\r\n    }\r\n    if (context !== undefined && typeof value === 'function') {\r\n      value = value(context);\r\n      cacheable = false;\r\n    }\r\n    if (index !== undefined && isArray(value)) {\r\n      value = value[index % value.length];\r\n      cacheable = false;\r\n    }\r\n    if (value !== undefined) {\r\n      if (info && !cacheable) {\r\n        info.cacheable = false;\r\n      }\r\n      return value;\r\n    }\r\n  }\r\n}\r\nfunction _addGrace(minmax, grace) {\r\n  const {min, max} = minmax;\r\n  return {\r\n    min: min - Math.abs(toDimension(grace, min)),\r\n    max: max + toDimension(grace, max)\r\n  };\r\n}\r\n\r\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\r\nfunction filterByPosition(array, position) {\r\n  return array.filter(v => v.pos === position);\r\n}\r\nfunction filterDynamicPositionByAxis(array, axis) {\r\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\r\n}\r\nfunction sortByWeight(array, reverse) {\r\n  return array.sort((a, b) => {\r\n    const v0 = reverse ? b : a;\r\n    const v1 = reverse ? a : b;\r\n    return v0.weight === v1.weight ?\r\n      v0.index - v1.index :\r\n      v0.weight - v1.weight;\r\n  });\r\n}\r\nfunction wrapBoxes(boxes) {\r\n  const layoutBoxes = [];\r\n  let i, ilen, box, pos, stack, stackWeight;\r\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\r\n    box = boxes[i];\r\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\r\n    layoutBoxes.push({\r\n      index: i,\r\n      box,\r\n      pos,\r\n      horizontal: box.isHorizontal(),\r\n      weight: box.weight,\r\n      stack: stack && (pos + stack),\r\n      stackWeight\r\n    });\r\n  }\r\n  return layoutBoxes;\r\n}\r\nfunction buildStacks(layouts) {\r\n  const stacks = {};\r\n  for (const wrap of layouts) {\r\n    const {stack, pos, stackWeight} = wrap;\r\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\r\n      continue;\r\n    }\r\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\r\n    _stack.count++;\r\n    _stack.weight += stackWeight;\r\n  }\r\n  return stacks;\r\n}\r\nfunction setLayoutDims(layouts, params) {\r\n  const stacks = buildStacks(layouts);\r\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\r\n  let i, ilen, layout;\r\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\r\n    layout = layouts[i];\r\n    const {fullSize} = layout.box;\r\n    const stack = stacks[layout.stack];\r\n    const factor = stack && layout.stackWeight / stack.weight;\r\n    if (layout.horizontal) {\r\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\r\n      layout.height = hBoxMaxHeight;\r\n    } else {\r\n      layout.width = vBoxMaxWidth;\r\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\r\n    }\r\n  }\r\n  return stacks;\r\n}\r\nfunction buildLayoutBoxes(boxes) {\r\n  const layoutBoxes = wrapBoxes(boxes);\r\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\r\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\r\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\r\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\r\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\r\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\r\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\r\n  return {\r\n    fullSize,\r\n    leftAndTop: left.concat(top),\r\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\r\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\r\n    vertical: left.concat(right).concat(centerVertical),\r\n    horizontal: top.concat(bottom).concat(centerHorizontal)\r\n  };\r\n}\r\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\r\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\r\n}\r\nfunction updateMaxPadding(maxPadding, boxPadding) {\r\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\r\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\r\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\r\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\r\n}\r\nfunction updateDims(chartArea, params, layout, stacks) {\r\n  const {pos, box} = layout;\r\n  const maxPadding = chartArea.maxPadding;\r\n  if (!isObject(pos)) {\r\n    if (layout.size) {\r\n      chartArea[pos] -= layout.size;\r\n    }\r\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\r\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\r\n    layout.size = stack.size / stack.count;\r\n    chartArea[pos] += layout.size;\r\n  }\r\n  if (box.getPadding) {\r\n    updateMaxPadding(maxPadding, box.getPadding());\r\n  }\r\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\r\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\r\n  const widthChanged = newWidth !== chartArea.w;\r\n  const heightChanged = newHeight !== chartArea.h;\r\n  chartArea.w = newWidth;\r\n  chartArea.h = newHeight;\r\n  return layout.horizontal\r\n    ? {same: widthChanged, other: heightChanged}\r\n    : {same: heightChanged, other: widthChanged};\r\n}\r\nfunction handleMaxPadding(chartArea) {\r\n  const maxPadding = chartArea.maxPadding;\r\n  function updatePos(pos) {\r\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\r\n    chartArea[pos] += change;\r\n    return change;\r\n  }\r\n  chartArea.y += updatePos('top');\r\n  chartArea.x += updatePos('left');\r\n  updatePos('right');\r\n  updatePos('bottom');\r\n}\r\nfunction getMargins(horizontal, chartArea) {\r\n  const maxPadding = chartArea.maxPadding;\r\n  function marginForPositions(positions) {\r\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\r\n    positions.forEach((pos) => {\r\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\r\n    });\r\n    return margin;\r\n  }\r\n  return horizontal\r\n    ? marginForPositions(['left', 'right'])\r\n    : marginForPositions(['top', 'bottom']);\r\n}\r\nfunction fitBoxes(boxes, chartArea, params, stacks) {\r\n  const refitBoxes = [];\r\n  let i, ilen, layout, box, refit, changed;\r\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\r\n    layout = boxes[i];\r\n    box = layout.box;\r\n    box.update(\r\n      layout.width || chartArea.w,\r\n      layout.height || chartArea.h,\r\n      getMargins(layout.horizontal, chartArea)\r\n    );\r\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\r\n    refit |= same && refitBoxes.length;\r\n    changed = changed || other;\r\n    if (!box.fullSize) {\r\n      refitBoxes.push(layout);\r\n    }\r\n  }\r\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\r\n}\r\nfunction setBoxDims(box, left, top, width, height) {\r\n  box.top = top;\r\n  box.left = left;\r\n  box.right = left + width;\r\n  box.bottom = top + height;\r\n  box.width = width;\r\n  box.height = height;\r\n}\r\nfunction placeBoxes(boxes, chartArea, params, stacks) {\r\n  const userPadding = params.padding;\r\n  let {x, y} = chartArea;\r\n  for (const layout of boxes) {\r\n    const box = layout.box;\r\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\r\n    const weight = (layout.stackWeight / stack.weight) || 1;\r\n    if (layout.horizontal) {\r\n      const width = chartArea.w * weight;\r\n      const height = stack.size || box.height;\r\n      if (defined(stack.start)) {\r\n        y = stack.start;\r\n      }\r\n      if (box.fullSize) {\r\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\r\n      } else {\r\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\r\n      }\r\n      stack.start = y;\r\n      stack.placed += width;\r\n      y = box.bottom;\r\n    } else {\r\n      const height = chartArea.h * weight;\r\n      const width = stack.size || box.width;\r\n      if (defined(stack.start)) {\r\n        x = stack.start;\r\n      }\r\n      if (box.fullSize) {\r\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\r\n      } else {\r\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\r\n      }\r\n      stack.start = x;\r\n      stack.placed += height;\r\n      x = box.right;\r\n    }\r\n  }\r\n  chartArea.x = x;\r\n  chartArea.y = y;\r\n}\r\ndefaults.set('layout', {\r\n  padding: {\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    left: 0\r\n  }\r\n});\r\nvar layouts = {\r\n  addBox(chart, item) {\r\n    if (!chart.boxes) {\r\n      chart.boxes = [];\r\n    }\r\n    item.fullSize = item.fullSize || false;\r\n    item.position = item.position || 'top';\r\n    item.weight = item.weight || 0;\r\n    item._layers = item._layers || function() {\r\n      return [{\r\n        z: 0,\r\n        draw(chartArea) {\r\n          item.draw(chartArea);\r\n        }\r\n      }];\r\n    };\r\n    chart.boxes.push(item);\r\n  },\r\n  removeBox(chart, layoutItem) {\r\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\r\n    if (index !== -1) {\r\n      chart.boxes.splice(index, 1);\r\n    }\r\n  },\r\n  configure(chart, item, options) {\r\n    item.fullSize = options.fullSize;\r\n    item.position = options.position;\r\n    item.weight = options.weight;\r\n  },\r\n  update(chart, width, height, minPadding) {\r\n    if (!chart) {\r\n      return;\r\n    }\r\n    const padding = toPadding(chart.options.layout.padding);\r\n    const availableWidth = Math.max(width - padding.width, 0);\r\n    const availableHeight = Math.max(height - padding.height, 0);\r\n    const boxes = buildLayoutBoxes(chart.boxes);\r\n    const verticalBoxes = boxes.vertical;\r\n    const horizontalBoxes = boxes.horizontal;\r\n    each(chart.boxes, box => {\r\n      if (typeof box.beforeLayout === 'function') {\r\n        box.beforeLayout();\r\n      }\r\n    });\r\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\r\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\r\n    const params = Object.freeze({\r\n      outerWidth: width,\r\n      outerHeight: height,\r\n      padding,\r\n      availableWidth,\r\n      availableHeight,\r\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\r\n      hBoxMaxHeight: availableHeight / 2\r\n    });\r\n    const maxPadding = Object.assign({}, padding);\r\n    updateMaxPadding(maxPadding, toPadding(minPadding));\r\n    const chartArea = Object.assign({\r\n      maxPadding,\r\n      w: availableWidth,\r\n      h: availableHeight,\r\n      x: padding.left,\r\n      y: padding.top\r\n    }, padding);\r\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\r\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\r\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\r\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\r\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\r\n    }\r\n    handleMaxPadding(chartArea);\r\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\r\n    chartArea.x += chartArea.w;\r\n    chartArea.y += chartArea.h;\r\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\r\n    chart.chartArea = {\r\n      left: chartArea.left,\r\n      top: chartArea.top,\r\n      right: chartArea.left + chartArea.w,\r\n      bottom: chartArea.top + chartArea.h,\r\n      height: chartArea.h,\r\n      width: chartArea.w,\r\n    };\r\n    each(boxes.chartArea, (layout) => {\r\n      const box = layout.box;\r\n      Object.assign(box, chart.chartArea);\r\n      box.update(chartArea.w, chartArea.h);\r\n    });\r\n  }\r\n};\r\n\r\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\r\n  if (!defined(fallback)) {\r\n    fallback = _resolve('_fallback', scopes);\r\n  }\r\n  const cache = {\r\n    [Symbol.toStringTag]: 'Object',\r\n    _cacheable: true,\r\n    _scopes: scopes,\r\n    _rootScopes: rootScopes,\r\n    _fallback: fallback,\r\n    _getTarget: getTarget,\r\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\r\n  };\r\n  return new Proxy(cache, {\r\n    deleteProperty(target, prop) {\r\n      delete target[prop];\r\n      delete target._keys;\r\n      delete scopes[0][prop];\r\n      return true;\r\n    },\r\n    get(target, prop) {\r\n      return _cached(target, prop,\r\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\r\n    },\r\n    getOwnPropertyDescriptor(target, prop) {\r\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\r\n    },\r\n    getPrototypeOf() {\r\n      return Reflect.getPrototypeOf(scopes[0]);\r\n    },\r\n    has(target, prop) {\r\n      return getKeysFromAllScopes(target).includes(prop);\r\n    },\r\n    ownKeys(target) {\r\n      return getKeysFromAllScopes(target);\r\n    },\r\n    set(target, prop, value) {\r\n      const storage = target._storage || (target._storage = getTarget());\r\n      storage[prop] = value;\r\n      delete target[prop];\r\n      delete target._keys;\r\n      return true;\r\n    }\r\n  });\r\n}\r\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\r\n  const cache = {\r\n    _cacheable: false,\r\n    _proxy: proxy,\r\n    _context: context,\r\n    _subProxy: subProxy,\r\n    _stack: new Set(),\r\n    _descriptors: _descriptors(proxy, descriptorDefaults),\r\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\r\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\r\n  };\r\n  return new Proxy(cache, {\r\n    deleteProperty(target, prop) {\r\n      delete target[prop];\r\n      delete proxy[prop];\r\n      return true;\r\n    },\r\n    get(target, prop, receiver) {\r\n      return _cached(target, prop,\r\n        () => _resolveWithContext(target, prop, receiver));\r\n    },\r\n    getOwnPropertyDescriptor(target, prop) {\r\n      return target._descriptors.allKeys\r\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\r\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\r\n    },\r\n    getPrototypeOf() {\r\n      return Reflect.getPrototypeOf(proxy);\r\n    },\r\n    has(target, prop) {\r\n      return Reflect.has(proxy, prop);\r\n    },\r\n    ownKeys() {\r\n      return Reflect.ownKeys(proxy);\r\n    },\r\n    set(target, prop, value) {\r\n      proxy[prop] = value;\r\n      delete target[prop];\r\n      return true;\r\n    }\r\n  });\r\n}\r\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\r\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\r\n  return {\r\n    allKeys: _allKeys,\r\n    scriptable: _scriptable,\r\n    indexable: _indexable,\r\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\r\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\r\n  };\r\n}\r\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\r\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters';\r\nfunction _cached(target, prop, resolve) {\r\n  let value = target[prop];\r\n  if (defined(value)) {\r\n    return value;\r\n  }\r\n  value = resolve();\r\n  if (defined(value)) {\r\n    target[prop] = value;\r\n  }\r\n  return value;\r\n}\r\nfunction _resolveWithContext(target, prop, receiver) {\r\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\r\n  let value = _proxy[prop];\r\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\r\n    value = _resolveScriptable(prop, value, target, receiver);\r\n  }\r\n  if (isArray(value) && value.length) {\r\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\r\n  }\r\n  if (needsSubResolver(prop, value)) {\r\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\r\n  }\r\n  return value;\r\n}\r\nfunction _resolveScriptable(prop, value, target, receiver) {\r\n  const {_proxy, _context, _subProxy, _stack} = target;\r\n  if (_stack.has(prop)) {\r\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\r\n  }\r\n  _stack.add(prop);\r\n  value = value(_context, _subProxy || receiver);\r\n  _stack.delete(prop);\r\n  if (isObject(value)) {\r\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\r\n  }\r\n  return value;\r\n}\r\nfunction _resolveArray(prop, value, target, isIndexable) {\r\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\r\n  if (defined(_context.index) && isIndexable(prop)) {\r\n    value = value[_context.index % value.length];\r\n  } else if (isObject(value[0])) {\r\n    const arr = value;\r\n    const scopes = _proxy._scopes.filter(s => s !== arr);\r\n    value = [];\r\n    for (const item of arr) {\r\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\r\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\r\n    }\r\n  }\r\n  return value;\r\n}\r\nfunction resolveFallback(fallback, prop, value) {\r\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\r\n}\r\nconst getScope = (key, parent) => key === true ? parent\r\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\r\nfunction addScopes(set, parentScopes, key, parentFallback) {\r\n  for (const parent of parentScopes) {\r\n    const scope = getScope(key, parent);\r\n    if (scope) {\r\n      set.add(scope);\r\n      const fallback = resolveFallback(scope._fallback, key, scope);\r\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\r\n        return fallback;\r\n      }\r\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\r\n      return null;\r\n    }\r\n  }\r\n  return false;\r\n}\r\nfunction createSubResolver(parentScopes, resolver, prop, value) {\r\n  const rootScopes = resolver._rootScopes;\r\n  const fallback = resolveFallback(resolver._fallback, prop, value);\r\n  const allScopes = [...parentScopes, ...rootScopes];\r\n  const set = new Set();\r\n  set.add(value);\r\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop);\r\n  if (key === null) {\r\n    return false;\r\n  }\r\n  if (defined(fallback) && fallback !== prop) {\r\n    key = addScopesFromKey(set, allScopes, fallback, key);\r\n    if (key === null) {\r\n      return false;\r\n    }\r\n  }\r\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\r\n    () => subGetTarget(resolver, prop, value));\r\n}\r\nfunction addScopesFromKey(set, allScopes, key, fallback) {\r\n  while (key) {\r\n    key = addScopes(set, allScopes, key, fallback);\r\n  }\r\n  return key;\r\n}\r\nfunction subGetTarget(resolver, prop, value) {\r\n  const parent = resolver._getTarget();\r\n  if (!(prop in parent)) {\r\n    parent[prop] = {};\r\n  }\r\n  const target = parent[prop];\r\n  if (isArray(target) && isObject(value)) {\r\n    return value;\r\n  }\r\n  return target;\r\n}\r\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\r\n  let value;\r\n  for (const prefix of prefixes) {\r\n    value = _resolve(readKey(prefix, prop), scopes);\r\n    if (defined(value)) {\r\n      return needsSubResolver(prop, value)\r\n        ? createSubResolver(scopes, proxy, prop, value)\r\n        : value;\r\n    }\r\n  }\r\n}\r\nfunction _resolve(key, scopes) {\r\n  for (const scope of scopes) {\r\n    if (!scope) {\r\n      continue;\r\n    }\r\n    const value = scope[key];\r\n    if (defined(value)) {\r\n      return value;\r\n    }\r\n  }\r\n}\r\nfunction getKeysFromAllScopes(target) {\r\n  let keys = target._keys;\r\n  if (!keys) {\r\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\r\n  }\r\n  return keys;\r\n}\r\nfunction resolveKeysFromAllScopes(scopes) {\r\n  const set = new Set();\r\n  for (const scope of scopes) {\r\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\r\n      set.add(key);\r\n    }\r\n  }\r\n  return Array.from(set);\r\n}\r\n\r\nconst EPSILON = Number.EPSILON || 1e-14;\r\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\r\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\r\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\r\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\r\n  const current = middlePoint;\r\n  const next = afterPoint.skip ? middlePoint : afterPoint;\r\n  const d01 = distanceBetweenPoints(current, previous);\r\n  const d12 = distanceBetweenPoints(next, current);\r\n  let s01 = d01 / (d01 + d12);\r\n  let s12 = d12 / (d01 + d12);\r\n  s01 = isNaN(s01) ? 0 : s01;\r\n  s12 = isNaN(s12) ? 0 : s12;\r\n  const fa = t * s01;\r\n  const fb = t * s12;\r\n  return {\r\n    previous: {\r\n      x: current.x - fa * (next.x - previous.x),\r\n      y: current.y - fa * (next.y - previous.y)\r\n    },\r\n    next: {\r\n      x: current.x + fb * (next.x - previous.x),\r\n      y: current.y + fb * (next.y - previous.y)\r\n    }\r\n  };\r\n}\r\nfunction monotoneAdjust(points, deltaK, mK) {\r\n  const pointsLen = points.length;\r\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\r\n  let pointAfter = getPoint(points, 0);\r\n  for (let i = 0; i < pointsLen - 1; ++i) {\r\n    pointCurrent = pointAfter;\r\n    pointAfter = getPoint(points, i + 1);\r\n    if (!pointCurrent || !pointAfter) {\r\n      continue;\r\n    }\r\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\r\n      mK[i] = mK[i + 1] = 0;\r\n      continue;\r\n    }\r\n    alphaK = mK[i] / deltaK[i];\r\n    betaK = mK[i + 1] / deltaK[i];\r\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\r\n    if (squaredMagnitude <= 9) {\r\n      continue;\r\n    }\r\n    tauK = 3 / Math.sqrt(squaredMagnitude);\r\n    mK[i] = alphaK * tauK * deltaK[i];\r\n    mK[i + 1] = betaK * tauK * deltaK[i];\r\n  }\r\n}\r\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\r\n  const valueAxis = getValueAxis(indexAxis);\r\n  const pointsLen = points.length;\r\n  let delta, pointBefore, pointCurrent;\r\n  let pointAfter = getPoint(points, 0);\r\n  for (let i = 0; i < pointsLen; ++i) {\r\n    pointBefore = pointCurrent;\r\n    pointCurrent = pointAfter;\r\n    pointAfter = getPoint(points, i + 1);\r\n    if (!pointCurrent) {\r\n      continue;\r\n    }\r\n    const iPixel = pointCurrent[indexAxis];\r\n    const vPixel = pointCurrent[valueAxis];\r\n    if (pointBefore) {\r\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\r\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\r\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\r\n    }\r\n    if (pointAfter) {\r\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\r\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\r\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\r\n    }\r\n  }\r\n}\r\nfunction splineCurveMonotone(points, indexAxis = 'x') {\r\n  const valueAxis = getValueAxis(indexAxis);\r\n  const pointsLen = points.length;\r\n  const deltaK = Array(pointsLen).fill(0);\r\n  const mK = Array(pointsLen);\r\n  let i, pointBefore, pointCurrent;\r\n  let pointAfter = getPoint(points, 0);\r\n  for (i = 0; i < pointsLen; ++i) {\r\n    pointBefore = pointCurrent;\r\n    pointCurrent = pointAfter;\r\n    pointAfter = getPoint(points, i + 1);\r\n    if (!pointCurrent) {\r\n      continue;\r\n    }\r\n    if (pointAfter) {\r\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\r\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\r\n    }\r\n    mK[i] = !pointBefore ? deltaK[i]\r\n      : !pointAfter ? deltaK[i - 1]\r\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\r\n      : (deltaK[i - 1] + deltaK[i]) / 2;\r\n  }\r\n  monotoneAdjust(points, deltaK, mK);\r\n  monotoneCompute(points, mK, indexAxis);\r\n}\r\nfunction capControlPoint(pt, min, max) {\r\n  return Math.max(Math.min(pt, max), min);\r\n}\r\nfunction capBezierPoints(points, area) {\r\n  let i, ilen, point, inArea, inAreaPrev;\r\n  let inAreaNext = _isPointInArea(points[0], area);\r\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n    inAreaPrev = inArea;\r\n    inArea = inAreaNext;\r\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\r\n    if (!inArea) {\r\n      continue;\r\n    }\r\n    point = points[i];\r\n    if (inAreaPrev) {\r\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\r\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\r\n    }\r\n    if (inAreaNext) {\r\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\r\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\r\n    }\r\n  }\r\n}\r\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\r\n  let i, ilen, point, controlPoints;\r\n  if (options.spanGaps) {\r\n    points = points.filter((pt) => !pt.skip);\r\n  }\r\n  if (options.cubicInterpolationMode === 'monotone') {\r\n    splineCurveMonotone(points, indexAxis);\r\n  } else {\r\n    let prev = loop ? points[points.length - 1] : points[0];\r\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n      point = points[i];\r\n      controlPoints = splineCurve(\r\n        prev,\r\n        point,\r\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\r\n        options.tension\r\n      );\r\n      point.cp1x = controlPoints.previous.x;\r\n      point.cp1y = controlPoints.previous.y;\r\n      point.cp2x = controlPoints.next.x;\r\n      point.cp2y = controlPoints.next.y;\r\n      prev = point;\r\n    }\r\n  }\r\n  if (options.capBezierPoints) {\r\n    capBezierPoints(points, area);\r\n  }\r\n}\r\n\r\nconst atEdge = (t) => t === 0 || t === 1;\r\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\r\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\r\nconst effects = {\r\n  linear: t => t,\r\n  easeInQuad: t => t * t,\r\n  easeOutQuad: t => -t * (t - 2),\r\n  easeInOutQuad: t => ((t /= 0.5) < 1)\r\n    ? 0.5 * t * t\r\n    : -0.5 * ((--t) * (t - 2) - 1),\r\n  easeInCubic: t => t * t * t,\r\n  easeOutCubic: t => (t -= 1) * t * t + 1,\r\n  easeInOutCubic: t => ((t /= 0.5) < 1)\r\n    ? 0.5 * t * t * t\r\n    : 0.5 * ((t -= 2) * t * t + 2),\r\n  easeInQuart: t => t * t * t * t,\r\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\r\n  easeInOutQuart: t => ((t /= 0.5) < 1)\r\n    ? 0.5 * t * t * t * t\r\n    : -0.5 * ((t -= 2) * t * t * t - 2),\r\n  easeInQuint: t => t * t * t * t * t,\r\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\r\n  easeInOutQuint: t => ((t /= 0.5) < 1)\r\n    ? 0.5 * t * t * t * t * t\r\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\r\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\r\n  easeOutSine: t => Math.sin(t * HALF_PI),\r\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\r\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\r\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\r\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\r\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\r\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\r\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\r\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\r\n  easeInOutCirc: t => ((t /= 0.5) < 1)\r\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\r\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\r\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\r\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\r\n  easeInOutElastic(t) {\r\n    const s = 0.1125;\r\n    const p = 0.45;\r\n    return atEdge(t) ? t :\r\n      t < 0.5\r\n        ? 0.5 * elasticIn(t * 2, s, p)\r\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\r\n  },\r\n  easeInBack(t) {\r\n    const s = 1.70158;\r\n    return t * t * ((s + 1) * t - s);\r\n  },\r\n  easeOutBack(t) {\r\n    const s = 1.70158;\r\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\r\n  },\r\n  easeInOutBack(t) {\r\n    let s = 1.70158;\r\n    if ((t /= 0.5) < 1) {\r\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\r\n    }\r\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\r\n  },\r\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\r\n  easeOutBounce(t) {\r\n    const m = 7.5625;\r\n    const d = 2.75;\r\n    if (t < (1 / d)) {\r\n      return m * t * t;\r\n    }\r\n    if (t < (2 / d)) {\r\n      return m * (t -= (1.5 / d)) * t + 0.75;\r\n    }\r\n    if (t < (2.5 / d)) {\r\n      return m * (t -= (2.25 / d)) * t + 0.9375;\r\n    }\r\n    return m * (t -= (2.625 / d)) * t + 0.984375;\r\n  },\r\n  easeInOutBounce: t => (t < 0.5)\r\n    ? effects.easeInBounce(t * 2) * 0.5\r\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\r\n};\r\n\r\nfunction _pointInLine(p1, p2, t, mode) {\r\n  return {\r\n    x: p1.x + t * (p2.x - p1.x),\r\n    y: p1.y + t * (p2.y - p1.y)\r\n  };\r\n}\r\nfunction _steppedInterpolation(p1, p2, t, mode) {\r\n  return {\r\n    x: p1.x + t * (p2.x - p1.x),\r\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\r\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\r\n    : t > 0 ? p2.y : p1.y\r\n  };\r\n}\r\nfunction _bezierInterpolation(p1, p2, t, mode) {\r\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\r\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\r\n  const a = _pointInLine(p1, cp1, t);\r\n  const b = _pointInLine(cp1, cp2, t);\r\n  const c = _pointInLine(cp2, p2, t);\r\n  const d = _pointInLine(a, b, t);\r\n  const e = _pointInLine(b, c, t);\r\n  return _pointInLine(d, e, t);\r\n}\r\n\r\nconst intlCache = new Map();\r\nfunction getNumberFormat(locale, options) {\r\n  options = options || {};\r\n  const cacheKey = locale + JSON.stringify(options);\r\n  let formatter = intlCache.get(cacheKey);\r\n  if (!formatter) {\r\n    formatter = new Intl.NumberFormat(locale, options);\r\n    intlCache.set(cacheKey, formatter);\r\n  }\r\n  return formatter;\r\n}\r\nfunction formatNumber(num, locale, options) {\r\n  return getNumberFormat(locale, options).format(num);\r\n}\r\n\r\nconst getRightToLeftAdapter = function(rectX, width) {\r\n  return {\r\n    x(x) {\r\n      return rectX + rectX + width - x;\r\n    },\r\n    setWidth(w) {\r\n      width = w;\r\n    },\r\n    textAlign(align) {\r\n      if (align === 'center') {\r\n        return align;\r\n      }\r\n      return align === 'right' ? 'left' : 'right';\r\n    },\r\n    xPlus(x, value) {\r\n      return x - value;\r\n    },\r\n    leftForLtr(x, itemWidth) {\r\n      return x - itemWidth;\r\n    },\r\n  };\r\n};\r\nconst getLeftToRightAdapter = function() {\r\n  return {\r\n    x(x) {\r\n      return x;\r\n    },\r\n    setWidth(w) {\r\n    },\r\n    textAlign(align) {\r\n      return align;\r\n    },\r\n    xPlus(x, value) {\r\n      return x + value;\r\n    },\r\n    leftForLtr(x, _itemWidth) {\r\n      return x;\r\n    },\r\n  };\r\n};\r\nfunction getRtlAdapter(rtl, rectX, width) {\r\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\r\n}\r\nfunction overrideTextDirection(ctx, direction) {\r\n  let style, original;\r\n  if (direction === 'ltr' || direction === 'rtl') {\r\n    style = ctx.canvas.style;\r\n    original = [\r\n      style.getPropertyValue('direction'),\r\n      style.getPropertyPriority('direction'),\r\n    ];\r\n    style.setProperty('direction', direction, 'important');\r\n    ctx.prevTextDirection = original;\r\n  }\r\n}\r\nfunction restoreTextDirection(ctx, original) {\r\n  if (original !== undefined) {\r\n    delete ctx.prevTextDirection;\r\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\r\n  }\r\n}\r\n\r\nfunction propertyFn(property) {\r\n  if (property === 'angle') {\r\n    return {\r\n      between: _angleBetween,\r\n      compare: _angleDiff,\r\n      normalize: _normalizeAngle,\r\n    };\r\n  }\r\n  return {\r\n    between: (n, s, e) => n >= Math.min(s, e) && n <= Math.max(e, s),\r\n    compare: (a, b) => a - b,\r\n    normalize: x => x\r\n  };\r\n}\r\nfunction normalizeSegment({start, end, count, loop, style}) {\r\n  return {\r\n    start: start % count,\r\n    end: end % count,\r\n    loop: loop && (end - start + 1) % count === 0,\r\n    style\r\n  };\r\n}\r\nfunction getSegment(segment, points, bounds) {\r\n  const {property, start: startBound, end: endBound} = bounds;\r\n  const {between, normalize} = propertyFn(property);\r\n  const count = points.length;\r\n  let {start, end, loop} = segment;\r\n  let i, ilen;\r\n  if (loop) {\r\n    start += count;\r\n    end += count;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\r\n        break;\r\n      }\r\n      start--;\r\n      end--;\r\n    }\r\n    start %= count;\r\n    end %= count;\r\n  }\r\n  if (end < start) {\r\n    end += count;\r\n  }\r\n  return {start, end, loop, style: segment.style};\r\n}\r\nfunction _boundSegment(segment, points, bounds) {\r\n  if (!bounds) {\r\n    return [segment];\r\n  }\r\n  const {property, start: startBound, end: endBound} = bounds;\r\n  const count = points.length;\r\n  const {compare, between, normalize} = propertyFn(property);\r\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\r\n  const result = [];\r\n  let inside = false;\r\n  let subStart = null;\r\n  let value, point, prevValue;\r\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\r\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\r\n  const shouldStart = () => inside || startIsBefore();\r\n  const shouldStop = () => !inside || endIsBefore();\r\n  for (let i = start, prev = start; i <= end; ++i) {\r\n    point = points[i % count];\r\n    if (point.skip) {\r\n      continue;\r\n    }\r\n    value = normalize(point[property]);\r\n    if (value === prevValue) {\r\n      continue;\r\n    }\r\n    inside = between(value, startBound, endBound);\r\n    if (subStart === null && shouldStart()) {\r\n      subStart = compare(value, startBound) === 0 ? i : prev;\r\n    }\r\n    if (subStart !== null && shouldStop()) {\r\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\r\n      subStart = null;\r\n    }\r\n    prev = i;\r\n    prevValue = value;\r\n  }\r\n  if (subStart !== null) {\r\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\r\n  }\r\n  return result;\r\n}\r\nfunction _boundSegments(line, bounds) {\r\n  const result = [];\r\n  const segments = line.segments;\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const sub = _boundSegment(segments[i], line.points, bounds);\r\n    if (sub.length) {\r\n      result.push(...sub);\r\n    }\r\n  }\r\n  return result;\r\n}\r\nfunction findStartAndEnd(points, count, loop, spanGaps) {\r\n  let start = 0;\r\n  let end = count - 1;\r\n  if (loop && !spanGaps) {\r\n    while (start < count && !points[start].skip) {\r\n      start++;\r\n    }\r\n  }\r\n  while (start < count && points[start].skip) {\r\n    start++;\r\n  }\r\n  start %= count;\r\n  if (loop) {\r\n    end += start;\r\n  }\r\n  while (end > start && points[end % count].skip) {\r\n    end--;\r\n  }\r\n  end %= count;\r\n  return {start, end};\r\n}\r\nfunction solidSegments(points, start, max, loop) {\r\n  const count = points.length;\r\n  const result = [];\r\n  let last = start;\r\n  let prev = points[start];\r\n  let end;\r\n  for (end = start + 1; end <= max; ++end) {\r\n    const cur = points[end % count];\r\n    if (cur.skip || cur.stop) {\r\n      if (!prev.skip) {\r\n        loop = false;\r\n        result.push({start: start % count, end: (end - 1) % count, loop});\r\n        start = last = cur.stop ? end : null;\r\n      }\r\n    } else {\r\n      last = end;\r\n      if (prev.skip) {\r\n        start = end;\r\n      }\r\n    }\r\n    prev = cur;\r\n  }\r\n  if (last !== null) {\r\n    result.push({start: start % count, end: last % count, loop});\r\n  }\r\n  return result;\r\n}\r\nfunction _computeSegments(line, segmentOptions) {\r\n  const points = line.points;\r\n  const spanGaps = line.options.spanGaps;\r\n  const count = points.length;\r\n  if (!count) {\r\n    return [];\r\n  }\r\n  const loop = !!line._loop;\r\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\r\n  if (spanGaps === true) {\r\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\r\n  }\r\n  const max = end < start ? end + count : end;\r\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\r\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\r\n}\r\nfunction splitByStyles(line, segments, points, segmentOptions) {\r\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\r\n    return segments;\r\n  }\r\n  return doSplitByStyles(line, segments, points, segmentOptions);\r\n}\r\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\r\n  const baseStyle = readStyle(line.options);\r\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\r\n  const count = points.length;\r\n  const result = [];\r\n  let prevStyle = baseStyle;\r\n  let start = segments[0].start;\r\n  let i = start;\r\n  function addStyle(s, e, l, st) {\r\n    const dir = spanGaps ? -1 : 1;\r\n    if (s === e) {\r\n      return;\r\n    }\r\n    s += count;\r\n    while (points[s % count].skip) {\r\n      s -= dir;\r\n    }\r\n    while (points[e % count].skip) {\r\n      e += dir;\r\n    }\r\n    if (s % count !== e % count) {\r\n      result.push({start: s % count, end: e % count, loop: l, style: st});\r\n      prevStyle = st;\r\n      start = e % count;\r\n    }\r\n  }\r\n  for (const segment of segments) {\r\n    start = spanGaps ? start : segment.start;\r\n    let prev = points[start % count];\r\n    let style;\r\n    for (i = start + 1; i <= segment.end; i++) {\r\n      const pt = points[i % count];\r\n      style = readStyle(segmentOptions.setContext({\r\n        type: 'segment',\r\n        p0: prev,\r\n        p1: pt,\r\n        p0DataIndex: (i - 1) % count,\r\n        p1DataIndex: i % count,\r\n        datasetIndex\r\n      }));\r\n      if (styleChanged(style, prevStyle)) {\r\n        addStyle(start, i - 1, segment.loop, prevStyle);\r\n      }\r\n      prev = pt;\r\n      prevStyle = style;\r\n    }\r\n    if (start < i - 1) {\r\n      addStyle(start, i - 1, segment.loop, prevStyle);\r\n    }\r\n  }\r\n  return result;\r\n}\r\nfunction readStyle(options) {\r\n  return {\r\n    backgroundColor: options.backgroundColor,\r\n    borderCapStyle: options.borderCapStyle,\r\n    borderDash: options.borderDash,\r\n    borderDashOffset: options.borderDashOffset,\r\n    borderJoinStyle: options.borderJoinStyle,\r\n    borderWidth: options.borderWidth,\r\n    borderColor: options.borderColor\r\n  };\r\n}\r\nfunction styleChanged(style, prevStyle) {\r\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\r\n}\r\n\r\nvar helpers = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\neasingEffects: effects,\r\ncolor: color,\r\ngetHoverColor: getHoverColor,\r\nnoop: noop,\r\nuid: uid,\r\nisNullOrUndef: isNullOrUndef,\r\nisArray: isArray,\r\nisObject: isObject,\r\nisFinite: isNumberFinite,\r\nfiniteOrDefault: finiteOrDefault,\r\nvalueOrDefault: valueOrDefault,\r\ntoPercentage: toPercentage,\r\ntoDimension: toDimension,\r\ncallback: callback,\r\neach: each,\r\n_elementsEqual: _elementsEqual,\r\nclone: clone,\r\n_merger: _merger,\r\nmerge: merge,\r\nmergeIf: mergeIf,\r\n_mergerIf: _mergerIf,\r\n_deprecated: _deprecated,\r\nresolveObjectKey: resolveObjectKey,\r\n_capitalize: _capitalize,\r\ndefined: defined,\r\nisFunction: isFunction,\r\nsetsEqual: setsEqual,\r\ntoFontString: toFontString,\r\n_measureText: _measureText,\r\n_longestText: _longestText,\r\n_alignPixel: _alignPixel,\r\nclearCanvas: clearCanvas,\r\ndrawPoint: drawPoint,\r\n_isPointInArea: _isPointInArea,\r\nclipArea: clipArea,\r\nunclipArea: unclipArea,\r\n_steppedLineTo: _steppedLineTo,\r\n_bezierCurveTo: _bezierCurveTo,\r\nrenderText: renderText,\r\naddRoundedRectPath: addRoundedRectPath,\r\n_lookup: _lookup,\r\n_lookupByKey: _lookupByKey,\r\n_rlookupByKey: _rlookupByKey,\r\n_filterBetween: _filterBetween,\r\nlistenArrayEvents: listenArrayEvents,\r\nunlistenArrayEvents: unlistenArrayEvents,\r\n_arrayUnique: _arrayUnique,\r\n_createResolver: _createResolver,\r\n_attachContext: _attachContext,\r\n_descriptors: _descriptors,\r\nsplineCurve: splineCurve,\r\nsplineCurveMonotone: splineCurveMonotone,\r\n_updateBezierControlPoints: _updateBezierControlPoints,\r\n_isDomSupported: _isDomSupported,\r\n_getParentNode: _getParentNode,\r\ngetStyle: getStyle,\r\ngetRelativePosition: getRelativePosition$1,\r\ngetMaximumSize: getMaximumSize,\r\nretinaScale: retinaScale,\r\nsupportsEventListenerOptions: supportsEventListenerOptions,\r\nreadUsedSize: readUsedSize,\r\nfontString: fontString,\r\nrequestAnimFrame: requestAnimFrame,\r\nthrottled: throttled,\r\ndebounce: debounce,\r\n_toLeftRightCenter: _toLeftRightCenter,\r\n_alignStartEnd: _alignStartEnd,\r\n_textX: _textX,\r\n_pointInLine: _pointInLine,\r\n_steppedInterpolation: _steppedInterpolation,\r\n_bezierInterpolation: _bezierInterpolation,\r\nformatNumber: formatNumber,\r\ntoLineHeight: toLineHeight,\r\n_readValueToProps: _readValueToProps,\r\ntoTRBL: toTRBL,\r\ntoTRBLCorners: toTRBLCorners,\r\ntoPadding: toPadding,\r\ntoFont: toFont,\r\nresolve: resolve,\r\n_addGrace: _addGrace,\r\nPI: PI,\r\nTAU: TAU,\r\nPITAU: PITAU,\r\nINFINITY: INFINITY,\r\nRAD_PER_DEG: RAD_PER_DEG,\r\nHALF_PI: HALF_PI,\r\nQUARTER_PI: QUARTER_PI,\r\nTWO_THIRDS_PI: TWO_THIRDS_PI,\r\nlog10: log10,\r\nsign: sign,\r\nniceNum: niceNum,\r\n_factorize: _factorize,\r\nisNumber: isNumber,\r\nalmostEquals: almostEquals,\r\nalmostWhole: almostWhole,\r\n_setMinAndMaxByKey: _setMinAndMaxByKey,\r\ntoRadians: toRadians,\r\ntoDegrees: toDegrees,\r\n_decimalPlaces: _decimalPlaces,\r\ngetAngleFromPoint: getAngleFromPoint,\r\ndistanceBetweenPoints: distanceBetweenPoints,\r\n_angleDiff: _angleDiff,\r\n_normalizeAngle: _normalizeAngle,\r\n_angleBetween: _angleBetween,\r\n_limitValue: _limitValue,\r\n_int16Range: _int16Range,\r\ngetRtlAdapter: getRtlAdapter,\r\noverrideTextDirection: overrideTextDirection,\r\nrestoreTextDirection: restoreTextDirection,\r\n_boundSegment: _boundSegment,\r\n_boundSegments: _boundSegments,\r\n_computeSegments: _computeSegments\r\n});\r\n\r\nclass BasePlatform {\r\n  acquireContext(canvas, aspectRatio) {}\r\n  releaseContext(context) {\r\n    return false;\r\n  }\r\n  addEventListener(chart, type, listener) {}\r\n  removeEventListener(chart, type, listener) {}\r\n  getDevicePixelRatio() {\r\n    return 1;\r\n  }\r\n  getMaximumSize(element, width, height, aspectRatio) {\r\n    width = Math.max(0, width || element.width);\r\n    height = height || element.height;\r\n    return {\r\n      width,\r\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\r\n    };\r\n  }\r\n  isAttached(canvas) {\r\n    return true;\r\n  }\r\n}\r\n\r\nclass BasicPlatform extends BasePlatform {\r\n  acquireContext(item) {\r\n    return item && item.getContext && item.getContext('2d') || null;\r\n  }\r\n}\r\n\r\nconst EXPANDO_KEY = '$chartjs';\r\nconst EVENT_TYPES = {\r\n  touchstart: 'mousedown',\r\n  touchmove: 'mousemove',\r\n  touchend: 'mouseup',\r\n  pointerenter: 'mouseenter',\r\n  pointerdown: 'mousedown',\r\n  pointermove: 'mousemove',\r\n  pointerup: 'mouseup',\r\n  pointerleave: 'mouseout',\r\n  pointerout: 'mouseout'\r\n};\r\nconst isNullOrEmpty = value => value === null || value === '';\r\nfunction initCanvas(canvas, aspectRatio) {\r\n  const style = canvas.style;\r\n  const renderHeight = canvas.getAttribute('height');\r\n  const renderWidth = canvas.getAttribute('width');\r\n  canvas[EXPANDO_KEY] = {\r\n    initial: {\r\n      height: renderHeight,\r\n      width: renderWidth,\r\n      style: {\r\n        display: style.display,\r\n        height: style.height,\r\n        width: style.width\r\n      }\r\n    }\r\n  };\r\n  style.display = style.display || 'block';\r\n  style.boxSizing = style.boxSizing || 'border-box';\r\n  if (isNullOrEmpty(renderWidth)) {\r\n    const displayWidth = readUsedSize(canvas, 'width');\r\n    if (displayWidth !== undefined) {\r\n      canvas.width = displayWidth;\r\n    }\r\n  }\r\n  if (isNullOrEmpty(renderHeight)) {\r\n    if (canvas.style.height === '') {\r\n      canvas.height = canvas.width / (aspectRatio || 2);\r\n    } else {\r\n      const displayHeight = readUsedSize(canvas, 'height');\r\n      if (displayHeight !== undefined) {\r\n        canvas.height = displayHeight;\r\n      }\r\n    }\r\n  }\r\n  return canvas;\r\n}\r\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\r\nfunction addListener(node, type, listener) {\r\n  node.addEventListener(type, listener, eventListenerOptions);\r\n}\r\nfunction removeListener(chart, type, listener) {\r\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\r\n}\r\nfunction fromNativeEvent(event, chart) {\r\n  const type = EVENT_TYPES[event.type] || event.type;\r\n  const {x, y} = getRelativePosition$1(event, chart);\r\n  return {\r\n    type,\r\n    chart,\r\n    native: event,\r\n    x: x !== undefined ? x : null,\r\n    y: y !== undefined ? y : null,\r\n  };\r\n}\r\nfunction createAttachObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const observer = new MutationObserver(entries => {\r\n    for (const entry of entries) {\r\n      for (const node of entry.addedNodes) {\r\n        if (node === canvas || node.contains(canvas)) {\r\n          return listener();\r\n        }\r\n      }\r\n    }\r\n  });\r\n  observer.observe(document, {childList: true, subtree: true});\r\n  return observer;\r\n}\r\nfunction createDetachObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const observer = new MutationObserver(entries => {\r\n    for (const entry of entries) {\r\n      for (const node of entry.removedNodes) {\r\n        if (node === canvas || node.contains(canvas)) {\r\n          return listener();\r\n        }\r\n      }\r\n    }\r\n  });\r\n  observer.observe(document, {childList: true, subtree: true});\r\n  return observer;\r\n}\r\nconst drpListeningCharts = new Map();\r\nlet oldDevicePixelRatio = 0;\r\nfunction onWindowResize() {\r\n  const dpr = window.devicePixelRatio;\r\n  if (dpr === oldDevicePixelRatio) {\r\n    return;\r\n  }\r\n  oldDevicePixelRatio = dpr;\r\n  drpListeningCharts.forEach((resize, chart) => {\r\n    if (chart.currentDevicePixelRatio !== dpr) {\r\n      resize();\r\n    }\r\n  });\r\n}\r\nfunction listenDevicePixelRatioChanges(chart, resize) {\r\n  if (!drpListeningCharts.size) {\r\n    window.addEventListener('resize', onWindowResize);\r\n  }\r\n  drpListeningCharts.set(chart, resize);\r\n}\r\nfunction unlistenDevicePixelRatioChanges(chart) {\r\n  drpListeningCharts.delete(chart);\r\n  if (!drpListeningCharts.size) {\r\n    window.removeEventListener('resize', onWindowResize);\r\n  }\r\n}\r\nfunction createResizeObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const container = canvas && _getParentNode(canvas);\r\n  if (!container) {\r\n    return;\r\n  }\r\n  const resize = throttled((width, height) => {\r\n    const w = container.clientWidth;\r\n    listener(width, height);\r\n    if (w < container.clientWidth) {\r\n      listener();\r\n    }\r\n  }, window);\r\n  const observer = new ResizeObserver(entries => {\r\n    const entry = entries[0];\r\n    const width = entry.contentRect.width;\r\n    const height = entry.contentRect.height;\r\n    if (width === 0 && height === 0) {\r\n      return;\r\n    }\r\n    resize(width, height);\r\n  });\r\n  observer.observe(container);\r\n  listenDevicePixelRatioChanges(chart, resize);\r\n  return observer;\r\n}\r\nfunction releaseObserver(chart, type, observer) {\r\n  if (observer) {\r\n    observer.disconnect();\r\n  }\r\n  if (type === 'resize') {\r\n    unlistenDevicePixelRatioChanges(chart);\r\n  }\r\n}\r\nfunction createProxyAndListen(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const proxy = throttled((event) => {\r\n    if (chart.ctx !== null) {\r\n      listener(fromNativeEvent(event, chart));\r\n    }\r\n  }, chart, (args) => {\r\n    const event = args[0];\r\n    return [event, event.offsetX, event.offsetY];\r\n  });\r\n  addListener(canvas, type, proxy);\r\n  return proxy;\r\n}\r\nclass DomPlatform extends BasePlatform {\r\n  acquireContext(canvas, aspectRatio) {\r\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\r\n    if (context && context.canvas === canvas) {\r\n      initCanvas(canvas, aspectRatio);\r\n      return context;\r\n    }\r\n    return null;\r\n  }\r\n  releaseContext(context) {\r\n    const canvas = context.canvas;\r\n    if (!canvas[EXPANDO_KEY]) {\r\n      return false;\r\n    }\r\n    const initial = canvas[EXPANDO_KEY].initial;\r\n    ['height', 'width'].forEach((prop) => {\r\n      const value = initial[prop];\r\n      if (isNullOrUndef(value)) {\r\n        canvas.removeAttribute(prop);\r\n      } else {\r\n        canvas.setAttribute(prop, value);\r\n      }\r\n    });\r\n    const style = initial.style || {};\r\n    Object.keys(style).forEach((key) => {\r\n      canvas.style[key] = style[key];\r\n    });\r\n    canvas.width = canvas.width;\r\n    delete canvas[EXPANDO_KEY];\r\n    return true;\r\n  }\r\n  addEventListener(chart, type, listener) {\r\n    this.removeEventListener(chart, type);\r\n    const proxies = chart.$proxies || (chart.$proxies = {});\r\n    const handlers = {\r\n      attach: createAttachObserver,\r\n      detach: createDetachObserver,\r\n      resize: createResizeObserver\r\n    };\r\n    const handler = handlers[type] || createProxyAndListen;\r\n    proxies[type] = handler(chart, type, listener);\r\n  }\r\n  removeEventListener(chart, type) {\r\n    const proxies = chart.$proxies || (chart.$proxies = {});\r\n    const proxy = proxies[type];\r\n    if (!proxy) {\r\n      return;\r\n    }\r\n    const handlers = {\r\n      attach: releaseObserver,\r\n      detach: releaseObserver,\r\n      resize: releaseObserver\r\n    };\r\n    const handler = handlers[type] || removeListener;\r\n    handler(chart, type, proxy);\r\n    proxies[type] = undefined;\r\n  }\r\n  getDevicePixelRatio() {\r\n    return window.devicePixelRatio;\r\n  }\r\n  getMaximumSize(canvas, width, height, aspectRatio) {\r\n    return getMaximumSize(canvas, width, height, aspectRatio);\r\n  }\r\n  isAttached(canvas) {\r\n    const container = _getParentNode(canvas);\r\n    return !!(container && container.isConnected);\r\n  }\r\n}\r\n\r\nfunction _detectPlatform(canvas) {\r\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\r\n    return BasicPlatform;\r\n  }\r\n  return DomPlatform;\r\n}\r\n\r\nvar platforms = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\n_detectPlatform: _detectPlatform,\r\nBasePlatform: BasePlatform,\r\nBasicPlatform: BasicPlatform,\r\nDomPlatform: DomPlatform\r\n});\r\n\r\nconst transparent = 'transparent';\r\nconst interpolators = {\r\n  boolean(from, to, factor) {\r\n    return factor > 0.5 ? to : from;\r\n  },\r\n  color(from, to, factor) {\r\n    const c0 = color(from || transparent);\r\n    const c1 = c0.valid && color(to || transparent);\r\n    return c1 && c1.valid\r\n      ? c1.mix(c0, factor).hexString()\r\n      : to;\r\n  },\r\n  number(from, to, factor) {\r\n    return from + (to - from) * factor;\r\n  }\r\n};\r\nclass Animation {\r\n  constructor(cfg, target, prop, to) {\r\n    const currentValue = target[prop];\r\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\r\n    const from = resolve([cfg.from, currentValue, to]);\r\n    this._active = true;\r\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\r\n    this._easing = effects[cfg.easing] || effects.linear;\r\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\r\n    this._duration = this._total = Math.floor(cfg.duration);\r\n    this._loop = !!cfg.loop;\r\n    this._target = target;\r\n    this._prop = prop;\r\n    this._from = from;\r\n    this._to = to;\r\n    this._promises = undefined;\r\n  }\r\n  active() {\r\n    return this._active;\r\n  }\r\n  update(cfg, to, date) {\r\n    if (this._active) {\r\n      this._notify(false);\r\n      const currentValue = this._target[this._prop];\r\n      const elapsed = date - this._start;\r\n      const remain = this._duration - elapsed;\r\n      this._start = date;\r\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\r\n      this._total += elapsed;\r\n      this._loop = !!cfg.loop;\r\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\r\n      this._from = resolve([cfg.from, currentValue, to]);\r\n    }\r\n  }\r\n  cancel() {\r\n    if (this._active) {\r\n      this.tick(Date.now());\r\n      this._active = false;\r\n      this._notify(false);\r\n    }\r\n  }\r\n  tick(date) {\r\n    const elapsed = date - this._start;\r\n    const duration = this._duration;\r\n    const prop = this._prop;\r\n    const from = this._from;\r\n    const loop = this._loop;\r\n    const to = this._to;\r\n    let factor;\r\n    this._active = from !== to && (loop || (elapsed < duration));\r\n    if (!this._active) {\r\n      this._target[prop] = to;\r\n      this._notify(true);\r\n      return;\r\n    }\r\n    if (elapsed < 0) {\r\n      this._target[prop] = from;\r\n      return;\r\n    }\r\n    factor = (elapsed / duration) % 2;\r\n    factor = loop && factor > 1 ? 2 - factor : factor;\r\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\r\n    this._target[prop] = this._fn(from, to, factor);\r\n  }\r\n  wait() {\r\n    const promises = this._promises || (this._promises = []);\r\n    return new Promise((res, rej) => {\r\n      promises.push({res, rej});\r\n    });\r\n  }\r\n  _notify(resolved) {\r\n    const method = resolved ? 'res' : 'rej';\r\n    const promises = this._promises || [];\r\n    for (let i = 0; i < promises.length; i++) {\r\n      promises[i][method]();\r\n    }\r\n  }\r\n}\r\n\r\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\r\nconst colors = ['color', 'borderColor', 'backgroundColor'];\r\ndefaults.set('animation', {\r\n  delay: undefined,\r\n  duration: 1000,\r\n  easing: 'easeOutQuart',\r\n  fn: undefined,\r\n  from: undefined,\r\n  loop: undefined,\r\n  to: undefined,\r\n  type: undefined,\r\n});\r\nconst animationOptions = Object.keys(defaults.animation);\r\ndefaults.describe('animation', {\r\n  _fallback: false,\r\n  _indexable: false,\r\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\r\n});\r\ndefaults.set('animations', {\r\n  colors: {\r\n    type: 'color',\r\n    properties: colors\r\n  },\r\n  numbers: {\r\n    type: 'number',\r\n    properties: numbers\r\n  },\r\n});\r\ndefaults.describe('animations', {\r\n  _fallback: 'animation',\r\n});\r\ndefaults.set('transitions', {\r\n  active: {\r\n    animation: {\r\n      duration: 400\r\n    }\r\n  },\r\n  resize: {\r\n    animation: {\r\n      duration: 0\r\n    }\r\n  },\r\n  show: {\r\n    animations: {\r\n      colors: {\r\n        from: 'transparent'\r\n      },\r\n      visible: {\r\n        type: 'boolean',\r\n        duration: 0\r\n      },\r\n    }\r\n  },\r\n  hide: {\r\n    animations: {\r\n      colors: {\r\n        to: 'transparent'\r\n      },\r\n      visible: {\r\n        type: 'boolean',\r\n        easing: 'linear',\r\n        fn: v => v | 0\r\n      },\r\n    }\r\n  }\r\n});\r\nclass Animations {\r\n  constructor(chart, config) {\r\n    this._chart = chart;\r\n    this._properties = new Map();\r\n    this.configure(config);\r\n  }\r\n  configure(config) {\r\n    if (!isObject(config)) {\r\n      return;\r\n    }\r\n    const animatedProps = this._properties;\r\n    Object.getOwnPropertyNames(config).forEach(key => {\r\n      const cfg = config[key];\r\n      if (!isObject(cfg)) {\r\n        return;\r\n      }\r\n      const resolved = {};\r\n      for (const option of animationOptions) {\r\n        resolved[option] = cfg[option];\r\n      }\r\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\r\n        if (prop === key || !animatedProps.has(prop)) {\r\n          animatedProps.set(prop, resolved);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  _animateOptions(target, values) {\r\n    const newOptions = values.options;\r\n    const options = resolveTargetOptions(target, newOptions);\r\n    if (!options) {\r\n      return [];\r\n    }\r\n    const animations = this._createAnimations(options, newOptions);\r\n    if (newOptions.$shared) {\r\n      awaitAll(target.options.$animations, newOptions).then(() => {\r\n        target.options = newOptions;\r\n      }, () => {\r\n      });\r\n    }\r\n    return animations;\r\n  }\r\n  _createAnimations(target, values) {\r\n    const animatedProps = this._properties;\r\n    const animations = [];\r\n    const running = target.$animations || (target.$animations = {});\r\n    const props = Object.keys(values);\r\n    const date = Date.now();\r\n    let i;\r\n    for (i = props.length - 1; i >= 0; --i) {\r\n      const prop = props[i];\r\n      if (prop.charAt(0) === '$') {\r\n        continue;\r\n      }\r\n      if (prop === 'options') {\r\n        animations.push(...this._animateOptions(target, values));\r\n        continue;\r\n      }\r\n      const value = values[prop];\r\n      let animation = running[prop];\r\n      const cfg = animatedProps.get(prop);\r\n      if (animation) {\r\n        if (cfg && animation.active()) {\r\n          animation.update(cfg, value, date);\r\n          continue;\r\n        } else {\r\n          animation.cancel();\r\n        }\r\n      }\r\n      if (!cfg || !cfg.duration) {\r\n        target[prop] = value;\r\n        continue;\r\n      }\r\n      running[prop] = animation = new Animation(cfg, target, prop, value);\r\n      animations.push(animation);\r\n    }\r\n    return animations;\r\n  }\r\n  update(target, values) {\r\n    if (this._properties.size === 0) {\r\n      Object.assign(target, values);\r\n      return;\r\n    }\r\n    const animations = this._createAnimations(target, values);\r\n    if (animations.length) {\r\n      animator.add(this._chart, animations);\r\n      return true;\r\n    }\r\n  }\r\n}\r\nfunction awaitAll(animations, properties) {\r\n  const running = [];\r\n  const keys = Object.keys(properties);\r\n  for (let i = 0; i < keys.length; i++) {\r\n    const anim = animations[keys[i]];\r\n    if (anim && anim.active()) {\r\n      running.push(anim.wait());\r\n    }\r\n  }\r\n  return Promise.all(running);\r\n}\r\nfunction resolveTargetOptions(target, newOptions) {\r\n  if (!newOptions) {\r\n    return;\r\n  }\r\n  let options = target.options;\r\n  if (!options) {\r\n    target.options = newOptions;\r\n    return;\r\n  }\r\n  if (options.$shared) {\r\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\r\n  }\r\n  return options;\r\n}\r\n\r\nfunction scaleClip(scale, allowedOverflow) {\r\n  const opts = scale && scale.options || {};\r\n  const reverse = opts.reverse;\r\n  const min = opts.min === undefined ? allowedOverflow : 0;\r\n  const max = opts.max === undefined ? allowedOverflow : 0;\r\n  return {\r\n    start: reverse ? max : min,\r\n    end: reverse ? min : max\r\n  };\r\n}\r\nfunction defaultClip(xScale, yScale, allowedOverflow) {\r\n  if (allowedOverflow === false) {\r\n    return false;\r\n  }\r\n  const x = scaleClip(xScale, allowedOverflow);\r\n  const y = scaleClip(yScale, allowedOverflow);\r\n  return {\r\n    top: y.end,\r\n    right: x.end,\r\n    bottom: y.start,\r\n    left: x.start\r\n  };\r\n}\r\nfunction toClip(value) {\r\n  let t, r, b, l;\r\n  if (isObject(value)) {\r\n    t = value.top;\r\n    r = value.right;\r\n    b = value.bottom;\r\n    l = value.left;\r\n  } else {\r\n    t = r = b = l = value;\r\n  }\r\n  return {\r\n    top: t,\r\n    right: r,\r\n    bottom: b,\r\n    left: l,\r\n    disabled: value === false\r\n  };\r\n}\r\nfunction getSortedDatasetIndices(chart, filterVisible) {\r\n  const keys = [];\r\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\r\n  let i, ilen;\r\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    keys.push(metasets[i].index);\r\n  }\r\n  return keys;\r\n}\r\nfunction applyStack(stack, value, dsIndex, options) {\r\n  const keys = stack.keys;\r\n  const singleMode = options.mode === 'single';\r\n  let i, ilen, datasetIndex, otherValue;\r\n  if (value === null) {\r\n    return;\r\n  }\r\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n    datasetIndex = +keys[i];\r\n    if (datasetIndex === dsIndex) {\r\n      if (options.all) {\r\n        continue;\r\n      }\r\n      break;\r\n    }\r\n    otherValue = stack.values[datasetIndex];\r\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\r\n      value += otherValue;\r\n    }\r\n  }\r\n  return value;\r\n}\r\nfunction convertObjectDataToArray(data) {\r\n  const keys = Object.keys(data);\r\n  const adata = new Array(keys.length);\r\n  let i, ilen, key;\r\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n    key = keys[i];\r\n    adata[i] = {\r\n      x: key,\r\n      y: data[key]\r\n    };\r\n  }\r\n  return adata;\r\n}\r\nfunction isStacked(scale, meta) {\r\n  const stacked = scale && scale.options.stacked;\r\n  return stacked || (stacked === undefined && meta.stack !== undefined);\r\n}\r\nfunction getStackKey(indexScale, valueScale, meta) {\r\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\r\n}\r\nfunction getUserBounds(scale) {\r\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\r\n  return {\r\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\r\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\r\n  };\r\n}\r\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\r\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\r\n  return subStack[indexValue] || (subStack[indexValue] = {});\r\n}\r\nfunction getLastIndexInStack(stack, vScale, positive, type) {\r\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\r\n    const value = stack[meta.index];\r\n    if ((positive && value > 0) || (!positive && value < 0)) {\r\n      return meta.index;\r\n    }\r\n  }\r\n  return null;\r\n}\r\nfunction updateStacks(controller, parsed) {\r\n  const {chart, _cachedMeta: meta} = controller;\r\n  const stacks = chart._stacks || (chart._stacks = {});\r\n  const {iScale, vScale, index: datasetIndex} = meta;\r\n  const iAxis = iScale.axis;\r\n  const vAxis = vScale.axis;\r\n  const key = getStackKey(iScale, vScale, meta);\r\n  const ilen = parsed.length;\r\n  let stack;\r\n  for (let i = 0; i < ilen; ++i) {\r\n    const item = parsed[i];\r\n    const {[iAxis]: index, [vAxis]: value} = item;\r\n    const itemStacks = item._stacks || (item._stacks = {});\r\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\r\n    stack[datasetIndex] = value;\r\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\r\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\r\n  }\r\n}\r\nfunction getFirstScaleId(chart, axis) {\r\n  const scales = chart.scales;\r\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\r\n}\r\nfunction createDatasetContext(parent, index) {\r\n  return Object.assign(Object.create(parent),\r\n    {\r\n      active: false,\r\n      dataset: undefined,\r\n      datasetIndex: index,\r\n      index,\r\n      mode: 'default',\r\n      type: 'dataset'\r\n    }\r\n  );\r\n}\r\nfunction createDataContext(parent, index, element) {\r\n  return Object.assign(Object.create(parent), {\r\n    active: false,\r\n    dataIndex: index,\r\n    parsed: undefined,\r\n    raw: undefined,\r\n    element,\r\n    index,\r\n    mode: 'default',\r\n    type: 'data'\r\n  });\r\n}\r\nfunction clearStacks(meta, items) {\r\n  const datasetIndex = meta.controller.index;\r\n  const axis = meta.vScale && meta.vScale.axis;\r\n  if (!axis) {\r\n    return;\r\n  }\r\n  items = items || meta._parsed;\r\n  for (const parsed of items) {\r\n    const stacks = parsed._stacks;\r\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\r\n      return;\r\n    }\r\n    delete stacks[axis][datasetIndex];\r\n  }\r\n}\r\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\r\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\r\nclass DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    this.chart = chart;\r\n    this._ctx = chart.ctx;\r\n    this.index = datasetIndex;\r\n    this._cachedDataOpts = {};\r\n    this._cachedMeta = this.getMeta();\r\n    this._type = this._cachedMeta.type;\r\n    this.options = undefined;\r\n    this._parsing = false;\r\n    this._data = undefined;\r\n    this._objectData = undefined;\r\n    this._sharedOptions = undefined;\r\n    this._drawStart = undefined;\r\n    this._drawCount = undefined;\r\n    this.enableOptionSharing = false;\r\n    this.$context = undefined;\r\n    this._syncList = [];\r\n    this.initialize();\r\n  }\r\n  initialize() {\r\n    const meta = this._cachedMeta;\r\n    this.configure();\r\n    this.linkScales();\r\n    meta._stacked = isStacked(meta.vScale, meta);\r\n    this.addElements();\r\n  }\r\n  updateIndex(datasetIndex) {\r\n    if (this.index !== datasetIndex) {\r\n      clearStacks(this._cachedMeta);\r\n    }\r\n    this.index = datasetIndex;\r\n  }\r\n  linkScales() {\r\n    const chart = this.chart;\r\n    const meta = this._cachedMeta;\r\n    const dataset = this.getDataset();\r\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\r\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\r\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\r\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\r\n    const indexAxis = meta.indexAxis;\r\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\r\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\r\n    meta.xScale = this.getScaleForId(xid);\r\n    meta.yScale = this.getScaleForId(yid);\r\n    meta.rScale = this.getScaleForId(rid);\r\n    meta.iScale = this.getScaleForId(iid);\r\n    meta.vScale = this.getScaleForId(vid);\r\n  }\r\n  getDataset() {\r\n    return this.chart.data.datasets[this.index];\r\n  }\r\n  getMeta() {\r\n    return this.chart.getDatasetMeta(this.index);\r\n  }\r\n  getScaleForId(scaleID) {\r\n    return this.chart.scales[scaleID];\r\n  }\r\n  _getOtherScale(scale) {\r\n    const meta = this._cachedMeta;\r\n    return scale === meta.iScale\r\n      ? meta.vScale\r\n      : meta.iScale;\r\n  }\r\n  reset() {\r\n    this._update('reset');\r\n  }\r\n  _destroy() {\r\n    const meta = this._cachedMeta;\r\n    if (this._data) {\r\n      unlistenArrayEvents(this._data, this);\r\n    }\r\n    if (meta._stacked) {\r\n      clearStacks(meta);\r\n    }\r\n  }\r\n  _dataCheck() {\r\n    const dataset = this.getDataset();\r\n    const data = dataset.data || (dataset.data = []);\r\n    const _data = this._data;\r\n    if (isObject(data)) {\r\n      this._data = convertObjectDataToArray(data);\r\n    } else if (_data !== data) {\r\n      if (_data) {\r\n        unlistenArrayEvents(_data, this);\r\n        const meta = this._cachedMeta;\r\n        clearStacks(meta);\r\n        meta._parsed = [];\r\n      }\r\n      if (data && Object.isExtensible(data)) {\r\n        listenArrayEvents(data, this);\r\n      }\r\n      this._syncList = [];\r\n      this._data = data;\r\n    }\r\n  }\r\n  addElements() {\r\n    const meta = this._cachedMeta;\r\n    this._dataCheck();\r\n    if (this.datasetElementType) {\r\n      meta.dataset = new this.datasetElementType();\r\n    }\r\n  }\r\n  buildOrUpdateElements(resetNewElements) {\r\n    const meta = this._cachedMeta;\r\n    const dataset = this.getDataset();\r\n    let stackChanged = false;\r\n    this._dataCheck();\r\n    const oldStacked = meta._stacked;\r\n    meta._stacked = isStacked(meta.vScale, meta);\r\n    if (meta.stack !== dataset.stack) {\r\n      stackChanged = true;\r\n      clearStacks(meta);\r\n      meta.stack = dataset.stack;\r\n    }\r\n    this._resyncElements(resetNewElements);\r\n    if (stackChanged || oldStacked !== meta._stacked) {\r\n      updateStacks(this, meta._parsed);\r\n    }\r\n  }\r\n  configure() {\r\n    const config = this.chart.config;\r\n    const scopeKeys = config.datasetScopeKeys(this._type);\r\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\r\n    this.options = config.createResolver(scopes, this.getContext());\r\n    this._parsing = this.options.parsing;\r\n  }\r\n  parse(start, count) {\r\n    const {_cachedMeta: meta, _data: data} = this;\r\n    const {iScale, _stacked} = meta;\r\n    const iAxis = iScale.axis;\r\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\r\n    let prev = start > 0 && meta._parsed[start - 1];\r\n    let i, cur, parsed;\r\n    if (this._parsing === false) {\r\n      meta._parsed = data;\r\n      meta._sorted = true;\r\n      parsed = data;\r\n    } else {\r\n      if (isArray(data[start])) {\r\n        parsed = this.parseArrayData(meta, data, start, count);\r\n      } else if (isObject(data[start])) {\r\n        parsed = this.parseObjectData(meta, data, start, count);\r\n      } else {\r\n        parsed = this.parsePrimitiveData(meta, data, start, count);\r\n      }\r\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\r\n      for (i = 0; i < count; ++i) {\r\n        meta._parsed[i + start] = cur = parsed[i];\r\n        if (sorted) {\r\n          if (isNotInOrderComparedToPrev()) {\r\n            sorted = false;\r\n          }\r\n          prev = cur;\r\n        }\r\n      }\r\n      meta._sorted = sorted;\r\n    }\r\n    if (_stacked) {\r\n      updateStacks(this, parsed);\r\n    }\r\n  }\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    const {iScale, vScale} = meta;\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    const labels = iScale.getLabels();\r\n    const singleScale = iScale === vScale;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      parsed[i] = {\r\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\r\n        [vAxis]: vScale.parse(data[index], index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  parseArrayData(meta, data, start, count) {\r\n    const {xScale, yScale} = meta;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index, item;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      item = data[index];\r\n      parsed[i] = {\r\n        x: xScale.parse(item[0], index),\r\n        y: yScale.parse(item[1], index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const {xScale, yScale} = meta;\r\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index, item;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      item = data[index];\r\n      parsed[i] = {\r\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\r\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  getParsed(index) {\r\n    return this._cachedMeta._parsed[index];\r\n  }\r\n  getDataElement(index) {\r\n    return this._cachedMeta.data[index];\r\n  }\r\n  applyStack(scale, parsed, mode) {\r\n    const chart = this.chart;\r\n    const meta = this._cachedMeta;\r\n    const value = parsed[scale.axis];\r\n    const stack = {\r\n      keys: getSortedDatasetIndices(chart, true),\r\n      values: parsed._stacks[scale.axis]\r\n    };\r\n    return applyStack(stack, value, meta.index, {mode});\r\n  }\r\n  updateRangeFromParsed(range, scale, parsed, stack) {\r\n    const parsedValue = parsed[scale.axis];\r\n    let value = parsedValue === null ? NaN : parsedValue;\r\n    const values = stack && parsed._stacks[scale.axis];\r\n    if (stack && values) {\r\n      stack.values = values;\r\n      range.min = Math.min(range.min, value);\r\n      range.max = Math.max(range.max, value);\r\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\r\n    }\r\n    range.min = Math.min(range.min, value);\r\n    range.max = Math.max(range.max, value);\r\n  }\r\n  getMinMax(scale, canStack) {\r\n    const meta = this._cachedMeta;\r\n    const _parsed = meta._parsed;\r\n    const sorted = meta._sorted && scale === meta.iScale;\r\n    const ilen = _parsed.length;\r\n    const otherScale = this._getOtherScale(scale);\r\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(this.chart, true), values: null};\r\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\r\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\r\n    let i, value, parsed, otherValue;\r\n    function _skip() {\r\n      parsed = _parsed[i];\r\n      value = parsed[scale.axis];\r\n      otherValue = parsed[otherScale.axis];\r\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\r\n    }\r\n    for (i = 0; i < ilen; ++i) {\r\n      if (_skip()) {\r\n        continue;\r\n      }\r\n      this.updateRangeFromParsed(range, scale, parsed, stack);\r\n      if (sorted) {\r\n        break;\r\n      }\r\n    }\r\n    if (sorted) {\r\n      for (i = ilen - 1; i >= 0; --i) {\r\n        if (_skip()) {\r\n          continue;\r\n        }\r\n        this.updateRangeFromParsed(range, scale, parsed, stack);\r\n        break;\r\n      }\r\n    }\r\n    return range;\r\n  }\r\n  getAllParsedValues(scale) {\r\n    const parsed = this._cachedMeta._parsed;\r\n    const values = [];\r\n    let i, ilen, value;\r\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\r\n      value = parsed[i][scale.axis];\r\n      if (isNumberFinite(value)) {\r\n        values.push(value);\r\n      }\r\n    }\r\n    return values;\r\n  }\r\n  getMaxOverflow() {\r\n    return false;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const vScale = meta.vScale;\r\n    const parsed = this.getParsed(index);\r\n    return {\r\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\r\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\r\n    };\r\n  }\r\n  _update(mode) {\r\n    const meta = this._cachedMeta;\r\n    this.configure();\r\n    this._cachedDataOpts = {};\r\n    this.update(mode || 'default');\r\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\r\n  }\r\n  update(mode) {}\r\n  draw() {\r\n    const ctx = this._ctx;\r\n    const chart = this.chart;\r\n    const meta = this._cachedMeta;\r\n    const elements = meta.data || [];\r\n    const area = chart.chartArea;\r\n    const active = [];\r\n    const start = this._drawStart || 0;\r\n    const count = this._drawCount || (elements.length - start);\r\n    let i;\r\n    if (meta.dataset) {\r\n      meta.dataset.draw(ctx, area, start, count);\r\n    }\r\n    for (i = start; i < start + count; ++i) {\r\n      const element = elements[i];\r\n      if (element.hidden) {\r\n        continue;\r\n      }\r\n      if (element.active) {\r\n        active.push(element);\r\n      } else {\r\n        element.draw(ctx, area);\r\n      }\r\n    }\r\n    for (i = 0; i < active.length; ++i) {\r\n      active[i].draw(ctx, area);\r\n    }\r\n  }\r\n  getStyle(index, active) {\r\n    const mode = active ? 'active' : 'default';\r\n    return index === undefined && this._cachedMeta.dataset\r\n      ? this.resolveDatasetElementOptions(mode)\r\n      : this.resolveDataElementOptions(index || 0, mode);\r\n  }\r\n  getContext(index, active, mode) {\r\n    const dataset = this.getDataset();\r\n    let context;\r\n    if (index >= 0 && index < this._cachedMeta.data.length) {\r\n      const element = this._cachedMeta.data[index];\r\n      context = element.$context ||\r\n        (element.$context = createDataContext(this.getContext(), index, element));\r\n      context.parsed = this.getParsed(index);\r\n      context.raw = dataset.data[index];\r\n      context.index = context.dataIndex = index;\r\n    } else {\r\n      context = this.$context ||\r\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\r\n      context.dataset = dataset;\r\n      context.index = context.datasetIndex = this.index;\r\n    }\r\n    context.active = !!active;\r\n    context.mode = mode;\r\n    return context;\r\n  }\r\n  resolveDatasetElementOptions(mode) {\r\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\r\n  }\r\n  resolveDataElementOptions(index, mode) {\r\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\r\n  }\r\n  _resolveElementOptions(elementType, mode = 'default', index) {\r\n    const active = mode === 'active';\r\n    const cache = this._cachedDataOpts;\r\n    const cacheKey = elementType + '-' + mode;\r\n    const cached = cache[cacheKey];\r\n    const sharing = this.enableOptionSharing && defined(index);\r\n    if (cached) {\r\n      return cloneIfNotShared(cached, sharing);\r\n    }\r\n    const config = this.chart.config;\r\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\r\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\r\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\r\n    const names = Object.keys(defaults.elements[elementType]);\r\n    const context = () => this.getContext(index, active);\r\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\r\n    if (values.$shared) {\r\n      values.$shared = sharing;\r\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\r\n    }\r\n    return values;\r\n  }\r\n  _resolveAnimations(index, transition, active) {\r\n    const chart = this.chart;\r\n    const cache = this._cachedDataOpts;\r\n    const cacheKey = `animation-${transition}`;\r\n    const cached = cache[cacheKey];\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    let options;\r\n    if (chart.options.animation !== false) {\r\n      const config = this.chart.config;\r\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\r\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\r\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\r\n    }\r\n    const animations = new Animations(chart, options && options.animations);\r\n    if (options && options._cacheable) {\r\n      cache[cacheKey] = Object.freeze(animations);\r\n    }\r\n    return animations;\r\n  }\r\n  getSharedOptions(options) {\r\n    if (!options.$shared) {\r\n      return;\r\n    }\r\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\r\n  }\r\n  includeOptions(mode, sharedOptions) {\r\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\r\n  }\r\n  updateElement(element, index, properties, mode) {\r\n    if (isDirectUpdateMode(mode)) {\r\n      Object.assign(element, properties);\r\n    } else {\r\n      this._resolveAnimations(index, mode).update(element, properties);\r\n    }\r\n  }\r\n  updateSharedOptions(sharedOptions, mode, newOptions) {\r\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\r\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\r\n    }\r\n  }\r\n  _setStyle(element, index, mode, active) {\r\n    element.active = active;\r\n    const options = this.getStyle(index, active);\r\n    this._resolveAnimations(index, mode, active).update(element, {\r\n      options: (!active && this.getSharedOptions(options)) || options\r\n    });\r\n  }\r\n  removeHoverStyle(element, datasetIndex, index) {\r\n    this._setStyle(element, index, 'active', false);\r\n  }\r\n  setHoverStyle(element, datasetIndex, index) {\r\n    this._setStyle(element, index, 'active', true);\r\n  }\r\n  _removeDatasetHoverStyle() {\r\n    const element = this._cachedMeta.dataset;\r\n    if (element) {\r\n      this._setStyle(element, undefined, 'active', false);\r\n    }\r\n  }\r\n  _setDatasetHoverStyle() {\r\n    const element = this._cachedMeta.dataset;\r\n    if (element) {\r\n      this._setStyle(element, undefined, 'active', true);\r\n    }\r\n  }\r\n  _resyncElements(resetNewElements) {\r\n    const data = this._data;\r\n    const elements = this._cachedMeta.data;\r\n    for (const [method, arg1, arg2] of this._syncList) {\r\n      this[method](arg1, arg2);\r\n    }\r\n    this._syncList = [];\r\n    const numMeta = elements.length;\r\n    const numData = data.length;\r\n    const count = Math.min(numData, numMeta);\r\n    if (count) {\r\n      this.parse(0, count);\r\n    }\r\n    if (numData > numMeta) {\r\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\r\n    } else if (numData < numMeta) {\r\n      this._removeElements(numData, numMeta - numData);\r\n    }\r\n  }\r\n  _insertElements(start, count, resetNewElements = true) {\r\n    const meta = this._cachedMeta;\r\n    const data = meta.data;\r\n    const end = start + count;\r\n    let i;\r\n    const move = (arr) => {\r\n      arr.length += count;\r\n      for (i = arr.length - 1; i >= end; i--) {\r\n        arr[i] = arr[i - count];\r\n      }\r\n    };\r\n    move(data);\r\n    for (i = start; i < end; ++i) {\r\n      data[i] = new this.dataElementType();\r\n    }\r\n    if (this._parsing) {\r\n      move(meta._parsed);\r\n    }\r\n    this.parse(start, count);\r\n    if (resetNewElements) {\r\n      this.updateElements(data, start, count, 'reset');\r\n    }\r\n  }\r\n  updateElements(element, start, count, mode) {}\r\n  _removeElements(start, count) {\r\n    const meta = this._cachedMeta;\r\n    if (this._parsing) {\r\n      const removed = meta._parsed.splice(start, count);\r\n      if (meta._stacked) {\r\n        clearStacks(meta, removed);\r\n      }\r\n    }\r\n    meta.data.splice(start, count);\r\n  }\r\n  _sync(args) {\r\n    if (this._parsing) {\r\n      this._syncList.push(args);\r\n    } else {\r\n      const [method, arg1, arg2] = args;\r\n      this[method](arg1, arg2);\r\n    }\r\n  }\r\n  _onDataPush() {\r\n    const count = arguments.length;\r\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\r\n  }\r\n  _onDataPop() {\r\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\r\n  }\r\n  _onDataShift() {\r\n    this._sync(['_removeElements', 0, 1]);\r\n  }\r\n  _onDataSplice(start, count) {\r\n    this._sync(['_removeElements', start, count]);\r\n    this._sync(['_insertElements', start, arguments.length - 2]);\r\n  }\r\n  _onDataUnshift() {\r\n    this._sync(['_insertElements', 0, arguments.length]);\r\n  }\r\n}\r\nDatasetController.defaults = {};\r\nDatasetController.prototype.datasetElementType = null;\r\nDatasetController.prototype.dataElementType = null;\r\n\r\nclass Element {\r\n  constructor() {\r\n    this.x = undefined;\r\n    this.y = undefined;\r\n    this.active = false;\r\n    this.options = undefined;\r\n    this.$animations = undefined;\r\n  }\r\n  tooltipPosition(useFinalPosition) {\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return {x, y};\r\n  }\r\n  hasValue() {\r\n    return isNumber(this.x) && isNumber(this.y);\r\n  }\r\n  getProps(props, final) {\r\n    const anims = this.$animations;\r\n    if (!final || !anims) {\r\n      return this;\r\n    }\r\n    const ret = {};\r\n    props.forEach(prop => {\r\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\r\n    });\r\n    return ret;\r\n  }\r\n}\r\nElement.defaults = {};\r\nElement.defaultRoutes = undefined;\r\n\r\nconst formatters = {\r\n  values(value) {\r\n    return isArray(value) ? value : '' + value;\r\n  },\r\n  numeric(tickValue, index, ticks) {\r\n    if (tickValue === 0) {\r\n      return '0';\r\n    }\r\n    const locale = this.chart.options.locale;\r\n    let notation;\r\n    let delta = tickValue;\r\n    if (ticks.length > 1) {\r\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\r\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\r\n        notation = 'scientific';\r\n      }\r\n      delta = calculateDelta(tickValue, ticks);\r\n    }\r\n    const logDelta = log10(Math.abs(delta));\r\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\r\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\r\n    Object.assign(options, this.options.ticks.format);\r\n    return formatNumber(tickValue, locale, options);\r\n  },\r\n  logarithmic(tickValue, index, ticks) {\r\n    if (tickValue === 0) {\r\n      return '0';\r\n    }\r\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\r\n    if (remain === 1 || remain === 2 || remain === 5) {\r\n      return formatters.numeric.call(this, tickValue, index, ticks);\r\n    }\r\n    return '';\r\n  }\r\n};\r\nfunction calculateDelta(tickValue, ticks) {\r\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\r\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\r\n    delta = tickValue - Math.floor(tickValue);\r\n  }\r\n  return delta;\r\n}\r\nvar Ticks = {formatters};\r\n\r\ndefaults.set('scale', {\r\n  display: true,\r\n  offset: false,\r\n  reverse: false,\r\n  beginAtZero: false,\r\n  bounds: 'ticks',\r\n  grace: 0,\r\n  grid: {\r\n    display: true,\r\n    lineWidth: 1,\r\n    drawBorder: true,\r\n    drawOnChartArea: true,\r\n    drawTicks: true,\r\n    tickLength: 8,\r\n    tickWidth: (_ctx, options) => options.lineWidth,\r\n    tickColor: (_ctx, options) => options.color,\r\n    offset: false,\r\n    borderDash: [],\r\n    borderDashOffset: 0.0,\r\n    borderWidth: 1\r\n  },\r\n  title: {\r\n    display: false,\r\n    text: '',\r\n    padding: {\r\n      top: 4,\r\n      bottom: 4\r\n    }\r\n  },\r\n  ticks: {\r\n    minRotation: 0,\r\n    maxRotation: 50,\r\n    mirror: false,\r\n    textStrokeWidth: 0,\r\n    textStrokeColor: '',\r\n    padding: 3,\r\n    display: true,\r\n    autoSkip: true,\r\n    autoSkipPadding: 3,\r\n    labelOffset: 0,\r\n    callback: Ticks.formatters.values,\r\n    minor: {},\r\n    major: {},\r\n    align: 'center',\r\n    crossAlign: 'near',\r\n    showLabelBackdrop: false,\r\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\r\n    backdropPadding: 2,\r\n  }\r\n});\r\ndefaults.route('scale.ticks', 'color', '', 'color');\r\ndefaults.route('scale.grid', 'color', '', 'borderColor');\r\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\r\ndefaults.route('scale.title', 'color', '', 'color');\r\ndefaults.describe('scale', {\r\n  _fallback: false,\r\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\r\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\r\n});\r\ndefaults.describe('scales', {\r\n  _fallback: 'scale',\r\n});\r\ndefaults.describe('scale.ticks', {\r\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\r\n  _indexable: (name) => name !== 'backdropPadding',\r\n});\r\n\r\nfunction autoSkip(scale, ticks) {\r\n  const tickOpts = scale.options.ticks;\r\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\r\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\r\n  const numMajorIndices = majorIndices.length;\r\n  const first = majorIndices[0];\r\n  const last = majorIndices[numMajorIndices - 1];\r\n  const newTicks = [];\r\n  if (numMajorIndices > ticksLimit) {\r\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\r\n    return newTicks;\r\n  }\r\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\r\n  if (numMajorIndices > 0) {\r\n    let i, ilen;\r\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\r\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\r\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\r\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\r\n    }\r\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\r\n    return newTicks;\r\n  }\r\n  skip(ticks, newTicks, spacing);\r\n  return newTicks;\r\n}\r\nfunction determineMaxTicks(scale) {\r\n  const offset = scale.options.offset;\r\n  const tickLength = scale._tickSize();\r\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\r\n  const maxChart = scale._maxLength / tickLength;\r\n  return Math.floor(Math.min(maxScale, maxChart));\r\n}\r\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\r\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\r\n  const spacing = ticks.length / ticksLimit;\r\n  if (!evenMajorSpacing) {\r\n    return Math.max(spacing, 1);\r\n  }\r\n  const factors = _factorize(evenMajorSpacing);\r\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\r\n    const factor = factors[i];\r\n    if (factor > spacing) {\r\n      return factor;\r\n    }\r\n  }\r\n  return Math.max(spacing, 1);\r\n}\r\nfunction getMajorIndices(ticks) {\r\n  const result = [];\r\n  let i, ilen;\r\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n    if (ticks[i].major) {\r\n      result.push(i);\r\n    }\r\n  }\r\n  return result;\r\n}\r\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\r\n  let count = 0;\r\n  let next = majorIndices[0];\r\n  let i;\r\n  spacing = Math.ceil(spacing);\r\n  for (i = 0; i < ticks.length; i++) {\r\n    if (i === next) {\r\n      newTicks.push(ticks[i]);\r\n      count++;\r\n      next = majorIndices[count * spacing];\r\n    }\r\n  }\r\n}\r\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\r\n  const start = valueOrDefault(majorStart, 0);\r\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\r\n  let count = 0;\r\n  let length, i, next;\r\n  spacing = Math.ceil(spacing);\r\n  if (majorEnd) {\r\n    length = majorEnd - majorStart;\r\n    spacing = length / Math.floor(length / spacing);\r\n  }\r\n  next = start;\r\n  while (next < 0) {\r\n    count++;\r\n    next = Math.round(start + count * spacing);\r\n  }\r\n  for (i = Math.max(start, 0); i < end; i++) {\r\n    if (i === next) {\r\n      newTicks.push(ticks[i]);\r\n      count++;\r\n      next = Math.round(start + count * spacing);\r\n    }\r\n  }\r\n}\r\nfunction getEvenSpacing(arr) {\r\n  const len = arr.length;\r\n  let i, diff;\r\n  if (len < 2) {\r\n    return false;\r\n  }\r\n  for (diff = arr[0], i = 1; i < len; ++i) {\r\n    if (arr[i] - arr[i - 1] !== diff) {\r\n      return false;\r\n    }\r\n  }\r\n  return diff;\r\n}\r\n\r\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\r\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\r\nfunction sample(arr, numItems) {\r\n  const result = [];\r\n  const increment = arr.length / numItems;\r\n  const len = arr.length;\r\n  let i = 0;\r\n  for (; i < len; i += increment) {\r\n    result.push(arr[Math.floor(i)]);\r\n  }\r\n  return result;\r\n}\r\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\r\n  const length = scale.ticks.length;\r\n  const validIndex = Math.min(index, length - 1);\r\n  const start = scale._startPixel;\r\n  const end = scale._endPixel;\r\n  const epsilon = 1e-6;\r\n  let lineValue = scale.getPixelForTick(validIndex);\r\n  let offset;\r\n  if (offsetGridLines) {\r\n    if (length === 1) {\r\n      offset = Math.max(lineValue - start, end - lineValue);\r\n    } else if (index === 0) {\r\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\r\n    } else {\r\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\r\n    }\r\n    lineValue += validIndex < index ? offset : -offset;\r\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\r\n      return;\r\n    }\r\n  }\r\n  return lineValue;\r\n}\r\nfunction garbageCollect(caches, length) {\r\n  each(caches, (cache) => {\r\n    const gc = cache.gc;\r\n    const gcLen = gc.length / 2;\r\n    let i;\r\n    if (gcLen > length) {\r\n      for (i = 0; i < gcLen; ++i) {\r\n        delete cache.data[gc[i]];\r\n      }\r\n      gc.splice(0, gcLen);\r\n    }\r\n  });\r\n}\r\nfunction getTickMarkLength(options) {\r\n  return options.drawTicks ? options.tickLength : 0;\r\n}\r\nfunction getTitleHeight(options, fallback) {\r\n  if (!options.display) {\r\n    return 0;\r\n  }\r\n  const font = toFont(options.font, fallback);\r\n  const padding = toPadding(options.padding);\r\n  const lines = isArray(options.text) ? options.text.length : 1;\r\n  return (lines * font.lineHeight) + padding.height;\r\n}\r\nfunction createScaleContext(parent, scale) {\r\n  return Object.assign(Object.create(parent), {\r\n    scale,\r\n    type: 'scale'\r\n  });\r\n}\r\nfunction createTickContext(parent, index, tick) {\r\n  return Object.assign(Object.create(parent), {\r\n    tick,\r\n    index,\r\n    type: 'tick'\r\n  });\r\n}\r\nfunction titleAlign(align, position, reverse) {\r\n  let ret = _toLeftRightCenter(align);\r\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\r\n    ret = reverseAlign(ret);\r\n  }\r\n  return ret;\r\n}\r\nfunction titleArgs(scale, offset, position, align) {\r\n  const {top, left, bottom, right, chart} = scale;\r\n  const {chartArea, scales} = chart;\r\n  let rotation = 0;\r\n  let maxWidth, titleX, titleY;\r\n  const height = bottom - top;\r\n  const width = right - left;\r\n  if (scale.isHorizontal()) {\r\n    titleX = _alignStartEnd(align, left, right);\r\n    if (isObject(position)) {\r\n      const positionAxisID = Object.keys(position)[0];\r\n      const value = position[positionAxisID];\r\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\r\n    } else if (position === 'center') {\r\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\r\n    } else {\r\n      titleY = offsetFromEdge(scale, position, offset);\r\n    }\r\n    maxWidth = right - left;\r\n  } else {\r\n    if (isObject(position)) {\r\n      const positionAxisID = Object.keys(position)[0];\r\n      const value = position[positionAxisID];\r\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\r\n    } else if (position === 'center') {\r\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\r\n    } else {\r\n      titleX = offsetFromEdge(scale, position, offset);\r\n    }\r\n    titleY = _alignStartEnd(align, bottom, top);\r\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\r\n  }\r\n  return {titleX, titleY, maxWidth, rotation};\r\n}\r\nclass Scale extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.id = cfg.id;\r\n    this.type = cfg.type;\r\n    this.options = undefined;\r\n    this.ctx = cfg.ctx;\r\n    this.chart = cfg.chart;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    this._margins = {\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0\r\n    };\r\n    this.maxWidth = undefined;\r\n    this.maxHeight = undefined;\r\n    this.paddingTop = undefined;\r\n    this.paddingBottom = undefined;\r\n    this.paddingLeft = undefined;\r\n    this.paddingRight = undefined;\r\n    this.axis = undefined;\r\n    this.labelRotation = undefined;\r\n    this.min = undefined;\r\n    this.max = undefined;\r\n    this._range = undefined;\r\n    this.ticks = [];\r\n    this._gridLineItems = null;\r\n    this._labelItems = null;\r\n    this._labelSizes = null;\r\n    this._length = 0;\r\n    this._maxLength = 0;\r\n    this._longestTextCache = {};\r\n    this._startPixel = undefined;\r\n    this._endPixel = undefined;\r\n    this._reversePixels = false;\r\n    this._userMax = undefined;\r\n    this._userMin = undefined;\r\n    this._suggestedMax = undefined;\r\n    this._suggestedMin = undefined;\r\n    this._ticksLength = 0;\r\n    this._borderValue = 0;\r\n    this._cache = {};\r\n    this._dataLimitsCached = false;\r\n    this.$context = undefined;\r\n  }\r\n  init(options) {\r\n    this.options = options.setContext(this.getContext());\r\n    this.axis = options.axis;\r\n    this._userMin = this.parse(options.min);\r\n    this._userMax = this.parse(options.max);\r\n    this._suggestedMin = this.parse(options.suggestedMin);\r\n    this._suggestedMax = this.parse(options.suggestedMax);\r\n  }\r\n  parse(raw, index) {\r\n    return raw;\r\n  }\r\n  getUserBounds() {\r\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\r\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\r\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\r\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\r\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\r\n    return {\r\n      min: finiteOrDefault(_userMin, _suggestedMin),\r\n      max: finiteOrDefault(_userMax, _suggestedMax),\r\n      minDefined: isNumberFinite(_userMin),\r\n      maxDefined: isNumberFinite(_userMax)\r\n    };\r\n  }\r\n  getMinMax(canStack) {\r\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\r\n    let range;\r\n    if (minDefined && maxDefined) {\r\n      return {min, max};\r\n    }\r\n    const metas = this.getMatchingVisibleMetas();\r\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      range = metas[i].controller.getMinMax(this, canStack);\r\n      if (!minDefined) {\r\n        min = Math.min(min, range.min);\r\n      }\r\n      if (!maxDefined) {\r\n        max = Math.max(max, range.max);\r\n      }\r\n    }\r\n    return {\r\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\r\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\r\n    };\r\n  }\r\n  getPadding() {\r\n    return {\r\n      left: this.paddingLeft || 0,\r\n      top: this.paddingTop || 0,\r\n      right: this.paddingRight || 0,\r\n      bottom: this.paddingBottom || 0\r\n    };\r\n  }\r\n  getTicks() {\r\n    return this.ticks;\r\n  }\r\n  getLabels() {\r\n    const data = this.chart.data;\r\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\r\n  }\r\n  beforeLayout() {\r\n    this._cache = {};\r\n    this._dataLimitsCached = false;\r\n  }\r\n  beforeUpdate() {\r\n    callback(this.options.beforeUpdate, [this]);\r\n  }\r\n  update(maxWidth, maxHeight, margins) {\r\n    const tickOpts = this.options.ticks;\r\n    const sampleSize = tickOpts.sampleSize;\r\n    this.beforeUpdate();\r\n    this.maxWidth = maxWidth;\r\n    this.maxHeight = maxHeight;\r\n    this._margins = margins = Object.assign({\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0\r\n    }, margins);\r\n    this.ticks = null;\r\n    this._labelSizes = null;\r\n    this._gridLineItems = null;\r\n    this._labelItems = null;\r\n    this.beforeSetDimensions();\r\n    this.setDimensions();\r\n    this.afterSetDimensions();\r\n    this._maxLength = this.isHorizontal()\r\n      ? this.width + margins.left + margins.right\r\n      : this.height + margins.top + margins.bottom;\r\n    if (!this._dataLimitsCached) {\r\n      this.beforeDataLimits();\r\n      this.determineDataLimits();\r\n      this.afterDataLimits();\r\n      this._range = _addGrace(this, this.options.grace);\r\n      this._dataLimitsCached = true;\r\n    }\r\n    this.beforeBuildTicks();\r\n    this.ticks = this.buildTicks() || [];\r\n    this.afterBuildTicks();\r\n    const samplingEnabled = sampleSize < this.ticks.length;\r\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\r\n    this.configure();\r\n    this.beforeCalculateLabelRotation();\r\n    this.calculateLabelRotation();\r\n    this.afterCalculateLabelRotation();\r\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\r\n      this.ticks = autoSkip(this, this.ticks);\r\n      this._labelSizes = null;\r\n    }\r\n    if (samplingEnabled) {\r\n      this._convertTicksToLabels(this.ticks);\r\n    }\r\n    this.beforeFit();\r\n    this.fit();\r\n    this.afterFit();\r\n    this.afterUpdate();\r\n  }\r\n  configure() {\r\n    let reversePixels = this.options.reverse;\r\n    let startPixel, endPixel;\r\n    if (this.isHorizontal()) {\r\n      startPixel = this.left;\r\n      endPixel = this.right;\r\n    } else {\r\n      startPixel = this.top;\r\n      endPixel = this.bottom;\r\n      reversePixels = !reversePixels;\r\n    }\r\n    this._startPixel = startPixel;\r\n    this._endPixel = endPixel;\r\n    this._reversePixels = reversePixels;\r\n    this._length = endPixel - startPixel;\r\n    this._alignToPixels = this.options.alignToPixels;\r\n  }\r\n  afterUpdate() {\r\n    callback(this.options.afterUpdate, [this]);\r\n  }\r\n  beforeSetDimensions() {\r\n    callback(this.options.beforeSetDimensions, [this]);\r\n  }\r\n  setDimensions() {\r\n    if (this.isHorizontal()) {\r\n      this.width = this.maxWidth;\r\n      this.left = 0;\r\n      this.right = this.width;\r\n    } else {\r\n      this.height = this.maxHeight;\r\n      this.top = 0;\r\n      this.bottom = this.height;\r\n    }\r\n    this.paddingLeft = 0;\r\n    this.paddingTop = 0;\r\n    this.paddingRight = 0;\r\n    this.paddingBottom = 0;\r\n  }\r\n  afterSetDimensions() {\r\n    callback(this.options.afterSetDimensions, [this]);\r\n  }\r\n  _callHooks(name) {\r\n    this.chart.notifyPlugins(name, this.getContext());\r\n    callback(this.options[name], [this]);\r\n  }\r\n  beforeDataLimits() {\r\n    this._callHooks('beforeDataLimits');\r\n  }\r\n  determineDataLimits() {}\r\n  afterDataLimits() {\r\n    this._callHooks('afterDataLimits');\r\n  }\r\n  beforeBuildTicks() {\r\n    this._callHooks('beforeBuildTicks');\r\n  }\r\n  buildTicks() {\r\n    return [];\r\n  }\r\n  afterBuildTicks() {\r\n    this._callHooks('afterBuildTicks');\r\n  }\r\n  beforeTickToLabelConversion() {\r\n    callback(this.options.beforeTickToLabelConversion, [this]);\r\n  }\r\n  generateTickLabels(ticks) {\r\n    const tickOpts = this.options.ticks;\r\n    let i, ilen, tick;\r\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n      tick = ticks[i];\r\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\r\n    }\r\n  }\r\n  afterTickToLabelConversion() {\r\n    callback(this.options.afterTickToLabelConversion, [this]);\r\n  }\r\n  beforeCalculateLabelRotation() {\r\n    callback(this.options.beforeCalculateLabelRotation, [this]);\r\n  }\r\n  calculateLabelRotation() {\r\n    const options = this.options;\r\n    const tickOpts = options.ticks;\r\n    const numTicks = this.ticks.length;\r\n    const minRotation = tickOpts.minRotation || 0;\r\n    const maxRotation = tickOpts.maxRotation;\r\n    let labelRotation = minRotation;\r\n    let tickWidth, maxHeight, maxLabelDiagonal;\r\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\r\n      this.labelRotation = minRotation;\r\n      return;\r\n    }\r\n    const labelSizes = this._getLabelSizes();\r\n    const maxLabelWidth = labelSizes.widest.width;\r\n    const maxLabelHeight = labelSizes.highest.height;\r\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\r\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\r\n    if (maxLabelWidth + 6 > tickWidth) {\r\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\r\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\r\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\r\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\r\n      labelRotation = toDegrees(Math.min(\r\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\r\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\r\n      ));\r\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\r\n    }\r\n    this.labelRotation = labelRotation;\r\n  }\r\n  afterCalculateLabelRotation() {\r\n    callback(this.options.afterCalculateLabelRotation, [this]);\r\n  }\r\n  beforeFit() {\r\n    callback(this.options.beforeFit, [this]);\r\n  }\r\n  fit() {\r\n    const minSize = {\r\n      width: 0,\r\n      height: 0\r\n    };\r\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\r\n    const display = this._isVisible();\r\n    const isHorizontal = this.isHorizontal();\r\n    if (display) {\r\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\r\n      if (isHorizontal) {\r\n        minSize.width = this.maxWidth;\r\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\r\n      } else {\r\n        minSize.height = this.maxHeight;\r\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\r\n      }\r\n      if (tickOpts.display && this.ticks.length) {\r\n        const {first, last, widest, highest} = this._getLabelSizes();\r\n        const tickPadding = tickOpts.padding * 2;\r\n        const angleRadians = toRadians(this.labelRotation);\r\n        const cos = Math.cos(angleRadians);\r\n        const sin = Math.sin(angleRadians);\r\n        if (isHorizontal) {\r\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\r\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\r\n        } else {\r\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\r\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\r\n        }\r\n        this._calculatePadding(first, last, sin, cos);\r\n      }\r\n    }\r\n    this._handleMargins();\r\n    if (isHorizontal) {\r\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\r\n      this.height = minSize.height;\r\n    } else {\r\n      this.width = minSize.width;\r\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\r\n    }\r\n  }\r\n  _calculatePadding(first, last, sin, cos) {\r\n    const {ticks: {align, padding}, position} = this.options;\r\n    const isRotated = this.labelRotation !== 0;\r\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\r\n    if (this.isHorizontal()) {\r\n      const offsetLeft = this.getPixelForTick(0) - this.left;\r\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\r\n      let paddingLeft = 0;\r\n      let paddingRight = 0;\r\n      if (isRotated) {\r\n        if (labelsBelowTicks) {\r\n          paddingLeft = cos * first.width;\r\n          paddingRight = sin * last.height;\r\n        } else {\r\n          paddingLeft = sin * first.height;\r\n          paddingRight = cos * last.width;\r\n        }\r\n      } else if (align === 'start') {\r\n        paddingRight = last.width;\r\n      } else if (align === 'end') {\r\n        paddingLeft = first.width;\r\n      } else {\r\n        paddingLeft = first.width / 2;\r\n        paddingRight = last.width / 2;\r\n      }\r\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\r\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\r\n    } else {\r\n      let paddingTop = last.height / 2;\r\n      let paddingBottom = first.height / 2;\r\n      if (align === 'start') {\r\n        paddingTop = 0;\r\n        paddingBottom = first.height;\r\n      } else if (align === 'end') {\r\n        paddingTop = last.height;\r\n        paddingBottom = 0;\r\n      }\r\n      this.paddingTop = paddingTop + padding;\r\n      this.paddingBottom = paddingBottom + padding;\r\n    }\r\n  }\r\n  _handleMargins() {\r\n    if (this._margins) {\r\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\r\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\r\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\r\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\r\n    }\r\n  }\r\n  afterFit() {\r\n    callback(this.options.afterFit, [this]);\r\n  }\r\n  isHorizontal() {\r\n    const {axis, position} = this.options;\r\n    return position === 'top' || position === 'bottom' || axis === 'x';\r\n  }\r\n  isFullSize() {\r\n    return this.options.fullSize;\r\n  }\r\n  _convertTicksToLabels(ticks) {\r\n    this.beforeTickToLabelConversion();\r\n    this.generateTickLabels(ticks);\r\n    let i, ilen;\r\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n      if (isNullOrUndef(ticks[i].label)) {\r\n        ticks.splice(i, 1);\r\n        ilen--;\r\n        i--;\r\n      }\r\n    }\r\n    this.afterTickToLabelConversion();\r\n  }\r\n  _getLabelSizes() {\r\n    let labelSizes = this._labelSizes;\r\n    if (!labelSizes) {\r\n      const sampleSize = this.options.ticks.sampleSize;\r\n      let ticks = this.ticks;\r\n      if (sampleSize < ticks.length) {\r\n        ticks = sample(ticks, sampleSize);\r\n      }\r\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\r\n    }\r\n    return labelSizes;\r\n  }\r\n  _computeLabelSizes(ticks, length) {\r\n    const {ctx, _longestTextCache: caches} = this;\r\n    const widths = [];\r\n    const heights = [];\r\n    let widestLabelSize = 0;\r\n    let highestLabelSize = 0;\r\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\r\n    for (i = 0; i < length; ++i) {\r\n      label = ticks[i].label;\r\n      tickFont = this._resolveTickFontOptions(i);\r\n      ctx.font = fontString = tickFont.string;\r\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\r\n      lineHeight = tickFont.lineHeight;\r\n      width = height = 0;\r\n      if (!isNullOrUndef(label) && !isArray(label)) {\r\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\r\n        height = lineHeight;\r\n      } else if (isArray(label)) {\r\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\r\n          nestedLabel = label[j];\r\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\r\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\r\n            height += lineHeight;\r\n          }\r\n        }\r\n      }\r\n      widths.push(width);\r\n      heights.push(height);\r\n      widestLabelSize = Math.max(width, widestLabelSize);\r\n      highestLabelSize = Math.max(height, highestLabelSize);\r\n    }\r\n    garbageCollect(caches, length);\r\n    const widest = widths.indexOf(widestLabelSize);\r\n    const highest = heights.indexOf(highestLabelSize);\r\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\r\n    return {\r\n      first: valueAt(0),\r\n      last: valueAt(length - 1),\r\n      widest: valueAt(widest),\r\n      highest: valueAt(highest),\r\n      widths,\r\n      heights,\r\n    };\r\n  }\r\n  getLabelForValue(value) {\r\n    return value;\r\n  }\r\n  getPixelForValue(value, index) {\r\n    return NaN;\r\n  }\r\n  getValueForPixel(pixel) {}\r\n  getPixelForTick(index) {\r\n    const ticks = this.ticks;\r\n    if (index < 0 || index > ticks.length - 1) {\r\n      return null;\r\n    }\r\n    return this.getPixelForValue(ticks[index].value);\r\n  }\r\n  getPixelForDecimal(decimal) {\r\n    if (this._reversePixels) {\r\n      decimal = 1 - decimal;\r\n    }\r\n    const pixel = this._startPixel + decimal * this._length;\r\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\r\n  }\r\n  getDecimalForPixel(pixel) {\r\n    const decimal = (pixel - this._startPixel) / this._length;\r\n    return this._reversePixels ? 1 - decimal : decimal;\r\n  }\r\n  getBasePixel() {\r\n    return this.getPixelForValue(this.getBaseValue());\r\n  }\r\n  getBaseValue() {\r\n    const {min, max} = this;\r\n    return min < 0 && max < 0 ? max :\r\n      min > 0 && max > 0 ? min :\r\n      0;\r\n  }\r\n  getContext(index) {\r\n    const ticks = this.ticks || [];\r\n    if (index >= 0 && index < ticks.length) {\r\n      const tick = ticks[index];\r\n      return tick.$context ||\r\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\r\n    }\r\n    return this.$context ||\r\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\r\n  }\r\n  _tickSize() {\r\n    const optionTicks = this.options.ticks;\r\n    const rot = toRadians(this.labelRotation);\r\n    const cos = Math.abs(Math.cos(rot));\r\n    const sin = Math.abs(Math.sin(rot));\r\n    const labelSizes = this._getLabelSizes();\r\n    const padding = optionTicks.autoSkipPadding || 0;\r\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\r\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\r\n    return this.isHorizontal()\r\n      ? h * cos > w * sin ? w / cos : h / sin\r\n      : h * sin < w * cos ? h / cos : w / sin;\r\n  }\r\n  _isVisible() {\r\n    const display = this.options.display;\r\n    if (display !== 'auto') {\r\n      return !!display;\r\n    }\r\n    return this.getMatchingVisibleMetas().length > 0;\r\n  }\r\n  _computeGridLineItems(chartArea) {\r\n    const axis = this.axis;\r\n    const chart = this.chart;\r\n    const options = this.options;\r\n    const {grid, position} = options;\r\n    const offset = grid.offset;\r\n    const isHorizontal = this.isHorizontal();\r\n    const ticks = this.ticks;\r\n    const ticksLength = ticks.length + (offset ? 1 : 0);\r\n    const tl = getTickMarkLength(grid);\r\n    const items = [];\r\n    const borderOpts = grid.setContext(this.getContext());\r\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\r\n    const axisHalfWidth = axisWidth / 2;\r\n    const alignBorderValue = function(pixel) {\r\n      return _alignPixel(chart, pixel, axisWidth);\r\n    };\r\n    let borderValue, i, lineValue, alignedLineValue;\r\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\r\n    if (position === 'top') {\r\n      borderValue = alignBorderValue(this.bottom);\r\n      ty1 = this.bottom - tl;\r\n      ty2 = borderValue - axisHalfWidth;\r\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\r\n      y2 = chartArea.bottom;\r\n    } else if (position === 'bottom') {\r\n      borderValue = alignBorderValue(this.top);\r\n      y1 = chartArea.top;\r\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\r\n      ty1 = borderValue + axisHalfWidth;\r\n      ty2 = this.top + tl;\r\n    } else if (position === 'left') {\r\n      borderValue = alignBorderValue(this.right);\r\n      tx1 = this.right - tl;\r\n      tx2 = borderValue - axisHalfWidth;\r\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\r\n      x2 = chartArea.right;\r\n    } else if (position === 'right') {\r\n      borderValue = alignBorderValue(this.left);\r\n      x1 = chartArea.left;\r\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\r\n      tx1 = borderValue + axisHalfWidth;\r\n      tx2 = this.left + tl;\r\n    } else if (axis === 'x') {\r\n      if (position === 'center') {\r\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\r\n      }\r\n      y1 = chartArea.top;\r\n      y2 = chartArea.bottom;\r\n      ty1 = borderValue + axisHalfWidth;\r\n      ty2 = ty1 + tl;\r\n    } else if (axis === 'y') {\r\n      if (position === 'center') {\r\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\r\n      }\r\n      tx1 = borderValue - axisHalfWidth;\r\n      tx2 = tx1 - tl;\r\n      x1 = chartArea.left;\r\n      x2 = chartArea.right;\r\n    }\r\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\r\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\r\n    for (i = 0; i < ticksLength; i += step) {\r\n      const optsAtIndex = grid.setContext(this.getContext(i));\r\n      const lineWidth = optsAtIndex.lineWidth;\r\n      const lineColor = optsAtIndex.color;\r\n      const borderDash = grid.borderDash || [];\r\n      const borderDashOffset = optsAtIndex.borderDashOffset;\r\n      const tickWidth = optsAtIndex.tickWidth;\r\n      const tickColor = optsAtIndex.tickColor;\r\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\r\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\r\n      lineValue = getPixelForGridLine(this, i, offset);\r\n      if (lineValue === undefined) {\r\n        continue;\r\n      }\r\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\r\n      if (isHorizontal) {\r\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\r\n      } else {\r\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\r\n      }\r\n      items.push({\r\n        tx1,\r\n        ty1,\r\n        tx2,\r\n        ty2,\r\n        x1,\r\n        y1,\r\n        x2,\r\n        y2,\r\n        width: lineWidth,\r\n        color: lineColor,\r\n        borderDash,\r\n        borderDashOffset,\r\n        tickWidth,\r\n        tickColor,\r\n        tickBorderDash,\r\n        tickBorderDashOffset,\r\n      });\r\n    }\r\n    this._ticksLength = ticksLength;\r\n    this._borderValue = borderValue;\r\n    return items;\r\n  }\r\n  _computeLabelItems(chartArea) {\r\n    const axis = this.axis;\r\n    const options = this.options;\r\n    const {position, ticks: optionTicks} = options;\r\n    const isHorizontal = this.isHorizontal();\r\n    const ticks = this.ticks;\r\n    const {align, crossAlign, padding, mirror} = optionTicks;\r\n    const tl = getTickMarkLength(options.grid);\r\n    const tickAndPadding = tl + padding;\r\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\r\n    const rotation = -toRadians(this.labelRotation);\r\n    const items = [];\r\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\r\n    let textBaseline = 'middle';\r\n    if (position === 'top') {\r\n      y = this.bottom - hTickAndPadding;\r\n      textAlign = this._getXAxisLabelAlignment();\r\n    } else if (position === 'bottom') {\r\n      y = this.top + hTickAndPadding;\r\n      textAlign = this._getXAxisLabelAlignment();\r\n    } else if (position === 'left') {\r\n      const ret = this._getYAxisLabelAlignment(tl);\r\n      textAlign = ret.textAlign;\r\n      x = ret.x;\r\n    } else if (position === 'right') {\r\n      const ret = this._getYAxisLabelAlignment(tl);\r\n      textAlign = ret.textAlign;\r\n      x = ret.x;\r\n    } else if (axis === 'x') {\r\n      if (position === 'center') {\r\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\r\n      }\r\n      textAlign = this._getXAxisLabelAlignment();\r\n    } else if (axis === 'y') {\r\n      if (position === 'center') {\r\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\r\n      }\r\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\r\n    }\r\n    if (axis === 'y') {\r\n      if (align === 'start') {\r\n        textBaseline = 'top';\r\n      } else if (align === 'end') {\r\n        textBaseline = 'bottom';\r\n      }\r\n    }\r\n    const labelSizes = this._getLabelSizes();\r\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n      tick = ticks[i];\r\n      label = tick.label;\r\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\r\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\r\n      font = this._resolveTickFontOptions(i);\r\n      lineHeight = font.lineHeight;\r\n      lineCount = isArray(label) ? label.length : 1;\r\n      const halfCount = lineCount / 2;\r\n      const color = optsAtIndex.color;\r\n      const strokeColor = optsAtIndex.textStrokeColor;\r\n      const strokeWidth = optsAtIndex.textStrokeWidth;\r\n      if (isHorizontal) {\r\n        x = pixel;\r\n        if (position === 'top') {\r\n          if (crossAlign === 'near' || rotation !== 0) {\r\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\r\n          } else if (crossAlign === 'center') {\r\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\r\n          } else {\r\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\r\n          }\r\n        } else {\r\n          if (crossAlign === 'near' || rotation !== 0) {\r\n            textOffset = lineHeight / 2;\r\n          } else if (crossAlign === 'center') {\r\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\r\n          } else {\r\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\r\n          }\r\n        }\r\n        if (mirror) {\r\n          textOffset *= -1;\r\n        }\r\n      } else {\r\n        y = pixel;\r\n        textOffset = (1 - lineCount) * lineHeight / 2;\r\n      }\r\n      let backdrop;\r\n      if (optsAtIndex.showLabelBackdrop) {\r\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\r\n        const height = labelSizes.heights[i];\r\n        const width = labelSizes.widths[i];\r\n        let top = y + textOffset - labelPadding.top;\r\n        let left = x - labelPadding.left;\r\n        switch (textBaseline) {\r\n        case 'middle':\r\n          top -= height / 2;\r\n          break;\r\n        case 'bottom':\r\n          top -= height;\r\n          break;\r\n        }\r\n        switch (textAlign) {\r\n        case 'center':\r\n          left -= width / 2;\r\n          break;\r\n        case 'right':\r\n          left -= width;\r\n          break;\r\n        }\r\n        backdrop = {\r\n          left,\r\n          top,\r\n          width: width + labelPadding.width,\r\n          height: height + labelPadding.height,\r\n          color: optsAtIndex.backdropColor,\r\n        };\r\n      }\r\n      items.push({\r\n        rotation,\r\n        label,\r\n        font,\r\n        color,\r\n        strokeColor,\r\n        strokeWidth,\r\n        textOffset,\r\n        textAlign,\r\n        textBaseline,\r\n        translation: [x, y],\r\n        backdrop,\r\n      });\r\n    }\r\n    return items;\r\n  }\r\n  _getXAxisLabelAlignment() {\r\n    const {position, ticks} = this.options;\r\n    const rotation = -toRadians(this.labelRotation);\r\n    if (rotation) {\r\n      return position === 'top' ? 'left' : 'right';\r\n    }\r\n    let align = 'center';\r\n    if (ticks.align === 'start') {\r\n      align = 'left';\r\n    } else if (ticks.align === 'end') {\r\n      align = 'right';\r\n    }\r\n    return align;\r\n  }\r\n  _getYAxisLabelAlignment(tl) {\r\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\r\n    const labelSizes = this._getLabelSizes();\r\n    const tickAndPadding = tl + padding;\r\n    const widest = labelSizes.widest.width;\r\n    let textAlign;\r\n    let x;\r\n    if (position === 'left') {\r\n      if (mirror) {\r\n        x = this.right + padding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'left';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x += (widest / 2);\r\n        } else {\r\n          textAlign = 'right';\r\n          x += widest;\r\n        }\r\n      } else {\r\n        x = this.right - tickAndPadding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'right';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x -= (widest / 2);\r\n        } else {\r\n          textAlign = 'left';\r\n          x = this.left;\r\n        }\r\n      }\r\n    } else if (position === 'right') {\r\n      if (mirror) {\r\n        x = this.left + padding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'right';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x -= (widest / 2);\r\n        } else {\r\n          textAlign = 'left';\r\n          x -= widest;\r\n        }\r\n      } else {\r\n        x = this.left + tickAndPadding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'left';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x += widest / 2;\r\n        } else {\r\n          textAlign = 'right';\r\n          x = this.right;\r\n        }\r\n      }\r\n    } else {\r\n      textAlign = 'right';\r\n    }\r\n    return {textAlign, x};\r\n  }\r\n  _computeLabelArea() {\r\n    if (this.options.ticks.mirror) {\r\n      return;\r\n    }\r\n    const chart = this.chart;\r\n    const position = this.options.position;\r\n    if (position === 'left' || position === 'right') {\r\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\r\n    } if (position === 'top' || position === 'bottom') {\r\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\r\n    }\r\n  }\r\n  drawBackground() {\r\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\r\n    if (backgroundColor) {\r\n      ctx.save();\r\n      ctx.fillStyle = backgroundColor;\r\n      ctx.fillRect(left, top, width, height);\r\n      ctx.restore();\r\n    }\r\n  }\r\n  getLineWidthForValue(value) {\r\n    const grid = this.options.grid;\r\n    if (!this._isVisible() || !grid.display) {\r\n      return 0;\r\n    }\r\n    const ticks = this.ticks;\r\n    const index = ticks.findIndex(t => t.value === value);\r\n    if (index >= 0) {\r\n      const opts = grid.setContext(this.getContext(index));\r\n      return opts.lineWidth;\r\n    }\r\n    return 0;\r\n  }\r\n  drawGrid(chartArea) {\r\n    const grid = this.options.grid;\r\n    const ctx = this.ctx;\r\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\r\n    let i, ilen;\r\n    const drawLine = (p1, p2, style) => {\r\n      if (!style.width || !style.color) {\r\n        return;\r\n      }\r\n      ctx.save();\r\n      ctx.lineWidth = style.width;\r\n      ctx.strokeStyle = style.color;\r\n      ctx.setLineDash(style.borderDash || []);\r\n      ctx.lineDashOffset = style.borderDashOffset;\r\n      ctx.beginPath();\r\n      ctx.moveTo(p1.x, p1.y);\r\n      ctx.lineTo(p2.x, p2.y);\r\n      ctx.stroke();\r\n      ctx.restore();\r\n    };\r\n    if (grid.display) {\r\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n        const item = items[i];\r\n        if (grid.drawOnChartArea) {\r\n          drawLine(\r\n            {x: item.x1, y: item.y1},\r\n            {x: item.x2, y: item.y2},\r\n            item\r\n          );\r\n        }\r\n        if (grid.drawTicks) {\r\n          drawLine(\r\n            {x: item.tx1, y: item.ty1},\r\n            {x: item.tx2, y: item.ty2},\r\n            {\r\n              color: item.tickColor,\r\n              width: item.tickWidth,\r\n              borderDash: item.tickBorderDash,\r\n              borderDashOffset: item.tickBorderDashOffset\r\n            }\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n  drawBorder() {\r\n    const {chart, ctx, options: {grid}} = this;\r\n    const borderOpts = grid.setContext(this.getContext());\r\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\r\n    if (!axisWidth) {\r\n      return;\r\n    }\r\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\r\n    const borderValue = this._borderValue;\r\n    let x1, x2, y1, y2;\r\n    if (this.isHorizontal()) {\r\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\r\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\r\n      y1 = y2 = borderValue;\r\n    } else {\r\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\r\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\r\n      x1 = x2 = borderValue;\r\n    }\r\n    ctx.save();\r\n    ctx.lineWidth = borderOpts.borderWidth;\r\n    ctx.strokeStyle = borderOpts.borderColor;\r\n    ctx.beginPath();\r\n    ctx.moveTo(x1, y1);\r\n    ctx.lineTo(x2, y2);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n  }\r\n  drawLabels(chartArea) {\r\n    const optionTicks = this.options.ticks;\r\n    if (!optionTicks.display) {\r\n      return;\r\n    }\r\n    const ctx = this.ctx;\r\n    const area = this._computeLabelArea();\r\n    if (area) {\r\n      clipArea(ctx, area);\r\n    }\r\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\r\n    let i, ilen;\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      const item = items[i];\r\n      const tickFont = item.font;\r\n      const label = item.label;\r\n      if (item.backdrop) {\r\n        ctx.fillStyle = item.backdrop.color;\r\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\r\n      }\r\n      let y = item.textOffset;\r\n      renderText(ctx, label, 0, y, tickFont, item);\r\n    }\r\n    if (area) {\r\n      unclipArea(ctx);\r\n    }\r\n  }\r\n  drawTitle() {\r\n    const {ctx, options: {position, title, reverse}} = this;\r\n    if (!title.display) {\r\n      return;\r\n    }\r\n    const font = toFont(title.font);\r\n    const padding = toPadding(title.padding);\r\n    const align = title.align;\r\n    let offset = font.lineHeight / 2;\r\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\r\n      offset += padding.bottom;\r\n      if (isArray(title.text)) {\r\n        offset += font.lineHeight * (title.text.length - 1);\r\n      }\r\n    } else {\r\n      offset += padding.top;\r\n    }\r\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\r\n    renderText(ctx, title.text, 0, 0, font, {\r\n      color: title.color,\r\n      maxWidth,\r\n      rotation,\r\n      textAlign: titleAlign(align, position, reverse),\r\n      textBaseline: 'middle',\r\n      translation: [titleX, titleY],\r\n    });\r\n  }\r\n  draw(chartArea) {\r\n    if (!this._isVisible()) {\r\n      return;\r\n    }\r\n    this.drawBackground();\r\n    this.drawGrid(chartArea);\r\n    this.drawBorder();\r\n    this.drawTitle();\r\n    this.drawLabels(chartArea);\r\n  }\r\n  _layers() {\r\n    const opts = this.options;\r\n    const tz = opts.ticks && opts.ticks.z || 0;\r\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\r\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\r\n      return [{\r\n        z: tz,\r\n        draw: (chartArea) => {\r\n          this.draw(chartArea);\r\n        }\r\n      }];\r\n    }\r\n    return [{\r\n      z: gz,\r\n      draw: (chartArea) => {\r\n        this.drawBackground();\r\n        this.drawGrid(chartArea);\r\n        this.drawTitle();\r\n      }\r\n    }, {\r\n      z: gz + 1,\r\n      draw: () => {\r\n        this.drawBorder();\r\n      }\r\n    }, {\r\n      z: tz,\r\n      draw: (chartArea) => {\r\n        this.drawLabels(chartArea);\r\n      }\r\n    }];\r\n  }\r\n  getMatchingVisibleMetas(type) {\r\n    const metas = this.chart.getSortedVisibleDatasetMetas();\r\n    const axisID = this.axis + 'AxisID';\r\n    const result = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      const meta = metas[i];\r\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\r\n        result.push(meta);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  _resolveTickFontOptions(index) {\r\n    const opts = this.options.ticks.setContext(this.getContext(index));\r\n    return toFont(opts.font);\r\n  }\r\n  _maxDigits() {\r\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\r\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\r\n  }\r\n}\r\n\r\nclass TypedRegistry {\r\n  constructor(type, scope, override) {\r\n    this.type = type;\r\n    this.scope = scope;\r\n    this.override = override;\r\n    this.items = Object.create(null);\r\n  }\r\n  isForType(type) {\r\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\r\n  }\r\n  register(item) {\r\n    const proto = Object.getPrototypeOf(item);\r\n    let parentScope;\r\n    if (isIChartComponent(proto)) {\r\n      parentScope = this.register(proto);\r\n    }\r\n    const items = this.items;\r\n    const id = item.id;\r\n    const scope = this.scope + '.' + id;\r\n    if (!id) {\r\n      throw new Error('class does not have id: ' + item);\r\n    }\r\n    if (id in items) {\r\n      return scope;\r\n    }\r\n    items[id] = item;\r\n    registerDefaults(item, scope, parentScope);\r\n    if (this.override) {\r\n      defaults.override(item.id, item.overrides);\r\n    }\r\n    return scope;\r\n  }\r\n  get(id) {\r\n    return this.items[id];\r\n  }\r\n  unregister(item) {\r\n    const items = this.items;\r\n    const id = item.id;\r\n    const scope = this.scope;\r\n    if (id in items) {\r\n      delete items[id];\r\n    }\r\n    if (scope && id in defaults[scope]) {\r\n      delete defaults[scope][id];\r\n      if (this.override) {\r\n        delete overrides[id];\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction registerDefaults(item, scope, parentScope) {\r\n  const itemDefaults = merge(Object.create(null), [\r\n    parentScope ? defaults.get(parentScope) : {},\r\n    defaults.get(scope),\r\n    item.defaults\r\n  ]);\r\n  defaults.set(scope, itemDefaults);\r\n  if (item.defaultRoutes) {\r\n    routeDefaults(scope, item.defaultRoutes);\r\n  }\r\n  if (item.descriptors) {\r\n    defaults.describe(scope, item.descriptors);\r\n  }\r\n}\r\nfunction routeDefaults(scope, routes) {\r\n  Object.keys(routes).forEach(property => {\r\n    const propertyParts = property.split('.');\r\n    const sourceName = propertyParts.pop();\r\n    const sourceScope = [scope].concat(propertyParts).join('.');\r\n    const parts = routes[property].split('.');\r\n    const targetName = parts.pop();\r\n    const targetScope = parts.join('.');\r\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\r\n  });\r\n}\r\nfunction isIChartComponent(proto) {\r\n  return 'id' in proto && 'defaults' in proto;\r\n}\r\n\r\nclass Registry {\r\n  constructor() {\r\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\r\n    this.elements = new TypedRegistry(Element, 'elements');\r\n    this.plugins = new TypedRegistry(Object, 'plugins');\r\n    this.scales = new TypedRegistry(Scale, 'scales');\r\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\r\n  }\r\n  add(...args) {\r\n    this._each('register', args);\r\n  }\r\n  remove(...args) {\r\n    this._each('unregister', args);\r\n  }\r\n  addControllers(...args) {\r\n    this._each('register', args, this.controllers);\r\n  }\r\n  addElements(...args) {\r\n    this._each('register', args, this.elements);\r\n  }\r\n  addPlugins(...args) {\r\n    this._each('register', args, this.plugins);\r\n  }\r\n  addScales(...args) {\r\n    this._each('register', args, this.scales);\r\n  }\r\n  getController(id) {\r\n    return this._get(id, this.controllers, 'controller');\r\n  }\r\n  getElement(id) {\r\n    return this._get(id, this.elements, 'element');\r\n  }\r\n  getPlugin(id) {\r\n    return this._get(id, this.plugins, 'plugin');\r\n  }\r\n  getScale(id) {\r\n    return this._get(id, this.scales, 'scale');\r\n  }\r\n  removeControllers(...args) {\r\n    this._each('unregister', args, this.controllers);\r\n  }\r\n  removeElements(...args) {\r\n    this._each('unregister', args, this.elements);\r\n  }\r\n  removePlugins(...args) {\r\n    this._each('unregister', args, this.plugins);\r\n  }\r\n  removeScales(...args) {\r\n    this._each('unregister', args, this.scales);\r\n  }\r\n  _each(method, args, typedRegistry) {\r\n    [...args].forEach(arg => {\r\n      const reg = typedRegistry || this._getRegistryForType(arg);\r\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\r\n        this._exec(method, reg, arg);\r\n      } else {\r\n        each(arg, item => {\r\n          const itemReg = typedRegistry || this._getRegistryForType(item);\r\n          this._exec(method, itemReg, item);\r\n        });\r\n      }\r\n    });\r\n  }\r\n  _exec(method, registry, component) {\r\n    const camelMethod = _capitalize(method);\r\n    callback(component['before' + camelMethod], [], component);\r\n    registry[method](component);\r\n    callback(component['after' + camelMethod], [], component);\r\n  }\r\n  _getRegistryForType(type) {\r\n    for (let i = 0; i < this._typedRegistries.length; i++) {\r\n      const reg = this._typedRegistries[i];\r\n      if (reg.isForType(type)) {\r\n        return reg;\r\n      }\r\n    }\r\n    return this.plugins;\r\n  }\r\n  _get(id, typedRegistry, type) {\r\n    const item = typedRegistry.get(id);\r\n    if (item === undefined) {\r\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\r\n    }\r\n    return item;\r\n  }\r\n}\r\nvar registry = new Registry();\r\n\r\nclass PluginService {\r\n  constructor() {\r\n    this._init = [];\r\n  }\r\n  notify(chart, hook, args, filter) {\r\n    if (hook === 'beforeInit') {\r\n      this._init = this._createDescriptors(chart, true);\r\n      this._notify(this._init, chart, 'install');\r\n    }\r\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\r\n    const result = this._notify(descriptors, chart, hook, args);\r\n    if (hook === 'destroy') {\r\n      this._notify(descriptors, chart, 'stop');\r\n      this._notify(this._init, chart, 'uninstall');\r\n    }\r\n    return result;\r\n  }\r\n  _notify(descriptors, chart, hook, args) {\r\n    args = args || {};\r\n    for (const descriptor of descriptors) {\r\n      const plugin = descriptor.plugin;\r\n      const method = plugin[hook];\r\n      const params = [chart, args, descriptor.options];\r\n      if (callback(method, params, plugin) === false && args.cancelable) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  invalidate() {\r\n    if (!isNullOrUndef(this._cache)) {\r\n      this._oldCache = this._cache;\r\n      this._cache = undefined;\r\n    }\r\n  }\r\n  _descriptors(chart) {\r\n    if (this._cache) {\r\n      return this._cache;\r\n    }\r\n    const descriptors = this._cache = this._createDescriptors(chart);\r\n    this._notifyStateChanges(chart);\r\n    return descriptors;\r\n  }\r\n  _createDescriptors(chart, all) {\r\n    const config = chart && chart.config;\r\n    const options = valueOrDefault(config.options && config.options.plugins, {});\r\n    const plugins = allPlugins(config);\r\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\r\n  }\r\n  _notifyStateChanges(chart) {\r\n    const previousDescriptors = this._oldCache || [];\r\n    const descriptors = this._cache;\r\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\r\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\r\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\r\n  }\r\n}\r\nfunction allPlugins(config) {\r\n  const plugins = [];\r\n  const keys = Object.keys(registry.plugins.items);\r\n  for (let i = 0; i < keys.length; i++) {\r\n    plugins.push(registry.getPlugin(keys[i]));\r\n  }\r\n  const local = config.plugins || [];\r\n  for (let i = 0; i < local.length; i++) {\r\n    const plugin = local[i];\r\n    if (plugins.indexOf(plugin) === -1) {\r\n      plugins.push(plugin);\r\n    }\r\n  }\r\n  return plugins;\r\n}\r\nfunction getOpts(options, all) {\r\n  if (!all && options === false) {\r\n    return null;\r\n  }\r\n  if (options === true) {\r\n    return {};\r\n  }\r\n  return options;\r\n}\r\nfunction createDescriptors(chart, plugins, options, all) {\r\n  const result = [];\r\n  const context = chart.getContext();\r\n  for (let i = 0; i < plugins.length; i++) {\r\n    const plugin = plugins[i];\r\n    const id = plugin.id;\r\n    const opts = getOpts(options[id], all);\r\n    if (opts === null) {\r\n      continue;\r\n    }\r\n    result.push({\r\n      plugin,\r\n      options: pluginOpts(chart.config, plugin, opts, context)\r\n    });\r\n  }\r\n  return result;\r\n}\r\nfunction pluginOpts(config, plugin, opts, context) {\r\n  const keys = config.pluginScopeKeys(plugin);\r\n  const scopes = config.getOptionScopes(opts, keys);\r\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\r\n}\r\n\r\nfunction getIndexAxis(type, options) {\r\n  const datasetDefaults = defaults.datasets[type] || {};\r\n  const datasetOptions = (options.datasets || {})[type] || {};\r\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\r\n}\r\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\r\n  let axis = id;\r\n  if (id === '_index_') {\r\n    axis = indexAxis;\r\n  } else if (id === '_value_') {\r\n    axis = indexAxis === 'x' ? 'y' : 'x';\r\n  }\r\n  return axis;\r\n}\r\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\r\n  return axis === indexAxis ? '_index_' : '_value_';\r\n}\r\nfunction axisFromPosition(position) {\r\n  if (position === 'top' || position === 'bottom') {\r\n    return 'x';\r\n  }\r\n  if (position === 'left' || position === 'right') {\r\n    return 'y';\r\n  }\r\n}\r\nfunction determineAxis(id, scaleOptions) {\r\n  if (id === 'x' || id === 'y') {\r\n    return id;\r\n  }\r\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\r\n}\r\nfunction mergeScaleConfig(config, options) {\r\n  const chartDefaults = overrides[config.type] || {scales: {}};\r\n  const configScales = options.scales || {};\r\n  const chartIndexAxis = getIndexAxis(config.type, options);\r\n  const firstIDs = Object.create(null);\r\n  const scales = Object.create(null);\r\n  Object.keys(configScales).forEach(id => {\r\n    const scaleConf = configScales[id];\r\n    if (!isObject(scaleConf)) {\r\n      return console.error(`Invalid scale configuration for scale: ${id}`);\r\n    }\r\n    if (scaleConf._proxy) {\r\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\r\n    }\r\n    const axis = determineAxis(id, scaleConf);\r\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\r\n    const defaultScaleOptions = chartDefaults.scales || {};\r\n    firstIDs[axis] = firstIDs[axis] || id;\r\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\r\n  });\r\n  config.data.datasets.forEach(dataset => {\r\n    const type = dataset.type || config.type;\r\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\r\n    const datasetDefaults = overrides[type] || {};\r\n    const defaultScaleOptions = datasetDefaults.scales || {};\r\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\r\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\r\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\r\n      scales[id] = scales[id] || Object.create(null);\r\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\r\n    });\r\n  });\r\n  Object.keys(scales).forEach(key => {\r\n    const scale = scales[key];\r\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\r\n  });\r\n  return scales;\r\n}\r\nfunction initOptions(config) {\r\n  const options = config.options || (config.options = {});\r\n  options.plugins = valueOrDefault(options.plugins, {});\r\n  options.scales = mergeScaleConfig(config, options);\r\n}\r\nfunction initData(data) {\r\n  data = data || {};\r\n  data.datasets = data.datasets || [];\r\n  data.labels = data.labels || [];\r\n  return data;\r\n}\r\nfunction initConfig(config) {\r\n  config = config || {};\r\n  config.data = initData(config.data);\r\n  initOptions(config);\r\n  return config;\r\n}\r\nconst keyCache = new Map();\r\nconst keysCached = new Set();\r\nfunction cachedKeys(cacheKey, generate) {\r\n  let keys = keyCache.get(cacheKey);\r\n  if (!keys) {\r\n    keys = generate();\r\n    keyCache.set(cacheKey, keys);\r\n    keysCached.add(keys);\r\n  }\r\n  return keys;\r\n}\r\nconst addIfFound = (set, obj, key) => {\r\n  const opts = resolveObjectKey(obj, key);\r\n  if (opts !== undefined) {\r\n    set.add(opts);\r\n  }\r\n};\r\nclass Config {\r\n  constructor(config) {\r\n    this._config = initConfig(config);\r\n    this._scopeCache = new Map();\r\n    this._resolverCache = new Map();\r\n  }\r\n  get platform() {\r\n    return this._config.platform;\r\n  }\r\n  get type() {\r\n    return this._config.type;\r\n  }\r\n  set type(type) {\r\n    this._config.type = type;\r\n  }\r\n  get data() {\r\n    return this._config.data;\r\n  }\r\n  set data(data) {\r\n    this._config.data = initData(data);\r\n  }\r\n  get options() {\r\n    return this._config.options;\r\n  }\r\n  set options(options) {\r\n    this._config.options = options;\r\n  }\r\n  get plugins() {\r\n    return this._config.plugins;\r\n  }\r\n  update() {\r\n    const config = this._config;\r\n    this.clearCache();\r\n    initOptions(config);\r\n  }\r\n  clearCache() {\r\n    this._scopeCache.clear();\r\n    this._resolverCache.clear();\r\n  }\r\n  datasetScopeKeys(datasetType) {\r\n    return cachedKeys(datasetType,\r\n      () => [[\r\n        `datasets.${datasetType}`,\r\n        ''\r\n      ]]);\r\n  }\r\n  datasetAnimationScopeKeys(datasetType, transition) {\r\n    return cachedKeys(`${datasetType}.transition.${transition}`,\r\n      () => [\r\n        [\r\n          `datasets.${datasetType}.transitions.${transition}`,\r\n          `transitions.${transition}`,\r\n        ],\r\n        [\r\n          `datasets.${datasetType}`,\r\n          ''\r\n        ]\r\n      ]);\r\n  }\r\n  datasetElementScopeKeys(datasetType, elementType) {\r\n    return cachedKeys(`${datasetType}-${elementType}`,\r\n      () => [[\r\n        `datasets.${datasetType}.elements.${elementType}`,\r\n        `datasets.${datasetType}`,\r\n        `elements.${elementType}`,\r\n        ''\r\n      ]]);\r\n  }\r\n  pluginScopeKeys(plugin) {\r\n    const id = plugin.id;\r\n    const type = this.type;\r\n    return cachedKeys(`${type}-plugin-${id}`,\r\n      () => [[\r\n        `plugins.${id}`,\r\n        ...plugin.additionalOptionScopes || [],\r\n      ]]);\r\n  }\r\n  _cachedScopes(mainScope, resetCache) {\r\n    const _scopeCache = this._scopeCache;\r\n    let cache = _scopeCache.get(mainScope);\r\n    if (!cache || resetCache) {\r\n      cache = new Map();\r\n      _scopeCache.set(mainScope, cache);\r\n    }\r\n    return cache;\r\n  }\r\n  getOptionScopes(mainScope, keyLists, resetCache) {\r\n    const {options, type} = this;\r\n    const cache = this._cachedScopes(mainScope, resetCache);\r\n    const cached = cache.get(keyLists);\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    const scopes = new Set();\r\n    keyLists.forEach(keys => {\r\n      if (mainScope) {\r\n        scopes.add(mainScope);\r\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\r\n      }\r\n      keys.forEach(key => addIfFound(scopes, options, key));\r\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\r\n      keys.forEach(key => addIfFound(scopes, defaults, key));\r\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\r\n    });\r\n    const array = Array.from(scopes);\r\n    if (array.length === 0) {\r\n      array.push(Object.create(null));\r\n    }\r\n    if (keysCached.has(keyLists)) {\r\n      cache.set(keyLists, array);\r\n    }\r\n    return array;\r\n  }\r\n  chartOptionScopes() {\r\n    const {options, type} = this;\r\n    return [\r\n      options,\r\n      overrides[type] || {},\r\n      defaults.datasets[type] || {},\r\n      {type},\r\n      defaults,\r\n      descriptors\r\n    ];\r\n  }\r\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\r\n    const result = {$shared: true};\r\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\r\n    let options = resolver;\r\n    if (needContext(resolver, names)) {\r\n      result.$shared = false;\r\n      context = isFunction(context) ? context() : context;\r\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\r\n      options = _attachContext(resolver, context, subResolver);\r\n    }\r\n    for (const prop of names) {\r\n      result[prop] = options[prop];\r\n    }\r\n    return result;\r\n  }\r\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\r\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\r\n    return isObject(context)\r\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\r\n      : resolver;\r\n  }\r\n}\r\nfunction getResolver(resolverCache, scopes, prefixes) {\r\n  let cache = resolverCache.get(scopes);\r\n  if (!cache) {\r\n    cache = new Map();\r\n    resolverCache.set(scopes, cache);\r\n  }\r\n  const cacheKey = prefixes.join();\r\n  let cached = cache.get(cacheKey);\r\n  if (!cached) {\r\n    const resolver = _createResolver(scopes, prefixes);\r\n    cached = {\r\n      resolver,\r\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\r\n    };\r\n    cache.set(cacheKey, cached);\r\n  }\r\n  return cached;\r\n}\r\nfunction needContext(proxy, names) {\r\n  const {isScriptable, isIndexable} = _descriptors(proxy);\r\n  for (const prop of names) {\r\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\r\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nvar version = \"3.5.1\";\r\n\r\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\r\nfunction positionIsHorizontal(position, axis) {\r\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\r\n}\r\nfunction compare2Level(l1, l2) {\r\n  return function(a, b) {\r\n    return a[l1] === b[l1]\r\n      ? a[l2] - b[l2]\r\n      : a[l1] - b[l1];\r\n  };\r\n}\r\nfunction onAnimationsComplete(context) {\r\n  const chart = context.chart;\r\n  const animationOptions = chart.options.animation;\r\n  chart.notifyPlugins('afterRender');\r\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\r\n}\r\nfunction onAnimationProgress(context) {\r\n  const chart = context.chart;\r\n  const animationOptions = chart.options.animation;\r\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\r\n}\r\nfunction getCanvas(item) {\r\n  if (_isDomSupported() && typeof item === 'string') {\r\n    item = document.getElementById(item);\r\n  } else if (item && item.length) {\r\n    item = item[0];\r\n  }\r\n  if (item && item.canvas) {\r\n    item = item.canvas;\r\n  }\r\n  return item;\r\n}\r\nconst instances = {};\r\nconst getChart = (key) => {\r\n  const canvas = getCanvas(key);\r\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\r\n};\r\nclass Chart {\r\n  constructor(item, userConfig) {\r\n    const config = this.config = new Config(userConfig);\r\n    const initialCanvas = getCanvas(item);\r\n    const existingChart = getChart(initialCanvas);\r\n    if (existingChart) {\r\n      throw new Error(\r\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\r\n\t\t\t\t' must be destroyed before the canvas can be reused.'\r\n      );\r\n    }\r\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\r\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\r\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\r\n    const canvas = context && context.canvas;\r\n    const height = canvas && canvas.height;\r\n    const width = canvas && canvas.width;\r\n    this.id = uid();\r\n    this.ctx = context;\r\n    this.canvas = canvas;\r\n    this.width = width;\r\n    this.height = height;\r\n    this._options = options;\r\n    this._aspectRatio = this.aspectRatio;\r\n    this._layers = [];\r\n    this._metasets = [];\r\n    this._stacks = undefined;\r\n    this.boxes = [];\r\n    this.currentDevicePixelRatio = undefined;\r\n    this.chartArea = undefined;\r\n    this._active = [];\r\n    this._lastEvent = undefined;\r\n    this._listeners = {};\r\n    this._responsiveListeners = undefined;\r\n    this._sortedMetasets = [];\r\n    this.scales = {};\r\n    this._plugins = new PluginService();\r\n    this.$proxies = {};\r\n    this._hiddenIndices = {};\r\n    this.attached = false;\r\n    this._animationsDisabled = undefined;\r\n    this.$context = undefined;\r\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\r\n    instances[this.id] = this;\r\n    if (!context || !canvas) {\r\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\r\n      return;\r\n    }\r\n    animator.listen(this, 'complete', onAnimationsComplete);\r\n    animator.listen(this, 'progress', onAnimationProgress);\r\n    this._initialize();\r\n    if (this.attached) {\r\n      this.update();\r\n    }\r\n  }\r\n  get aspectRatio() {\r\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\r\n    if (!isNullOrUndef(aspectRatio)) {\r\n      return aspectRatio;\r\n    }\r\n    if (maintainAspectRatio && _aspectRatio) {\r\n      return _aspectRatio;\r\n    }\r\n    return height ? width / height : null;\r\n  }\r\n  get data() {\r\n    return this.config.data;\r\n  }\r\n  set data(data) {\r\n    this.config.data = data;\r\n  }\r\n  get options() {\r\n    return this._options;\r\n  }\r\n  set options(options) {\r\n    this.config.options = options;\r\n  }\r\n  _initialize() {\r\n    this.notifyPlugins('beforeInit');\r\n    if (this.options.responsive) {\r\n      this.resize();\r\n    } else {\r\n      retinaScale(this, this.options.devicePixelRatio);\r\n    }\r\n    this.bindEvents();\r\n    this.notifyPlugins('afterInit');\r\n    return this;\r\n  }\r\n  clear() {\r\n    clearCanvas(this.canvas, this.ctx);\r\n    return this;\r\n  }\r\n  stop() {\r\n    animator.stop(this);\r\n    return this;\r\n  }\r\n  resize(width, height) {\r\n    if (!animator.running(this)) {\r\n      this._resize(width, height);\r\n    } else {\r\n      this._resizeBeforeDraw = {width, height};\r\n    }\r\n  }\r\n  _resize(width, height) {\r\n    const options = this.options;\r\n    const canvas = this.canvas;\r\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\r\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\r\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\r\n    const mode = this.width ? 'resize' : 'attach';\r\n    this.width = newSize.width;\r\n    this.height = newSize.height;\r\n    this._aspectRatio = this.aspectRatio;\r\n    if (!retinaScale(this, newRatio, true)) {\r\n      return;\r\n    }\r\n    this.notifyPlugins('resize', {size: newSize});\r\n    callback(options.onResize, [this, newSize], this);\r\n    if (this.attached) {\r\n      if (this._doResize(mode)) {\r\n        this.render();\r\n      }\r\n    }\r\n  }\r\n  ensureScalesHaveIDs() {\r\n    const options = this.options;\r\n    const scalesOptions = options.scales || {};\r\n    each(scalesOptions, (axisOptions, axisID) => {\r\n      axisOptions.id = axisID;\r\n    });\r\n  }\r\n  buildOrUpdateScales() {\r\n    const options = this.options;\r\n    const scaleOpts = options.scales;\r\n    const scales = this.scales;\r\n    const updated = Object.keys(scales).reduce((obj, id) => {\r\n      obj[id] = false;\r\n      return obj;\r\n    }, {});\r\n    let items = [];\r\n    if (scaleOpts) {\r\n      items = items.concat(\r\n        Object.keys(scaleOpts).map((id) => {\r\n          const scaleOptions = scaleOpts[id];\r\n          const axis = determineAxis(id, scaleOptions);\r\n          const isRadial = axis === 'r';\r\n          const isHorizontal = axis === 'x';\r\n          return {\r\n            options: scaleOptions,\r\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\r\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\r\n          };\r\n        })\r\n      );\r\n    }\r\n    each(items, (item) => {\r\n      const scaleOptions = item.options;\r\n      const id = scaleOptions.id;\r\n      const axis = determineAxis(id, scaleOptions);\r\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\r\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\r\n        scaleOptions.position = item.dposition;\r\n      }\r\n      updated[id] = true;\r\n      let scale = null;\r\n      if (id in scales && scales[id].type === scaleType) {\r\n        scale = scales[id];\r\n      } else {\r\n        const scaleClass = registry.getScale(scaleType);\r\n        scale = new scaleClass({\r\n          id,\r\n          type: scaleType,\r\n          ctx: this.ctx,\r\n          chart: this\r\n        });\r\n        scales[scale.id] = scale;\r\n      }\r\n      scale.init(scaleOptions, options);\r\n    });\r\n    each(updated, (hasUpdated, id) => {\r\n      if (!hasUpdated) {\r\n        delete scales[id];\r\n      }\r\n    });\r\n    each(scales, (scale) => {\r\n      layouts.configure(this, scale, scale.options);\r\n      layouts.addBox(this, scale);\r\n    });\r\n  }\r\n  _updateMetasets() {\r\n    const metasets = this._metasets;\r\n    const numData = this.data.datasets.length;\r\n    const numMeta = metasets.length;\r\n    metasets.sort((a, b) => a.index - b.index);\r\n    if (numMeta > numData) {\r\n      for (let i = numData; i < numMeta; ++i) {\r\n        this._destroyDatasetMeta(i);\r\n      }\r\n      metasets.splice(numData, numMeta - numData);\r\n    }\r\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\r\n  }\r\n  _removeUnreferencedMetasets() {\r\n    const {_metasets: metasets, data: {datasets}} = this;\r\n    if (metasets.length > datasets.length) {\r\n      delete this._stacks;\r\n    }\r\n    metasets.forEach((meta, index) => {\r\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\r\n        this._destroyDatasetMeta(index);\r\n      }\r\n    });\r\n  }\r\n  buildOrUpdateControllers() {\r\n    const newControllers = [];\r\n    const datasets = this.data.datasets;\r\n    let i, ilen;\r\n    this._removeUnreferencedMetasets();\r\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\r\n      const dataset = datasets[i];\r\n      let meta = this.getDatasetMeta(i);\r\n      const type = dataset.type || this.config.type;\r\n      if (meta.type && meta.type !== type) {\r\n        this._destroyDatasetMeta(i);\r\n        meta = this.getDatasetMeta(i);\r\n      }\r\n      meta.type = type;\r\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\r\n      meta.order = dataset.order || 0;\r\n      meta.index = i;\r\n      meta.label = '' + dataset.label;\r\n      meta.visible = this.isDatasetVisible(i);\r\n      if (meta.controller) {\r\n        meta.controller.updateIndex(i);\r\n        meta.controller.linkScales();\r\n      } else {\r\n        const ControllerClass = registry.getController(type);\r\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\r\n        Object.assign(ControllerClass.prototype, {\r\n          dataElementType: registry.getElement(dataElementType),\r\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\r\n        });\r\n        meta.controller = new ControllerClass(this, i);\r\n        newControllers.push(meta.controller);\r\n      }\r\n    }\r\n    this._updateMetasets();\r\n    return newControllers;\r\n  }\r\n  _resetElements() {\r\n    each(this.data.datasets, (dataset, datasetIndex) => {\r\n      this.getDatasetMeta(datasetIndex).controller.reset();\r\n    }, this);\r\n  }\r\n  reset() {\r\n    this._resetElements();\r\n    this.notifyPlugins('reset');\r\n  }\r\n  update(mode) {\r\n    const config = this.config;\r\n    config.update();\r\n    this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\r\n    each(this.scales, (scale) => {\r\n      layouts.removeBox(this, scale);\r\n    });\r\n    const animsDisabled = this._animationsDisabled = !this.options.animation;\r\n    this.ensureScalesHaveIDs();\r\n    this.buildOrUpdateScales();\r\n    const existingEvents = new Set(Object.keys(this._listeners));\r\n    const newEvents = new Set(this.options.events);\r\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== this.options.responsive) {\r\n      this.unbindEvents();\r\n      this.bindEvents();\r\n    }\r\n    this._plugins.invalidate();\r\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const newControllers = this.buildOrUpdateControllers();\r\n    this.notifyPlugins('beforeElementsUpdate');\r\n    let minPadding = 0;\r\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\r\n      const {controller} = this.getDatasetMeta(i);\r\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\r\n      controller.buildOrUpdateElements(reset);\r\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\r\n    }\r\n    this._minPadding = minPadding;\r\n    this._updateLayout(minPadding);\r\n    if (!animsDisabled) {\r\n      each(newControllers, (controller) => {\r\n        controller.reset();\r\n      });\r\n    }\r\n    this._updateDatasets(mode);\r\n    this.notifyPlugins('afterUpdate', {mode});\r\n    this._layers.sort(compare2Level('z', '_idx'));\r\n    if (this._lastEvent) {\r\n      this._eventHandler(this._lastEvent, true);\r\n    }\r\n    this.render();\r\n  }\r\n  _updateLayout(minPadding) {\r\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    layouts.update(this, this.width, this.height, minPadding);\r\n    const area = this.chartArea;\r\n    const noArea = area.width <= 0 || area.height <= 0;\r\n    this._layers = [];\r\n    each(this.boxes, (box) => {\r\n      if (noArea && box.position === 'chartArea') {\r\n        return;\r\n      }\r\n      if (box.configure) {\r\n        box.configure();\r\n      }\r\n      this._layers.push(...box._layers());\r\n    }, this);\r\n    this._layers.forEach((item, index) => {\r\n      item._idx = index;\r\n    });\r\n    this.notifyPlugins('afterLayout');\r\n  }\r\n  _updateDatasets(mode) {\r\n    const isFunction = typeof mode === 'function';\r\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n      this._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\r\n    }\r\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\r\n  }\r\n  _updateDataset(index, mode) {\r\n    const meta = this.getDatasetMeta(index);\r\n    const args = {meta, index, mode, cancelable: true};\r\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\r\n      return;\r\n    }\r\n    meta.controller._update(mode);\r\n    args.cancelable = false;\r\n    this.notifyPlugins('afterDatasetUpdate', args);\r\n  }\r\n  render() {\r\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    if (animator.has(this)) {\r\n      if (this.attached && !animator.running(this)) {\r\n        animator.start(this);\r\n      }\r\n    } else {\r\n      this.draw();\r\n      onAnimationsComplete({chart: this});\r\n    }\r\n  }\r\n  draw() {\r\n    let i;\r\n    if (this._resizeBeforeDraw) {\r\n      const {width, height} = this._resizeBeforeDraw;\r\n      this._resize(width, height);\r\n      this._resizeBeforeDraw = null;\r\n    }\r\n    this.clear();\r\n    if (this.width <= 0 || this.height <= 0) {\r\n      return;\r\n    }\r\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const layers = this._layers;\r\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\r\n      layers[i].draw(this.chartArea);\r\n    }\r\n    this._drawDatasets();\r\n    for (; i < layers.length; ++i) {\r\n      layers[i].draw(this.chartArea);\r\n    }\r\n    this.notifyPlugins('afterDraw');\r\n  }\r\n  _getSortedDatasetMetas(filterVisible) {\r\n    const metasets = this._sortedMetasets;\r\n    const result = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n      const meta = metasets[i];\r\n      if (!filterVisible || meta.visible) {\r\n        result.push(meta);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  getSortedVisibleDatasetMetas() {\r\n    return this._getSortedDatasetMetas(true);\r\n  }\r\n  _drawDatasets() {\r\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const metasets = this.getSortedVisibleDatasetMetas();\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      this._drawDataset(metasets[i]);\r\n    }\r\n    this.notifyPlugins('afterDatasetsDraw');\r\n  }\r\n  _drawDataset(meta) {\r\n    const ctx = this.ctx;\r\n    const clip = meta._clip;\r\n    const useClip = !clip.disabled;\r\n    const area = this.chartArea;\r\n    const args = {\r\n      meta,\r\n      index: meta.index,\r\n      cancelable: true\r\n    };\r\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\r\n      return;\r\n    }\r\n    if (useClip) {\r\n      clipArea(ctx, {\r\n        left: clip.left === false ? 0 : area.left - clip.left,\r\n        right: clip.right === false ? this.width : area.right + clip.right,\r\n        top: clip.top === false ? 0 : area.top - clip.top,\r\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\r\n      });\r\n    }\r\n    meta.controller.draw();\r\n    if (useClip) {\r\n      unclipArea(ctx);\r\n    }\r\n    args.cancelable = false;\r\n    this.notifyPlugins('afterDatasetDraw', args);\r\n  }\r\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\r\n    const method = Interaction.modes[mode];\r\n    if (typeof method === 'function') {\r\n      return method(this, e, options, useFinalPosition);\r\n    }\r\n    return [];\r\n  }\r\n  getDatasetMeta(datasetIndex) {\r\n    const dataset = this.data.datasets[datasetIndex];\r\n    const metasets = this._metasets;\r\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\r\n    if (!meta) {\r\n      meta = {\r\n        type: null,\r\n        data: [],\r\n        dataset: null,\r\n        controller: null,\r\n        hidden: null,\r\n        xAxisID: null,\r\n        yAxisID: null,\r\n        order: dataset && dataset.order || 0,\r\n        index: datasetIndex,\r\n        _dataset: dataset,\r\n        _parsed: [],\r\n        _sorted: false\r\n      };\r\n      metasets.push(meta);\r\n    }\r\n    return meta;\r\n  }\r\n  getContext() {\r\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\r\n  }\r\n  getVisibleDatasetCount() {\r\n    return this.getSortedVisibleDatasetMetas().length;\r\n  }\r\n  isDatasetVisible(datasetIndex) {\r\n    const dataset = this.data.datasets[datasetIndex];\r\n    if (!dataset) {\r\n      return false;\r\n    }\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\r\n  }\r\n  setDatasetVisibility(datasetIndex, visible) {\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    meta.hidden = !visible;\r\n  }\r\n  toggleDataVisibility(index) {\r\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\r\n  }\r\n  getDataVisibility(index) {\r\n    return !this._hiddenIndices[index];\r\n  }\r\n  _updateVisibility(datasetIndex, dataIndex, visible) {\r\n    const mode = visible ? 'show' : 'hide';\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    const anims = meta.controller._resolveAnimations(undefined, mode);\r\n    if (defined(dataIndex)) {\r\n      meta.data[dataIndex].hidden = !visible;\r\n      this.update();\r\n    } else {\r\n      this.setDatasetVisibility(datasetIndex, visible);\r\n      anims.update(meta, {visible});\r\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\r\n    }\r\n  }\r\n  hide(datasetIndex, dataIndex) {\r\n    this._updateVisibility(datasetIndex, dataIndex, false);\r\n  }\r\n  show(datasetIndex, dataIndex) {\r\n    this._updateVisibility(datasetIndex, dataIndex, true);\r\n  }\r\n  _destroyDatasetMeta(datasetIndex) {\r\n    const meta = this._metasets && this._metasets[datasetIndex];\r\n    if (meta && meta.controller) {\r\n      meta.controller._destroy();\r\n      delete this._metasets[datasetIndex];\r\n    }\r\n  }\r\n  _stop() {\r\n    let i, ilen;\r\n    this.stop();\r\n    animator.remove(this);\r\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n      this._destroyDatasetMeta(i);\r\n    }\r\n  }\r\n  destroy() {\r\n    const {canvas, ctx} = this;\r\n    this._stop();\r\n    this.config.clearCache();\r\n    if (canvas) {\r\n      this.unbindEvents();\r\n      clearCanvas(canvas, ctx);\r\n      this.platform.releaseContext(ctx);\r\n      this.canvas = null;\r\n      this.ctx = null;\r\n    }\r\n    this.notifyPlugins('destroy');\r\n    delete instances[this.id];\r\n  }\r\n  toBase64Image(...args) {\r\n    return this.canvas.toDataURL(...args);\r\n  }\r\n  bindEvents() {\r\n    this.bindUserEvents();\r\n    if (this.options.responsive) {\r\n      this.bindResponsiveEvents();\r\n    } else {\r\n      this.attached = true;\r\n    }\r\n  }\r\n  bindUserEvents() {\r\n    const listeners = this._listeners;\r\n    const platform = this.platform;\r\n    const _add = (type, listener) => {\r\n      platform.addEventListener(this, type, listener);\r\n      listeners[type] = listener;\r\n    };\r\n    const listener = (e, x, y) => {\r\n      e.offsetX = x;\r\n      e.offsetY = y;\r\n      this._eventHandler(e);\r\n    };\r\n    each(this.options.events, (type) => _add(type, listener));\r\n  }\r\n  bindResponsiveEvents() {\r\n    if (!this._responsiveListeners) {\r\n      this._responsiveListeners = {};\r\n    }\r\n    const listeners = this._responsiveListeners;\r\n    const platform = this.platform;\r\n    const _add = (type, listener) => {\r\n      platform.addEventListener(this, type, listener);\r\n      listeners[type] = listener;\r\n    };\r\n    const _remove = (type, listener) => {\r\n      if (listeners[type]) {\r\n        platform.removeEventListener(this, type, listener);\r\n        delete listeners[type];\r\n      }\r\n    };\r\n    const listener = (width, height) => {\r\n      if (this.canvas) {\r\n        this.resize(width, height);\r\n      }\r\n    };\r\n    let detached;\r\n    const attached = () => {\r\n      _remove('attach', attached);\r\n      this.attached = true;\r\n      this.resize();\r\n      _add('resize', listener);\r\n      _add('detach', detached);\r\n    };\r\n    detached = () => {\r\n      this.attached = false;\r\n      _remove('resize', listener);\r\n      this._stop();\r\n      this._resize(0, 0);\r\n      _add('attach', attached);\r\n    };\r\n    if (platform.isAttached(this.canvas)) {\r\n      attached();\r\n    } else {\r\n      detached();\r\n    }\r\n  }\r\n  unbindEvents() {\r\n    each(this._listeners, (listener, type) => {\r\n      this.platform.removeEventListener(this, type, listener);\r\n    });\r\n    this._listeners = {};\r\n    each(this._responsiveListeners, (listener, type) => {\r\n      this.platform.removeEventListener(this, type, listener);\r\n    });\r\n    this._responsiveListeners = undefined;\r\n  }\r\n  updateHoverStyle(items, mode, enabled) {\r\n    const prefix = enabled ? 'set' : 'remove';\r\n    let meta, item, i, ilen;\r\n    if (mode === 'dataset') {\r\n      meta = this.getDatasetMeta(items[0].datasetIndex);\r\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\r\n    }\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      item = items[i];\r\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\r\n      if (controller) {\r\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\r\n      }\r\n    }\r\n  }\r\n  getActiveElements() {\r\n    return this._active || [];\r\n  }\r\n  setActiveElements(activeElements) {\r\n    const lastActive = this._active || [];\r\n    const active = activeElements.map(({datasetIndex, index}) => {\r\n      const meta = this.getDatasetMeta(datasetIndex);\r\n      if (!meta) {\r\n        throw new Error('No dataset found at index ' + datasetIndex);\r\n      }\r\n      return {\r\n        datasetIndex,\r\n        element: meta.data[index],\r\n        index,\r\n      };\r\n    });\r\n    const changed = !_elementsEqual(active, lastActive);\r\n    if (changed) {\r\n      this._active = active;\r\n      this._updateHoverStyles(active, lastActive);\r\n    }\r\n  }\r\n  notifyPlugins(hook, args, filter) {\r\n    return this._plugins.notify(this, hook, args, filter);\r\n  }\r\n  _updateHoverStyles(active, lastActive, replay) {\r\n    const hoverOptions = this.options.hover;\r\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\r\n    const deactivated = diff(lastActive, active);\r\n    const activated = replay ? active : diff(active, lastActive);\r\n    if (deactivated.length) {\r\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\r\n    }\r\n    if (activated.length && hoverOptions.mode) {\r\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\r\n    }\r\n  }\r\n  _eventHandler(e, replay) {\r\n    const args = {event: e, replay, cancelable: true};\r\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\r\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\r\n      return;\r\n    }\r\n    const changed = this._handleEvent(e, replay);\r\n    args.cancelable = false;\r\n    this.notifyPlugins('afterEvent', args, eventFilter);\r\n    if (changed || args.changed) {\r\n      this.render();\r\n    }\r\n    return this;\r\n  }\r\n  _handleEvent(e, replay) {\r\n    const {_active: lastActive = [], options} = this;\r\n    const hoverOptions = options.hover;\r\n    const useFinalPosition = replay;\r\n    let active = [];\r\n    let changed = false;\r\n    let lastEvent = null;\r\n    if (e.type !== 'mouseout') {\r\n      active = this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\r\n      lastEvent = e.type === 'click' ? this._lastEvent : e;\r\n    }\r\n    this._lastEvent = null;\r\n    if (_isPointInArea(e, this.chartArea, this._minPadding)) {\r\n      callback(options.onHover, [e, active, this], this);\r\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\r\n        callback(options.onClick, [e, active, this], this);\r\n      }\r\n    }\r\n    changed = !_elementsEqual(active, lastActive);\r\n    if (changed || replay) {\r\n      this._active = active;\r\n      this._updateHoverStyles(active, lastActive, replay);\r\n    }\r\n    this._lastEvent = lastEvent;\r\n    return changed;\r\n  }\r\n}\r\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\r\nconst enumerable = true;\r\nObject.defineProperties(Chart, {\r\n  defaults: {\r\n    enumerable,\r\n    value: defaults\r\n  },\r\n  instances: {\r\n    enumerable,\r\n    value: instances\r\n  },\r\n  overrides: {\r\n    enumerable,\r\n    value: overrides\r\n  },\r\n  registry: {\r\n    enumerable,\r\n    value: registry\r\n  },\r\n  version: {\r\n    enumerable,\r\n    value: version\r\n  },\r\n  getChart: {\r\n    enumerable,\r\n    value: getChart\r\n  },\r\n  register: {\r\n    enumerable,\r\n    value: (...items) => {\r\n      registry.add(...items);\r\n      invalidatePlugins();\r\n    }\r\n  },\r\n  unregister: {\r\n    enumerable,\r\n    value: (...items) => {\r\n      registry.remove(...items);\r\n      invalidatePlugins();\r\n    }\r\n  }\r\n});\r\n\r\nfunction abstract() {\r\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\r\n}\r\nclass DateAdapter {\r\n  constructor(options) {\r\n    this.options = options || {};\r\n  }\r\n  formats() {\r\n    return abstract();\r\n  }\r\n  parse(value, format) {\r\n    return abstract();\r\n  }\r\n  format(timestamp, format) {\r\n    return abstract();\r\n  }\r\n  add(timestamp, amount, unit) {\r\n    return abstract();\r\n  }\r\n  diff(a, b, unit) {\r\n    return abstract();\r\n  }\r\n  startOf(timestamp, unit, weekday) {\r\n    return abstract();\r\n  }\r\n  endOf(timestamp, unit) {\r\n    return abstract();\r\n  }\r\n}\r\nDateAdapter.override = function(members) {\r\n  Object.assign(DateAdapter.prototype, members);\r\n};\r\nvar _adapters = {\r\n  _date: DateAdapter\r\n};\r\n\r\nfunction getAllScaleValues(scale, type) {\r\n  if (!scale._cache.$bar) {\r\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\r\n    let values = [];\r\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\r\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\r\n    }\r\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\r\n  }\r\n  return scale._cache.$bar;\r\n}\r\nfunction computeMinSampleSize(meta) {\r\n  const scale = meta.iScale;\r\n  const values = getAllScaleValues(scale, meta.type);\r\n  let min = scale._length;\r\n  let i, ilen, curr, prev;\r\n  const updateMinAndPrev = () => {\r\n    if (curr === 32767 || curr === -32768) {\r\n      return;\r\n    }\r\n    if (defined(prev)) {\r\n      min = Math.min(min, Math.abs(curr - prev) || min);\r\n    }\r\n    prev = curr;\r\n  };\r\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\r\n    curr = scale.getPixelForValue(values[i]);\r\n    updateMinAndPrev();\r\n  }\r\n  prev = undefined;\r\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\r\n    curr = scale.getPixelForTick(i);\r\n    updateMinAndPrev();\r\n  }\r\n  return min;\r\n}\r\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\r\n  const thickness = options.barThickness;\r\n  let size, ratio;\r\n  if (isNullOrUndef(thickness)) {\r\n    size = ruler.min * options.categoryPercentage;\r\n    ratio = options.barPercentage;\r\n  } else {\r\n    size = thickness * stackCount;\r\n    ratio = 1;\r\n  }\r\n  return {\r\n    chunk: size / stackCount,\r\n    ratio,\r\n    start: ruler.pixels[index] - (size / 2)\r\n  };\r\n}\r\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\r\n  const pixels = ruler.pixels;\r\n  const curr = pixels[index];\r\n  let prev = index > 0 ? pixels[index - 1] : null;\r\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\r\n  const percent = options.categoryPercentage;\r\n  if (prev === null) {\r\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\r\n  }\r\n  if (next === null) {\r\n    next = curr + curr - prev;\r\n  }\r\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\r\n  const size = Math.abs(next - prev) / 2 * percent;\r\n  return {\r\n    chunk: size / stackCount,\r\n    ratio: options.barPercentage,\r\n    start\r\n  };\r\n}\r\nfunction parseFloatBar(entry, item, vScale, i) {\r\n  const startValue = vScale.parse(entry[0], i);\r\n  const endValue = vScale.parse(entry[1], i);\r\n  const min = Math.min(startValue, endValue);\r\n  const max = Math.max(startValue, endValue);\r\n  let barStart = min;\r\n  let barEnd = max;\r\n  if (Math.abs(min) > Math.abs(max)) {\r\n    barStart = max;\r\n    barEnd = min;\r\n  }\r\n  item[vScale.axis] = barEnd;\r\n  item._custom = {\r\n    barStart,\r\n    barEnd,\r\n    start: startValue,\r\n    end: endValue,\r\n    min,\r\n    max\r\n  };\r\n}\r\nfunction parseValue(entry, item, vScale, i) {\r\n  if (isArray(entry)) {\r\n    parseFloatBar(entry, item, vScale, i);\r\n  } else {\r\n    item[vScale.axis] = vScale.parse(entry, i);\r\n  }\r\n  return item;\r\n}\r\nfunction parseArrayOrPrimitive(meta, data, start, count) {\r\n  const iScale = meta.iScale;\r\n  const vScale = meta.vScale;\r\n  const labels = iScale.getLabels();\r\n  const singleScale = iScale === vScale;\r\n  const parsed = [];\r\n  let i, ilen, item, entry;\r\n  for (i = start, ilen = start + count; i < ilen; ++i) {\r\n    entry = data[i];\r\n    item = {};\r\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\r\n    parsed.push(parseValue(entry, item, vScale, i));\r\n  }\r\n  return parsed;\r\n}\r\nfunction isFloatBar(custom) {\r\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\r\n}\r\nfunction barSign(size, vScale, actualBase) {\r\n  if (size !== 0) {\r\n    return sign(size);\r\n  }\r\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\r\n}\r\nfunction borderProps(properties) {\r\n  let reverse, start, end, top, bottom;\r\n  if (properties.horizontal) {\r\n    reverse = properties.base > properties.x;\r\n    start = 'left';\r\n    end = 'right';\r\n  } else {\r\n    reverse = properties.base < properties.y;\r\n    start = 'bottom';\r\n    end = 'top';\r\n  }\r\n  if (reverse) {\r\n    top = 'end';\r\n    bottom = 'start';\r\n  } else {\r\n    top = 'start';\r\n    bottom = 'end';\r\n  }\r\n  return {start, end, reverse, top, bottom};\r\n}\r\nfunction setBorderSkipped(properties, options, stack, index) {\r\n  let edge = options.borderSkipped;\r\n  const res = {};\r\n  if (!edge) {\r\n    properties.borderSkipped = res;\r\n    return;\r\n  }\r\n  const {start, end, reverse, top, bottom} = borderProps(properties);\r\n  if (edge === 'middle' && stack) {\r\n    properties.enableBorderRadius = true;\r\n    if ((stack._top || 0) === index) {\r\n      edge = top;\r\n    } else if ((stack._bottom || 0) === index) {\r\n      edge = bottom;\r\n    } else {\r\n      res[parseEdge(bottom, start, end, reverse)] = true;\r\n      edge = top;\r\n    }\r\n  }\r\n  res[parseEdge(edge, start, end, reverse)] = true;\r\n  properties.borderSkipped = res;\r\n}\r\nfunction parseEdge(edge, a, b, reverse) {\r\n  if (reverse) {\r\n    edge = swap(edge, a, b);\r\n    edge = startEnd(edge, b, a);\r\n  } else {\r\n    edge = startEnd(edge, a, b);\r\n  }\r\n  return edge;\r\n}\r\nfunction swap(orig, v1, v2) {\r\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\r\n}\r\nfunction startEnd(v, start, end) {\r\n  return v === 'start' ? start : v === 'end' ? end : v;\r\n}\r\nclass BarController extends DatasetController {\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    return parseArrayOrPrimitive(meta, data, start, count);\r\n  }\r\n  parseArrayData(meta, data, start, count) {\r\n    return parseArrayOrPrimitive(meta, data, start, count);\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const {iScale, vScale} = meta;\r\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\r\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\r\n    const parsed = [];\r\n    let i, ilen, item, obj;\r\n    for (i = start, ilen = start + count; i < ilen; ++i) {\r\n      obj = data[i];\r\n      item = {};\r\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\r\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\r\n    }\r\n    return parsed;\r\n  }\r\n  updateRangeFromParsed(range, scale, parsed, stack) {\r\n    super.updateRangeFromParsed(range, scale, parsed, stack);\r\n    const custom = parsed._custom;\r\n    if (custom && scale === this._cachedMeta.vScale) {\r\n      range.min = Math.min(range.min, custom.min);\r\n      range.max = Math.max(range.max, custom.max);\r\n    }\r\n  }\r\n  getMaxOverflow() {\r\n    return 0;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const {iScale, vScale} = meta;\r\n    const parsed = this.getParsed(index);\r\n    const custom = parsed._custom;\r\n    const value = isFloatBar(custom)\r\n      ? '[' + custom.start + ', ' + custom.end + ']'\r\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\r\n    return {\r\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\r\n      value\r\n    };\r\n  }\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    super.initialize();\r\n    const meta = this._cachedMeta;\r\n    meta.stack = this.getDataset().stack;\r\n  }\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    this.updateElements(meta.data, 0, meta.data.length, mode);\r\n  }\r\n  updateElements(bars, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {index, _cachedMeta: {vScale}} = this;\r\n    const base = vScale.getBasePixel();\r\n    const horizontal = vScale.isHorizontal();\r\n    const ruler = this._getRuler();\r\n    const firstOpts = this.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = this.getSharedOptions(firstOpts);\r\n    const includeOptions = this.includeOptions(mode, sharedOptions);\r\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n    for (let i = start; i < start + count; i++) {\r\n      const parsed = this.getParsed(i);\r\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\r\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\r\n      const stack = (parsed._stacks || {})[vScale.axis];\r\n      const properties = {\r\n        horizontal,\r\n        base: vpixels.base,\r\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\r\n        x: horizontal ? vpixels.head : ipixels.center,\r\n        y: horizontal ? ipixels.center : vpixels.head,\r\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\r\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\r\n      };\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\r\n      }\r\n      setBorderSkipped(properties, properties.options || bars[i].options, stack, index);\r\n      this.updateElement(bars[i], i, properties, mode);\r\n    }\r\n  }\r\n  _getStacks(last, dataIndex) {\r\n    const meta = this._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\r\n    const stacked = iScale.options.stacked;\r\n    const ilen = metasets.length;\r\n    const stacks = [];\r\n    let i, item;\r\n    for (i = 0; i < ilen; ++i) {\r\n      item = metasets[i];\r\n      if (!item.controller.options.grouped) {\r\n        continue;\r\n      }\r\n      if (typeof dataIndex !== 'undefined') {\r\n        const val = item.controller.getParsed(dataIndex)[\r\n          item.controller._cachedMeta.vScale.axis\r\n        ];\r\n        if (isNullOrUndef(val) || isNaN(val)) {\r\n          continue;\r\n        }\r\n      }\r\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\r\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\r\n        stacks.push(item.stack);\r\n      }\r\n      if (item.index === last) {\r\n        break;\r\n      }\r\n    }\r\n    if (!stacks.length) {\r\n      stacks.push(undefined);\r\n    }\r\n    return stacks;\r\n  }\r\n  _getStackCount(index) {\r\n    return this._getStacks(undefined, index).length;\r\n  }\r\n  _getStackIndex(datasetIndex, name, dataIndex) {\r\n    const stacks = this._getStacks(datasetIndex, dataIndex);\r\n    const index = (name !== undefined)\r\n      ? stacks.indexOf(name)\r\n      : -1;\r\n    return (index === -1)\r\n      ? stacks.length - 1\r\n      : index;\r\n  }\r\n  _getRuler() {\r\n    const opts = this.options;\r\n    const meta = this._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const pixels = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\r\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\r\n    }\r\n    const barThickness = opts.barThickness;\r\n    const min = barThickness || computeMinSampleSize(meta);\r\n    return {\r\n      min,\r\n      pixels,\r\n      start: iScale._startPixel,\r\n      end: iScale._endPixel,\r\n      stackCount: this._getStackCount(),\r\n      scale: iScale,\r\n      grouped: opts.grouped,\r\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\r\n    };\r\n  }\r\n  _calculateBarValuePixels(index) {\r\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\r\n    const actualBase = baseValue || 0;\r\n    const parsed = this.getParsed(index);\r\n    const custom = parsed._custom;\r\n    const floating = isFloatBar(custom);\r\n    let value = parsed[vScale.axis];\r\n    let start = 0;\r\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\r\n    let head, size;\r\n    if (length !== value) {\r\n      start = length - value;\r\n      length = value;\r\n    }\r\n    if (floating) {\r\n      value = custom.barStart;\r\n      length = custom.barEnd - custom.barStart;\r\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\r\n        start = 0;\r\n      }\r\n      start += value;\r\n    }\r\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\r\n    let base = vScale.getPixelForValue(startValue);\r\n    if (this.chart.getDataVisibility(index)) {\r\n      head = vScale.getPixelForValue(start + length);\r\n    } else {\r\n      head = base;\r\n    }\r\n    size = head - base;\r\n    if (Math.abs(size) < minBarLength) {\r\n      size = barSign(size, vScale, actualBase) * minBarLength;\r\n      if (value === actualBase) {\r\n        base -= size / 2;\r\n      }\r\n      head = base + size;\r\n    }\r\n    if (base === vScale.getPixelForValue(actualBase)) {\r\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\r\n      base += halfGrid;\r\n      size -= halfGrid;\r\n    }\r\n    return {\r\n      size,\r\n      base,\r\n      head,\r\n      center: head + size / 2\r\n    };\r\n  }\r\n  _calculateBarIndexPixels(index, ruler) {\r\n    const scale = ruler.scale;\r\n    const options = this.options;\r\n    const skipNull = options.skipNull;\r\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\r\n    let center, size;\r\n    if (ruler.grouped) {\r\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\r\n      const range = options.barThickness === 'flex'\r\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\r\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\r\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\r\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\r\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\r\n    } else {\r\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\r\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\r\n    }\r\n    return {\r\n      base: center - size / 2,\r\n      head: center + size / 2,\r\n      center,\r\n      size\r\n    };\r\n  }\r\n  draw() {\r\n    const meta = this._cachedMeta;\r\n    const vScale = meta.vScale;\r\n    const rects = meta.data;\r\n    const ilen = rects.length;\r\n    let i = 0;\r\n    for (; i < ilen; ++i) {\r\n      if (this.getParsed(i)[vScale.axis] !== null) {\r\n        rects[i].draw(this._ctx);\r\n      }\r\n    }\r\n  }\r\n}\r\nBarController.id = 'bar';\r\nBarController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'bar',\r\n  categoryPercentage: 0.8,\r\n  barPercentage: 0.9,\r\n  grouped: true,\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'base', 'width', 'height']\r\n    }\r\n  }\r\n};\r\nBarController.overrides = {\r\n  scales: {\r\n    _index_: {\r\n      type: 'category',\r\n      offset: true,\r\n      grid: {\r\n        offset: true\r\n      }\r\n    },\r\n    _value_: {\r\n      type: 'linear',\r\n      beginAtZero: true,\r\n    }\r\n  }\r\n};\r\n\r\nclass BubbleController extends DatasetController {\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    super.initialize();\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const {xScale, yScale} = meta;\r\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n    const parsed = [];\r\n    let i, ilen, item;\r\n    for (i = start, ilen = start + count; i < ilen; ++i) {\r\n      item = data[i];\r\n      parsed.push({\r\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\r\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\r\n        _custom: item && item.r && +item.r\r\n      });\r\n    }\r\n    return parsed;\r\n  }\r\n  getMaxOverflow() {\r\n    const {data, _parsed} = this._cachedMeta;\r\n    let max = 0;\r\n    for (let i = data.length - 1; i >= 0; --i) {\r\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\r\n    }\r\n    return max > 0 && max;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const {xScale, yScale} = meta;\r\n    const parsed = this.getParsed(index);\r\n    const x = xScale.getLabelForValue(parsed.x);\r\n    const y = yScale.getLabelForValue(parsed.y);\r\n    const r = parsed._custom;\r\n    return {\r\n      label: meta.label,\r\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\r\n    };\r\n  }\r\n  update(mode) {\r\n    const points = this._cachedMeta.data;\r\n    this.updateElements(points, 0, points.length, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {iScale, vScale} = this._cachedMeta;\r\n    const firstOpts = this.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = this.getSharedOptions(firstOpts);\r\n    const includeOptions = this.includeOptions(mode, sharedOptions);\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    for (let i = start; i < start + count; i++) {\r\n      const point = points[i];\r\n      const parsed = !reset && this.getParsed(i);\r\n      const properties = {};\r\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\r\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\r\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\r\n      if (includeOptions) {\r\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n        if (reset) {\r\n          properties.options.radius = 0;\r\n        }\r\n      }\r\n      this.updateElement(point, i, properties, mode);\r\n    }\r\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n  }\r\n  resolveDataElementOptions(index, mode) {\r\n    const parsed = this.getParsed(index);\r\n    let values = super.resolveDataElementOptions(index, mode);\r\n    if (values.$shared) {\r\n      values = Object.assign({}, values, {$shared: false});\r\n    }\r\n    const radius = values.radius;\r\n    if (mode !== 'active') {\r\n      values.radius = 0;\r\n    }\r\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\r\n    return values;\r\n  }\r\n}\r\nBubbleController.id = 'bubble';\r\nBubbleController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'point',\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'borderWidth', 'radius']\r\n    }\r\n  }\r\n};\r\nBubbleController.overrides = {\r\n  scales: {\r\n    x: {\r\n      type: 'linear'\r\n    },\r\n    y: {\r\n      type: 'linear'\r\n    }\r\n  },\r\n  plugins: {\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nfunction getRatioAndOffset(rotation, circumference, cutout) {\r\n  let ratioX = 1;\r\n  let ratioY = 1;\r\n  let offsetX = 0;\r\n  let offsetY = 0;\r\n  if (circumference < TAU) {\r\n    const startAngle = rotation;\r\n    const endAngle = startAngle + circumference;\r\n    const startX = Math.cos(startAngle);\r\n    const startY = Math.sin(startAngle);\r\n    const endX = Math.cos(endAngle);\r\n    const endY = Math.sin(endAngle);\r\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\r\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\r\n    const maxX = calcMax(0, startX, endX);\r\n    const maxY = calcMax(HALF_PI, startY, endY);\r\n    const minX = calcMin(PI, startX, endX);\r\n    const minY = calcMin(PI + HALF_PI, startY, endY);\r\n    ratioX = (maxX - minX) / 2;\r\n    ratioY = (maxY - minY) / 2;\r\n    offsetX = -(maxX + minX) / 2;\r\n    offsetY = -(maxY + minY) / 2;\r\n  }\r\n  return {ratioX, ratioY, offsetX, offsetY};\r\n}\r\nclass DoughnutController extends DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    super(chart, datasetIndex);\r\n    this.enableOptionSharing = true;\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n    this.offsetX = undefined;\r\n    this.offsetY = undefined;\r\n  }\r\n  linkScales() {}\r\n  parse(start, count) {\r\n    const data = this.getDataset().data;\r\n    const meta = this._cachedMeta;\r\n    if (this._parsing === false) {\r\n      meta._parsed = data;\r\n    } else {\r\n      let getter = (i) => +data[i];\r\n      if (isObject(data[start])) {\r\n        const {key = 'value'} = this._parsing;\r\n        getter = (i) => +resolveObjectKey(data[i], key);\r\n      }\r\n      let i, ilen;\r\n      for (i = start, ilen = start + count; i < ilen; ++i) {\r\n        meta._parsed[i] = getter(i);\r\n      }\r\n    }\r\n  }\r\n  _getRotation() {\r\n    return toRadians(this.options.rotation - 90);\r\n  }\r\n  _getCircumference() {\r\n    return toRadians(this.options.circumference);\r\n  }\r\n  _getRotationExtents() {\r\n    let min = TAU;\r\n    let max = -TAU;\r\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\r\n      if (this.chart.isDatasetVisible(i)) {\r\n        const controller = this.chart.getDatasetMeta(i).controller;\r\n        const rotation = controller._getRotation();\r\n        const circumference = controller._getCircumference();\r\n        min = Math.min(min, rotation);\r\n        max = Math.max(max, rotation + circumference);\r\n      }\r\n    }\r\n    return {\r\n      rotation: min,\r\n      circumference: max - min,\r\n    };\r\n  }\r\n  update(mode) {\r\n    const chart = this.chart;\r\n    const {chartArea} = chart;\r\n    const meta = this._cachedMeta;\r\n    const arcs = meta.data;\r\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\r\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\r\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\r\n    const chartWeight = this._getRingWeight(this.index);\r\n    const {circumference, rotation} = this._getRotationExtents();\r\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\r\n    const maxWidth = (chartArea.width - spacing) / ratioX;\r\n    const maxHeight = (chartArea.height - spacing) / ratioY;\r\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\r\n    const outerRadius = toDimension(this.options.radius, maxRadius);\r\n    const innerRadius = Math.max(outerRadius * cutout, 0);\r\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\r\n    this.offsetX = offsetX * outerRadius;\r\n    this.offsetY = offsetY * outerRadius;\r\n    meta.total = this.calculateTotal();\r\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\r\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\r\n    this.updateElements(arcs, 0, arcs.length, mode);\r\n  }\r\n  _circumference(i, reset) {\r\n    const opts = this.options;\r\n    const meta = this._cachedMeta;\r\n    const circumference = this._getCircumference();\r\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\r\n      return 0;\r\n    }\r\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\r\n  }\r\n  updateElements(arcs, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const chart = this.chart;\r\n    const chartArea = chart.chartArea;\r\n    const opts = chart.options;\r\n    const animationOpts = opts.animation;\r\n    const centerX = (chartArea.left + chartArea.right) / 2;\r\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\r\n    const animateScale = reset && animationOpts.animateScale;\r\n    const innerRadius = animateScale ? 0 : this.innerRadius;\r\n    const outerRadius = animateScale ? 0 : this.outerRadius;\r\n    const firstOpts = this.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = this.getSharedOptions(firstOpts);\r\n    const includeOptions = this.includeOptions(mode, sharedOptions);\r\n    let startAngle = this._getRotation();\r\n    let i;\r\n    for (i = 0; i < start; ++i) {\r\n      startAngle += this._circumference(i, reset);\r\n    }\r\n    for (i = start; i < start + count; ++i) {\r\n      const circumference = this._circumference(i, reset);\r\n      const arc = arcs[i];\r\n      const properties = {\r\n        x: centerX + this.offsetX,\r\n        y: centerY + this.offsetY,\r\n        startAngle,\r\n        endAngle: startAngle + circumference,\r\n        circumference,\r\n        outerRadius,\r\n        innerRadius\r\n      };\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\r\n      }\r\n      startAngle += circumference;\r\n      this.updateElement(arc, i, properties, mode);\r\n    }\r\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n  }\r\n  calculateTotal() {\r\n    const meta = this._cachedMeta;\r\n    const metaData = meta.data;\r\n    let total = 0;\r\n    let i;\r\n    for (i = 0; i < metaData.length; i++) {\r\n      const value = meta._parsed[i];\r\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\r\n        total += Math.abs(value);\r\n      }\r\n    }\r\n    return total;\r\n  }\r\n  calculateCircumference(value) {\r\n    const total = this._cachedMeta.total;\r\n    if (total > 0 && !isNaN(value)) {\r\n      return TAU * (Math.abs(value) / total);\r\n    }\r\n    return 0;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const chart = this.chart;\r\n    const labels = chart.data.labels || [];\r\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\r\n    return {\r\n      label: labels[index] || '',\r\n      value,\r\n    };\r\n  }\r\n  getMaxBorderWidth(arcs) {\r\n    let max = 0;\r\n    const chart = this.chart;\r\n    let i, ilen, meta, controller, options;\r\n    if (!arcs) {\r\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\r\n        if (chart.isDatasetVisible(i)) {\r\n          meta = chart.getDatasetMeta(i);\r\n          arcs = meta.data;\r\n          controller = meta.controller;\r\n          if (controller !== this) {\r\n            controller.configure();\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (!arcs) {\r\n      return 0;\r\n    }\r\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\r\n      options = controller.resolveDataElementOptions(i);\r\n      if (options.borderAlign !== 'inner') {\r\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n  getMaxOffset(arcs) {\r\n    let max = 0;\r\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\r\n      const options = this.resolveDataElementOptions(i);\r\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\r\n    }\r\n    return max;\r\n  }\r\n  _getRingWeightOffset(datasetIndex) {\r\n    let ringWeightOffset = 0;\r\n    for (let i = 0; i < datasetIndex; ++i) {\r\n      if (this.chart.isDatasetVisible(i)) {\r\n        ringWeightOffset += this._getRingWeight(i);\r\n      }\r\n    }\r\n    return ringWeightOffset;\r\n  }\r\n  _getRingWeight(datasetIndex) {\r\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\r\n  }\r\n  _getVisibleDatasetWeightTotal() {\r\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\r\n  }\r\n}\r\nDoughnutController.id = 'doughnut';\r\nDoughnutController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'arc',\r\n  animation: {\r\n    animateRotate: true,\r\n    animateScale: false\r\n  },\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\r\n    },\r\n  },\r\n  cutout: '50%',\r\n  rotation: 0,\r\n  circumference: 360,\r\n  radius: '100%',\r\n  spacing: 0,\r\n  indexAxis: 'r',\r\n};\r\nDoughnutController.descriptors = {\r\n  _scriptable: (name) => name !== 'spacing',\r\n  _indexable: (name) => name !== 'spacing',\r\n};\r\nDoughnutController.overrides = {\r\n  aspectRatio: 1,\r\n  plugins: {\r\n    legend: {\r\n      labels: {\r\n        generateLabels(chart) {\r\n          const data = chart.data;\r\n          if (data.labels.length && data.datasets.length) {\r\n            const {labels: {pointStyle}} = chart.legend.options;\r\n            return data.labels.map((label, i) => {\r\n              const meta = chart.getDatasetMeta(0);\r\n              const style = meta.controller.getStyle(i);\r\n              return {\r\n                text: label,\r\n                fillStyle: style.backgroundColor,\r\n                strokeStyle: style.borderColor,\r\n                lineWidth: style.borderWidth,\r\n                pointStyle: pointStyle,\r\n                hidden: chart.getDataVisibility(i),\r\n                index: i\r\n              };\r\n            });\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      onClick(e, legendItem, legend) {\r\n        legend.chart.toggleDataVisibility(legendItem.index);\r\n        legend.chart.update();\r\n      }\r\n    },\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(tooltipItem) {\r\n          let dataLabel = tooltipItem.label;\r\n          const value = ': ' + tooltipItem.formattedValue;\r\n          if (isArray(dataLabel)) {\r\n            dataLabel = dataLabel.slice();\r\n            dataLabel[0] += value;\r\n          } else {\r\n            dataLabel += value;\r\n          }\r\n          return dataLabel;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nclass LineController extends DatasetController {\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    super.initialize();\r\n  }\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    const {dataset: line, data: points = [], _dataset} = meta;\r\n    const animationsDisabled = this.chart._animationsDisabled;\r\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\r\n    this._drawStart = start;\r\n    this._drawCount = count;\r\n    if (scaleRangesChanged(meta)) {\r\n      start = 0;\r\n      count = points.length;\r\n    }\r\n    line._datasetIndex = this.index;\r\n    line._decimated = !!_dataset._decimated;\r\n    line.points = points;\r\n    const options = this.resolveDatasetElementOptions(mode);\r\n    if (!this.options.showLine) {\r\n      options.borderWidth = 0;\r\n    }\r\n    options.segment = this.options.segment;\r\n    this.updateElement(line, undefined, {\r\n      animated: !animationsDisabled,\r\n      options\r\n    }, mode);\r\n    this.updateElements(points, start, count, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {iScale, vScale, _stacked} = this._cachedMeta;\r\n    const firstOpts = this.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = this.getSharedOptions(firstOpts);\r\n    const includeOptions = this.includeOptions(mode, sharedOptions);\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    const spanGaps = this.options.spanGaps;\r\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\r\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\r\n    let prevParsed = start > 0 && this.getParsed(start - 1);\r\n    for (let i = start; i < start + count; ++i) {\r\n      const point = points[i];\r\n      const parsed = this.getParsed(i);\r\n      const properties = directUpdate ? point : {};\r\n      const nullData = isNullOrUndef(parsed[vAxis]);\r\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\r\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\r\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\r\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\r\n      properties.parsed = parsed;\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n      }\r\n      if (!directUpdate) {\r\n        this.updateElement(point, i, properties, mode);\r\n      }\r\n      prevParsed = parsed;\r\n    }\r\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n  }\r\n  getMaxOverflow() {\r\n    const meta = this._cachedMeta;\r\n    const dataset = meta.dataset;\r\n    const border = dataset.options && dataset.options.borderWidth || 0;\r\n    const data = meta.data || [];\r\n    if (!data.length) {\r\n      return border;\r\n    }\r\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\r\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\r\n    return Math.max(border, firstPoint, lastPoint) / 2;\r\n  }\r\n  draw() {\r\n    const meta = this._cachedMeta;\r\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\r\n    super.draw();\r\n  }\r\n}\r\nLineController.id = 'line';\r\nLineController.defaults = {\r\n  datasetElementType: 'line',\r\n  dataElementType: 'point',\r\n  showLine: true,\r\n  spanGaps: false,\r\n};\r\nLineController.overrides = {\r\n  scales: {\r\n    _index_: {\r\n      type: 'category',\r\n    },\r\n    _value_: {\r\n      type: 'linear',\r\n    },\r\n  }\r\n};\r\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\r\n  const pointCount = points.length;\r\n  let start = 0;\r\n  let count = pointCount;\r\n  if (meta._sorted) {\r\n    const {iScale, _parsed} = meta;\r\n    const axis = iScale.axis;\r\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\r\n    if (minDefined) {\r\n      start = _limitValue(Math.min(\r\n        _lookupByKey(_parsed, iScale.axis, min).lo,\r\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\r\n      0, pointCount - 1);\r\n    }\r\n    if (maxDefined) {\r\n      count = _limitValue(Math.max(\r\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\r\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\r\n      start, pointCount) - start;\r\n    } else {\r\n      count = pointCount - start;\r\n    }\r\n  }\r\n  return {start, count};\r\n}\r\nfunction scaleRangesChanged(meta) {\r\n  const {xScale, yScale, _scaleRanges} = meta;\r\n  const newRanges = {\r\n    xmin: xScale.min,\r\n    xmax: xScale.max,\r\n    ymin: yScale.min,\r\n    ymax: yScale.max\r\n  };\r\n  if (!_scaleRanges) {\r\n    meta._scaleRanges = newRanges;\r\n    return true;\r\n  }\r\n  const changed = _scaleRanges.xmin !== xScale.min\r\n\t\t|| _scaleRanges.xmax !== xScale.max\r\n\t\t|| _scaleRanges.ymin !== yScale.min\r\n\t\t|| _scaleRanges.ymax !== yScale.max;\r\n  Object.assign(_scaleRanges, newRanges);\r\n  return changed;\r\n}\r\n\r\nclass PolarAreaController extends DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    super(chart, datasetIndex);\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const chart = this.chart;\r\n    const labels = chart.data.labels || [];\r\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\r\n    return {\r\n      label: labels[index] || '',\r\n      value,\r\n    };\r\n  }\r\n  update(mode) {\r\n    const arcs = this._cachedMeta.data;\r\n    this._updateRadius();\r\n    this.updateElements(arcs, 0, arcs.length, mode);\r\n  }\r\n  _updateRadius() {\r\n    const chart = this.chart;\r\n    const chartArea = chart.chartArea;\r\n    const opts = chart.options;\r\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\r\n    const outerRadius = Math.max(minSize / 2, 0);\r\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\r\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\r\n    this.outerRadius = outerRadius - (radiusLength * this.index);\r\n    this.innerRadius = this.outerRadius - radiusLength;\r\n  }\r\n  updateElements(arcs, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const chart = this.chart;\r\n    const dataset = this.getDataset();\r\n    const opts = chart.options;\r\n    const animationOpts = opts.animation;\r\n    const scale = this._cachedMeta.rScale;\r\n    const centerX = scale.xCenter;\r\n    const centerY = scale.yCenter;\r\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\r\n    let angle = datasetStartAngle;\r\n    let i;\r\n    const defaultAngle = 360 / this.countVisibleElements();\r\n    for (i = 0; i < start; ++i) {\r\n      angle += this._computeAngle(i, mode, defaultAngle);\r\n    }\r\n    for (i = start; i < start + count; i++) {\r\n      const arc = arcs[i];\r\n      let startAngle = angle;\r\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\r\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\r\n      angle = endAngle;\r\n      if (reset) {\r\n        if (animationOpts.animateScale) {\r\n          outerRadius = 0;\r\n        }\r\n        if (animationOpts.animateRotate) {\r\n          startAngle = endAngle = datasetStartAngle;\r\n        }\r\n      }\r\n      const properties = {\r\n        x: centerX,\r\n        y: centerY,\r\n        innerRadius: 0,\r\n        outerRadius,\r\n        startAngle,\r\n        endAngle,\r\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\r\n      };\r\n      this.updateElement(arc, i, properties, mode);\r\n    }\r\n  }\r\n  countVisibleElements() {\r\n    const dataset = this.getDataset();\r\n    const meta = this._cachedMeta;\r\n    let count = 0;\r\n    meta.data.forEach((element, index) => {\r\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\r\n        count++;\r\n      }\r\n    });\r\n    return count;\r\n  }\r\n  _computeAngle(index, mode, defaultAngle) {\r\n    return this.chart.getDataVisibility(index)\r\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\r\n      : 0;\r\n  }\r\n}\r\nPolarAreaController.id = 'polarArea';\r\nPolarAreaController.defaults = {\r\n  dataElementType: 'arc',\r\n  animation: {\r\n    animateRotate: true,\r\n    animateScale: true\r\n  },\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\r\n    },\r\n  },\r\n  indexAxis: 'r',\r\n  startAngle: 0,\r\n};\r\nPolarAreaController.overrides = {\r\n  aspectRatio: 1,\r\n  plugins: {\r\n    legend: {\r\n      labels: {\r\n        generateLabels(chart) {\r\n          const data = chart.data;\r\n          if (data.labels.length && data.datasets.length) {\r\n            const {labels: {pointStyle}} = chart.legend.options;\r\n            return data.labels.map((label, i) => {\r\n              const meta = chart.getDatasetMeta(0);\r\n              const style = meta.controller.getStyle(i);\r\n              return {\r\n                text: label,\r\n                fillStyle: style.backgroundColor,\r\n                strokeStyle: style.borderColor,\r\n                lineWidth: style.borderWidth,\r\n                pointStyle: pointStyle,\r\n                hidden: !chart.getDataVisibility(i),\r\n                index: i\r\n              };\r\n            });\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      onClick(e, legendItem, legend) {\r\n        legend.chart.toggleDataVisibility(legendItem.index);\r\n        legend.chart.update();\r\n      }\r\n    },\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(context) {\r\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  scales: {\r\n    r: {\r\n      type: 'radialLinear',\r\n      angleLines: {\r\n        display: false\r\n      },\r\n      beginAtZero: true,\r\n      grid: {\r\n        circular: true\r\n      },\r\n      pointLabels: {\r\n        display: false\r\n      },\r\n      startAngle: 0\r\n    }\r\n  }\r\n};\r\n\r\nclass PieController extends DoughnutController {\r\n}\r\nPieController.id = 'pie';\r\nPieController.defaults = {\r\n  cutout: 0,\r\n  rotation: 0,\r\n  circumference: 360,\r\n  radius: '100%'\r\n};\r\n\r\nclass RadarController extends DatasetController {\r\n  getLabelAndValue(index) {\r\n    const vScale = this._cachedMeta.vScale;\r\n    const parsed = this.getParsed(index);\r\n    return {\r\n      label: vScale.getLabels()[index],\r\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\r\n    };\r\n  }\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    const line = meta.dataset;\r\n    const points = meta.data || [];\r\n    const labels = meta.iScale.getLabels();\r\n    line.points = points;\r\n    if (mode !== 'resize') {\r\n      const options = this.resolveDatasetElementOptions(mode);\r\n      if (!this.options.showLine) {\r\n        options.borderWidth = 0;\r\n      }\r\n      const properties = {\r\n        _loop: true,\r\n        _fullLoop: labels.length === points.length,\r\n        options\r\n      };\r\n      this.updateElement(line, undefined, properties, mode);\r\n    }\r\n    this.updateElements(points, 0, points.length, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const dataset = this.getDataset();\r\n    const scale = this._cachedMeta.rScale;\r\n    const reset = mode === 'reset';\r\n    for (let i = start; i < start + count; i++) {\r\n      const point = points[i];\r\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\r\n      const x = reset ? scale.xCenter : pointPosition.x;\r\n      const y = reset ? scale.yCenter : pointPosition.y;\r\n      const properties = {\r\n        x,\r\n        y,\r\n        angle: pointPosition.angle,\r\n        skip: isNaN(x) || isNaN(y),\r\n        options\r\n      };\r\n      this.updateElement(point, i, properties, mode);\r\n    }\r\n  }\r\n}\r\nRadarController.id = 'radar';\r\nRadarController.defaults = {\r\n  datasetElementType: 'line',\r\n  dataElementType: 'point',\r\n  indexAxis: 'r',\r\n  showLine: true,\r\n  elements: {\r\n    line: {\r\n      fill: 'start'\r\n    }\r\n  },\r\n};\r\nRadarController.overrides = {\r\n  aspectRatio: 1,\r\n  scales: {\r\n    r: {\r\n      type: 'radialLinear',\r\n    }\r\n  }\r\n};\r\n\r\nclass ScatterController extends LineController {\r\n}\r\nScatterController.id = 'scatter';\r\nScatterController.defaults = {\r\n  showLine: false,\r\n  fill: false\r\n};\r\nScatterController.overrides = {\r\n  interaction: {\r\n    mode: 'point'\r\n  },\r\n  plugins: {\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(item) {\r\n          return '(' + item.label + ', ' + item.formattedValue + ')';\r\n        }\r\n      }\r\n    }\r\n  },\r\n  scales: {\r\n    x: {\r\n      type: 'linear'\r\n    },\r\n    y: {\r\n      type: 'linear'\r\n    }\r\n  }\r\n};\r\n\r\nvar controllers = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nBarController: BarController,\r\nBubbleController: BubbleController,\r\nDoughnutController: DoughnutController,\r\nLineController: LineController,\r\nPolarAreaController: PolarAreaController,\r\nPieController: PieController,\r\nRadarController: RadarController,\r\nScatterController: ScatterController\r\n});\r\n\r\nfunction clipArc(ctx, element, endAngle) {\r\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\r\n  let angleMargin = pixelMargin / outerRadius;\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\r\n  if (innerRadius > pixelMargin) {\r\n    angleMargin = pixelMargin / innerRadius;\r\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\r\n  } else {\r\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\r\n  }\r\n  ctx.closePath();\r\n  ctx.clip();\r\n}\r\nfunction toRadiusCorners(value) {\r\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\r\n}\r\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\r\n  const o = toRadiusCorners(arc.options.borderRadius);\r\n  const halfThickness = (outerRadius - innerRadius) / 2;\r\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\r\n  const computeOuterLimit = (val) => {\r\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\r\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\r\n  };\r\n  return {\r\n    outerStart: computeOuterLimit(o.outerStart),\r\n    outerEnd: computeOuterLimit(o.outerEnd),\r\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\r\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\r\n  };\r\n}\r\nfunction rThetaToXY(r, theta, x, y) {\r\n  return {\r\n    x: x + r * Math.cos(theta),\r\n    y: y + r * Math.sin(theta),\r\n  };\r\n}\r\nfunction pathArc(ctx, element, offset, spacing, end) {\r\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\r\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\r\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\r\n  let spacingOffset = 0;\r\n  const alpha = end - start;\r\n  if (spacing) {\r\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\r\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\r\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\r\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\r\n    spacingOffset = (alpha - adjustedAngle) / 2;\r\n  }\r\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\r\n  const angleOffset = (alpha - beta) / 2;\r\n  const startAngle = start + angleOffset + spacingOffset;\r\n  const endAngle = end - angleOffset - spacingOffset;\r\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\r\n  const outerStartAdjustedRadius = outerRadius - outerStart;\r\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\r\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\r\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\r\n  const innerStartAdjustedRadius = innerRadius + innerStart;\r\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\r\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\r\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\r\n  if (outerEnd > 0) {\r\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\r\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\r\n  }\r\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\r\n  ctx.lineTo(p4.x, p4.y);\r\n  if (innerEnd > 0) {\r\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\r\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\r\n  }\r\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\r\n  if (innerStart > 0) {\r\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\r\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\r\n  }\r\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\r\n  ctx.lineTo(p8.x, p8.y);\r\n  if (outerStart > 0) {\r\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\r\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\r\n  }\r\n  ctx.closePath();\r\n}\r\nfunction drawArc(ctx, element, offset, spacing) {\r\n  const {fullCircles, startAngle, circumference} = element;\r\n  let endAngle = element.endAngle;\r\n  if (fullCircles) {\r\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\r\n    for (let i = 0; i < fullCircles; ++i) {\r\n      ctx.fill();\r\n    }\r\n    if (!isNaN(circumference)) {\r\n      endAngle = startAngle + circumference % TAU;\r\n      if (circumference % TAU === 0) {\r\n        endAngle += TAU;\r\n      }\r\n    }\r\n  }\r\n  pathArc(ctx, element, offset, spacing, endAngle);\r\n  ctx.fill();\r\n  return endAngle;\r\n}\r\nfunction drawFullCircleBorders(ctx, element, inner) {\r\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\r\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\r\n  const innerRadius = element.innerRadius + pixelMargin;\r\n  let i;\r\n  if (inner) {\r\n    clipArc(ctx, element, startAngle + TAU);\r\n  }\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\r\n  for (i = 0; i < fullCircles; ++i) {\r\n    ctx.stroke();\r\n  }\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\r\n  for (i = 0; i < fullCircles; ++i) {\r\n    ctx.stroke();\r\n  }\r\n}\r\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\r\n  const {options} = element;\r\n  const inner = options.borderAlign === 'inner';\r\n  if (!options.borderWidth) {\r\n    return;\r\n  }\r\n  if (inner) {\r\n    ctx.lineWidth = options.borderWidth * 2;\r\n    ctx.lineJoin = 'round';\r\n  } else {\r\n    ctx.lineWidth = options.borderWidth;\r\n    ctx.lineJoin = 'bevel';\r\n  }\r\n  if (element.fullCircles) {\r\n    drawFullCircleBorders(ctx, element, inner);\r\n  }\r\n  if (inner) {\r\n    clipArc(ctx, element, endAngle);\r\n  }\r\n  pathArc(ctx, element, offset, spacing, endAngle);\r\n  ctx.stroke();\r\n}\r\nclass ArcElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.circumference = undefined;\r\n    this.startAngle = undefined;\r\n    this.endAngle = undefined;\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n    this.pixelMargin = 0;\r\n    this.fullCircles = 0;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  inRange(chartX, chartY, useFinalPosition) {\r\n    const point = this.getProps(['x', 'y'], useFinalPosition);\r\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\r\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\r\n      'startAngle',\r\n      'endAngle',\r\n      'innerRadius',\r\n      'outerRadius',\r\n      'circumference'\r\n    ], useFinalPosition);\r\n    const rAdjust = this.options.spacing / 2;\r\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\r\n    const withinRadius = (distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust);\r\n    return (betweenAngles && withinRadius);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\r\n      'x',\r\n      'y',\r\n      'startAngle',\r\n      'endAngle',\r\n      'innerRadius',\r\n      'outerRadius',\r\n      'circumference',\r\n    ], useFinalPosition);\r\n    const {offset, spacing} = this.options;\r\n    const halfAngle = (startAngle + endAngle) / 2;\r\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\r\n    return {\r\n      x: x + Math.cos(halfAngle) * halfRadius,\r\n      y: y + Math.sin(halfAngle) * halfRadius\r\n    };\r\n  }\r\n  tooltipPosition(useFinalPosition) {\r\n    return this.getCenterPoint(useFinalPosition);\r\n  }\r\n  draw(ctx) {\r\n    const {options, circumference} = this;\r\n    const offset = (options.offset || 0) / 2;\r\n    const spacing = (options.spacing || 0) / 2;\r\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\r\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\r\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\r\n      return;\r\n    }\r\n    ctx.save();\r\n    let radiusOffset = 0;\r\n    if (offset) {\r\n      radiusOffset = offset / 2;\r\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\r\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\r\n      if (this.circumference >= PI) {\r\n        radiusOffset = offset;\r\n      }\r\n    }\r\n    ctx.fillStyle = options.backgroundColor;\r\n    ctx.strokeStyle = options.borderColor;\r\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\r\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\r\n    ctx.restore();\r\n  }\r\n}\r\nArcElement.id = 'arc';\r\nArcElement.defaults = {\r\n  borderAlign: 'center',\r\n  borderColor: '#fff',\r\n  borderRadius: 0,\r\n  borderWidth: 2,\r\n  offset: 0,\r\n  spacing: 0,\r\n  angle: undefined,\r\n};\r\nArcElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor'\r\n};\r\n\r\nfunction setStyle(ctx, options, style = options) {\r\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\r\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\r\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\r\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\r\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\r\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\r\n}\r\nfunction lineTo(ctx, previous, target) {\r\n  ctx.lineTo(target.x, target.y);\r\n}\r\nfunction getLineMethod(options) {\r\n  if (options.stepped) {\r\n    return _steppedLineTo;\r\n  }\r\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\r\n    return _bezierCurveTo;\r\n  }\r\n  return lineTo;\r\n}\r\nfunction pathVars(points, segment, params = {}) {\r\n  const count = points.length;\r\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\r\n  const {start: segmentStart, end: segmentEnd} = segment;\r\n  const start = Math.max(paramsStart, segmentStart);\r\n  const end = Math.min(paramsEnd, segmentEnd);\r\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\r\n  return {\r\n    count,\r\n    start,\r\n    loop: segment.loop,\r\n    ilen: end < start && !outside ? count + end - start : end - start\r\n  };\r\n}\r\nfunction pathSegment(ctx, line, segment, params) {\r\n  const {points, options} = line;\r\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\r\n  const lineMethod = getLineMethod(options);\r\n  let {move = true, reverse} = params || {};\r\n  let i, point, prev;\r\n  for (i = 0; i <= ilen; ++i) {\r\n    point = points[(start + (reverse ? ilen - i : i)) % count];\r\n    if (point.skip) {\r\n      continue;\r\n    } else if (move) {\r\n      ctx.moveTo(point.x, point.y);\r\n      move = false;\r\n    } else {\r\n      lineMethod(ctx, prev, point, reverse, options.stepped);\r\n    }\r\n    prev = point;\r\n  }\r\n  if (loop) {\r\n    point = points[(start + (reverse ? ilen : 0)) % count];\r\n    lineMethod(ctx, prev, point, reverse, options.stepped);\r\n  }\r\n  return !!loop;\r\n}\r\nfunction fastPathSegment(ctx, line, segment, params) {\r\n  const points = line.points;\r\n  const {count, start, ilen} = pathVars(points, segment, params);\r\n  const {move = true, reverse} = params || {};\r\n  let avgX = 0;\r\n  let countX = 0;\r\n  let i, point, prevX, minY, maxY, lastY;\r\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\r\n  const drawX = () => {\r\n    if (minY !== maxY) {\r\n      ctx.lineTo(avgX, maxY);\r\n      ctx.lineTo(avgX, minY);\r\n      ctx.lineTo(avgX, lastY);\r\n    }\r\n  };\r\n  if (move) {\r\n    point = points[pointIndex(0)];\r\n    ctx.moveTo(point.x, point.y);\r\n  }\r\n  for (i = 0; i <= ilen; ++i) {\r\n    point = points[pointIndex(i)];\r\n    if (point.skip) {\r\n      continue;\r\n    }\r\n    const x = point.x;\r\n    const y = point.y;\r\n    const truncX = x | 0;\r\n    if (truncX === prevX) {\r\n      if (y < minY) {\r\n        minY = y;\r\n      } else if (y > maxY) {\r\n        maxY = y;\r\n      }\r\n      avgX = (countX * avgX + x) / ++countX;\r\n    } else {\r\n      drawX();\r\n      ctx.lineTo(x, y);\r\n      prevX = truncX;\r\n      countX = 0;\r\n      minY = maxY = y;\r\n    }\r\n    lastY = y;\r\n  }\r\n  drawX();\r\n}\r\nfunction _getSegmentMethod(line) {\r\n  const opts = line.options;\r\n  const borderDash = opts.borderDash && opts.borderDash.length;\r\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\r\n  return useFastPath ? fastPathSegment : pathSegment;\r\n}\r\nfunction _getInterpolationMethod(options) {\r\n  if (options.stepped) {\r\n    return _steppedInterpolation;\r\n  }\r\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\r\n    return _bezierInterpolation;\r\n  }\r\n  return _pointInLine;\r\n}\r\nfunction strokePathWithCache(ctx, line, start, count) {\r\n  let path = line._path;\r\n  if (!path) {\r\n    path = line._path = new Path2D();\r\n    if (line.path(path, start, count)) {\r\n      path.closePath();\r\n    }\r\n  }\r\n  setStyle(ctx, line.options);\r\n  ctx.stroke(path);\r\n}\r\nfunction strokePathDirect(ctx, line, start, count) {\r\n  const {segments, options} = line;\r\n  const segmentMethod = _getSegmentMethod(line);\r\n  for (const segment of segments) {\r\n    setStyle(ctx, options, segment.style);\r\n    ctx.beginPath();\r\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\r\n      ctx.closePath();\r\n    }\r\n    ctx.stroke();\r\n  }\r\n}\r\nconst usePath2D = typeof Path2D === 'function';\r\nfunction draw(ctx, line, start, count) {\r\n  if (usePath2D && !line.options.segment) {\r\n    strokePathWithCache(ctx, line, start, count);\r\n  } else {\r\n    strokePathDirect(ctx, line, start, count);\r\n  }\r\n}\r\nclass LineElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.animated = true;\r\n    this.options = undefined;\r\n    this._loop = undefined;\r\n    this._fullLoop = undefined;\r\n    this._path = undefined;\r\n    this._points = undefined;\r\n    this._segments = undefined;\r\n    this._decimated = false;\r\n    this._pointsUpdated = false;\r\n    this._datasetIndex = undefined;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  updateControlPoints(chartArea, indexAxis) {\r\n    const options = this.options;\r\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\r\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\r\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\r\n      this._pointsUpdated = true;\r\n    }\r\n  }\r\n  set points(points) {\r\n    this._points = points;\r\n    delete this._segments;\r\n    delete this._path;\r\n    this._pointsUpdated = false;\r\n  }\r\n  get points() {\r\n    return this._points;\r\n  }\r\n  get segments() {\r\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\r\n  }\r\n  first() {\r\n    const segments = this.segments;\r\n    const points = this.points;\r\n    return segments.length && points[segments[0].start];\r\n  }\r\n  last() {\r\n    const segments = this.segments;\r\n    const points = this.points;\r\n    const count = segments.length;\r\n    return count && points[segments[count - 1].end];\r\n  }\r\n  interpolate(point, property) {\r\n    const options = this.options;\r\n    const value = point[property];\r\n    const points = this.points;\r\n    const segments = _boundSegments(this, {property, start: value, end: value});\r\n    if (!segments.length) {\r\n      return;\r\n    }\r\n    const result = [];\r\n    const _interpolate = _getInterpolationMethod(options);\r\n    let i, ilen;\r\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\r\n      const {start, end} = segments[i];\r\n      const p1 = points[start];\r\n      const p2 = points[end];\r\n      if (p1 === p2) {\r\n        result.push(p1);\r\n        continue;\r\n      }\r\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\r\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\r\n      interpolated[property] = point[property];\r\n      result.push(interpolated);\r\n    }\r\n    return result.length === 1 ? result[0] : result;\r\n  }\r\n  pathSegment(ctx, segment, params) {\r\n    const segmentMethod = _getSegmentMethod(this);\r\n    return segmentMethod(ctx, this, segment, params);\r\n  }\r\n  path(ctx, start, count) {\r\n    const segments = this.segments;\r\n    const segmentMethod = _getSegmentMethod(this);\r\n    let loop = this._loop;\r\n    start = start || 0;\r\n    count = count || (this.points.length - start);\r\n    for (const segment of segments) {\r\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\r\n    }\r\n    return !!loop;\r\n  }\r\n  draw(ctx, chartArea, start, count) {\r\n    const options = this.options || {};\r\n    const points = this.points || [];\r\n    if (points.length && options.borderWidth) {\r\n      ctx.save();\r\n      draw(ctx, this, start, count);\r\n      ctx.restore();\r\n    }\r\n    if (this.animated) {\r\n      this._pointsUpdated = false;\r\n      this._path = undefined;\r\n    }\r\n  }\r\n}\r\nLineElement.id = 'line';\r\nLineElement.defaults = {\r\n  borderCapStyle: 'butt',\r\n  borderDash: [],\r\n  borderDashOffset: 0,\r\n  borderJoinStyle: 'miter',\r\n  borderWidth: 3,\r\n  capBezierPoints: true,\r\n  cubicInterpolationMode: 'default',\r\n  fill: false,\r\n  spanGaps: false,\r\n  stepped: false,\r\n  tension: 0,\r\n};\r\nLineElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\nLineElement.descriptors = {\r\n  _scriptable: true,\r\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\r\n};\r\n\r\nfunction inRange$1(el, pos, axis, useFinalPosition) {\r\n  const options = el.options;\r\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\r\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\r\n}\r\nclass PointElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.parsed = undefined;\r\n    this.skip = undefined;\r\n    this.stop = undefined;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  inRange(mouseX, mouseY, useFinalPosition) {\r\n    const options = this.options;\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\r\n  }\r\n  inXRange(mouseX, useFinalPosition) {\r\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\r\n  }\r\n  inYRange(mouseY, useFinalPosition) {\r\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return {x, y};\r\n  }\r\n  size(options) {\r\n    options = options || this.options || {};\r\n    let radius = options.radius || 0;\r\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\r\n    const borderWidth = radius && options.borderWidth || 0;\r\n    return (radius + borderWidth) * 2;\r\n  }\r\n  draw(ctx, area) {\r\n    const options = this.options;\r\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\r\n      return;\r\n    }\r\n    ctx.strokeStyle = options.borderColor;\r\n    ctx.lineWidth = options.borderWidth;\r\n    ctx.fillStyle = options.backgroundColor;\r\n    drawPoint(ctx, options, this.x, this.y);\r\n  }\r\n  getRange() {\r\n    const options = this.options || {};\r\n    return options.radius + options.hitRadius;\r\n  }\r\n}\r\nPointElement.id = 'point';\r\nPointElement.defaults = {\r\n  borderWidth: 1,\r\n  hitRadius: 1,\r\n  hoverBorderWidth: 1,\r\n  hoverRadius: 4,\r\n  pointStyle: 'circle',\r\n  radius: 3,\r\n  rotation: 0\r\n};\r\nPointElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\n\r\nfunction getBarBounds(bar, useFinalPosition) {\r\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\r\n  let left, right, top, bottom, half;\r\n  if (bar.horizontal) {\r\n    half = height / 2;\r\n    left = Math.min(x, base);\r\n    right = Math.max(x, base);\r\n    top = y - half;\r\n    bottom = y + half;\r\n  } else {\r\n    half = width / 2;\r\n    left = x - half;\r\n    right = x + half;\r\n    top = Math.min(y, base);\r\n    bottom = Math.max(y, base);\r\n  }\r\n  return {left, top, right, bottom};\r\n}\r\nfunction skipOrLimit(skip, value, min, max) {\r\n  return skip ? 0 : _limitValue(value, min, max);\r\n}\r\nfunction parseBorderWidth(bar, maxW, maxH) {\r\n  const value = bar.options.borderWidth;\r\n  const skip = bar.borderSkipped;\r\n  const o = toTRBL(value);\r\n  return {\r\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\r\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\r\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\r\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\r\n  };\r\n}\r\nfunction parseBorderRadius(bar, maxW, maxH) {\r\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\r\n  const value = bar.options.borderRadius;\r\n  const o = toTRBLCorners(value);\r\n  const maxR = Math.min(maxW, maxH);\r\n  const skip = bar.borderSkipped;\r\n  const enableBorder = enableBorderRadius || isObject(value);\r\n  return {\r\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\r\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\r\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\r\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\r\n  };\r\n}\r\nfunction boundingRects(bar) {\r\n  const bounds = getBarBounds(bar);\r\n  const width = bounds.right - bounds.left;\r\n  const height = bounds.bottom - bounds.top;\r\n  const border = parseBorderWidth(bar, width / 2, height / 2);\r\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\r\n  return {\r\n    outer: {\r\n      x: bounds.left,\r\n      y: bounds.top,\r\n      w: width,\r\n      h: height,\r\n      radius\r\n    },\r\n    inner: {\r\n      x: bounds.left + border.l,\r\n      y: bounds.top + border.t,\r\n      w: width - border.l - border.r,\r\n      h: height - border.t - border.b,\r\n      radius: {\r\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\r\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\r\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\r\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\r\n      }\r\n    }\r\n  };\r\n}\r\nfunction inRange(bar, x, y, useFinalPosition) {\r\n  const skipX = x === null;\r\n  const skipY = y === null;\r\n  const skipBoth = skipX && skipY;\r\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\r\n  return bounds\r\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\r\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\r\n}\r\nfunction hasRadius(radius) {\r\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\r\n}\r\nfunction addNormalRectPath(ctx, rect) {\r\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\r\n}\r\nfunction inflateRect(rect, amount, refRect = {}) {\r\n  const x = rect.x !== refRect.x ? -amount : 0;\r\n  const y = rect.y !== refRect.y ? -amount : 0;\r\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\r\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\r\n  return {\r\n    x: rect.x + x,\r\n    y: rect.y + y,\r\n    w: rect.w + w,\r\n    h: rect.h + h,\r\n    radius: rect.radius\r\n  };\r\n}\r\nclass BarElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.horizontal = undefined;\r\n    this.base = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  draw(ctx) {\r\n    const options = this.options;\r\n    const {inner, outer} = boundingRects(this);\r\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\r\n    const inflateAmount = 0.33;\r\n    ctx.save();\r\n    if (outer.w !== inner.w || outer.h !== inner.h) {\r\n      ctx.beginPath();\r\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\r\n      ctx.clip();\r\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\r\n      ctx.fillStyle = options.borderColor;\r\n      ctx.fill('evenodd');\r\n    }\r\n    ctx.beginPath();\r\n    addRectPath(ctx, inflateRect(inner, inflateAmount, outer));\r\n    ctx.fillStyle = options.backgroundColor;\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n  inRange(mouseX, mouseY, useFinalPosition) {\r\n    return inRange(this, mouseX, mouseY, useFinalPosition);\r\n  }\r\n  inXRange(mouseX, useFinalPosition) {\r\n    return inRange(this, mouseX, null, useFinalPosition);\r\n  }\r\n  inYRange(mouseY, useFinalPosition) {\r\n    return inRange(this, null, mouseY, useFinalPosition);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\r\n    return {\r\n      x: horizontal ? (x + base) / 2 : x,\r\n      y: horizontal ? y : (y + base) / 2\r\n    };\r\n  }\r\n  getRange(axis) {\r\n    return axis === 'x' ? this.width / 2 : this.height / 2;\r\n  }\r\n}\r\nBarElement.id = 'bar';\r\nBarElement.defaults = {\r\n  borderSkipped: 'start',\r\n  borderWidth: 0,\r\n  borderRadius: 0,\r\n  enableBorderRadius: true,\r\n  pointStyle: undefined\r\n};\r\nBarElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\n\r\nvar elements = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nArcElement: ArcElement,\r\nLineElement: LineElement,\r\nPointElement: PointElement,\r\nBarElement: BarElement\r\n});\r\n\r\nfunction lttbDecimation(data, start, count, availableWidth, options) {\r\n  const samples = options.samples || availableWidth;\r\n  if (samples >= count) {\r\n    return data.slice(start, start + count);\r\n  }\r\n  const decimated = [];\r\n  const bucketWidth = (count - 2) / (samples - 2);\r\n  let sampledIndex = 0;\r\n  const endIndex = start + count - 1;\r\n  let a = start;\r\n  let i, maxAreaPoint, maxArea, area, nextA;\r\n  decimated[sampledIndex++] = data[a];\r\n  for (i = 0; i < samples - 2; i++) {\r\n    let avgX = 0;\r\n    let avgY = 0;\r\n    let j;\r\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\r\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\r\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\r\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\r\n      avgX += data[j].x;\r\n      avgY += data[j].y;\r\n    }\r\n    avgX /= avgRangeLength;\r\n    avgY /= avgRangeLength;\r\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\r\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\r\n    const {x: pointAx, y: pointAy} = data[a];\r\n    maxArea = area = -1;\r\n    for (j = rangeOffs; j < rangeTo; j++) {\r\n      area = 0.5 * Math.abs(\r\n        (pointAx - avgX) * (data[j].y - pointAy) -\r\n        (pointAx - data[j].x) * (avgY - pointAy)\r\n      );\r\n      if (area > maxArea) {\r\n        maxArea = area;\r\n        maxAreaPoint = data[j];\r\n        nextA = j;\r\n      }\r\n    }\r\n    decimated[sampledIndex++] = maxAreaPoint;\r\n    a = nextA;\r\n  }\r\n  decimated[sampledIndex++] = data[endIndex];\r\n  return decimated;\r\n}\r\nfunction minMaxDecimation(data, start, count, availableWidth) {\r\n  let avgX = 0;\r\n  let countX = 0;\r\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\r\n  const decimated = [];\r\n  const endIndex = start + count - 1;\r\n  const xMin = data[start].x;\r\n  const xMax = data[endIndex].x;\r\n  const dx = xMax - xMin;\r\n  for (i = start; i < start + count; ++i) {\r\n    point = data[i];\r\n    x = (point.x - xMin) / dx * availableWidth;\r\n    y = point.y;\r\n    const truncX = x | 0;\r\n    if (truncX === prevX) {\r\n      if (y < minY) {\r\n        minY = y;\r\n        minIndex = i;\r\n      } else if (y > maxY) {\r\n        maxY = y;\r\n        maxIndex = i;\r\n      }\r\n      avgX = (countX * avgX + point.x) / ++countX;\r\n    } else {\r\n      const lastIndex = i - 1;\r\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\r\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\r\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\r\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\r\n          decimated.push({\r\n            ...data[intermediateIndex1],\r\n            x: avgX,\r\n          });\r\n        }\r\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\r\n          decimated.push({\r\n            ...data[intermediateIndex2],\r\n            x: avgX\r\n          });\r\n        }\r\n      }\r\n      if (i > 0 && lastIndex !== startIndex) {\r\n        decimated.push(data[lastIndex]);\r\n      }\r\n      decimated.push(point);\r\n      prevX = truncX;\r\n      countX = 0;\r\n      minY = maxY = y;\r\n      minIndex = maxIndex = startIndex = i;\r\n    }\r\n  }\r\n  return decimated;\r\n}\r\nfunction cleanDecimatedDataset(dataset) {\r\n  if (dataset._decimated) {\r\n    const data = dataset._data;\r\n    delete dataset._decimated;\r\n    delete dataset._data;\r\n    Object.defineProperty(dataset, 'data', {value: data});\r\n  }\r\n}\r\nfunction cleanDecimatedData(chart) {\r\n  chart.data.datasets.forEach((dataset) => {\r\n    cleanDecimatedDataset(dataset);\r\n  });\r\n}\r\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\r\n  const pointCount = points.length;\r\n  let start = 0;\r\n  let count;\r\n  const {iScale} = meta;\r\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\r\n  if (minDefined) {\r\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\r\n  }\r\n  if (maxDefined) {\r\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\r\n  } else {\r\n    count = pointCount - start;\r\n  }\r\n  return {start, count};\r\n}\r\nvar plugin_decimation = {\r\n  id: 'decimation',\r\n  defaults: {\r\n    algorithm: 'min-max',\r\n    enabled: false,\r\n  },\r\n  beforeElementsUpdate: (chart, args, options) => {\r\n    if (!options.enabled) {\r\n      cleanDecimatedData(chart);\r\n      return;\r\n    }\r\n    const availableWidth = chart.width;\r\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\r\n      const {_data, indexAxis} = dataset;\r\n      const meta = chart.getDatasetMeta(datasetIndex);\r\n      const data = _data || dataset.data;\r\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\r\n        return;\r\n      }\r\n      if (meta.type !== 'line') {\r\n        return;\r\n      }\r\n      const xAxis = chart.scales[meta.xAxisID];\r\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\r\n        return;\r\n      }\r\n      if (chart.options.parsing) {\r\n        return;\r\n      }\r\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\r\n      const threshold = options.threshold || 4 * availableWidth;\r\n      if (count <= threshold) {\r\n        cleanDecimatedDataset(dataset);\r\n        return;\r\n      }\r\n      if (isNullOrUndef(_data)) {\r\n        dataset._data = data;\r\n        delete dataset.data;\r\n        Object.defineProperty(dataset, 'data', {\r\n          configurable: true,\r\n          enumerable: true,\r\n          get: function() {\r\n            return this._decimated;\r\n          },\r\n          set: function(d) {\r\n            this._data = d;\r\n          }\r\n        });\r\n      }\r\n      let decimated;\r\n      switch (options.algorithm) {\r\n      case 'lttb':\r\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\r\n        break;\r\n      case 'min-max':\r\n        decimated = minMaxDecimation(data, start, count, availableWidth);\r\n        break;\r\n      default:\r\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\r\n      }\r\n      dataset._decimated = decimated;\r\n    });\r\n  },\r\n  destroy(chart) {\r\n    cleanDecimatedData(chart);\r\n  }\r\n};\r\n\r\nfunction getLineByIndex(chart, index) {\r\n  const meta = chart.getDatasetMeta(index);\r\n  const visible = meta && chart.isDatasetVisible(index);\r\n  return visible ? meta.dataset : null;\r\n}\r\nfunction parseFillOption(line) {\r\n  const options = line.options;\r\n  const fillOption = options.fill;\r\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\r\n  if (fill === undefined) {\r\n    fill = !!options.backgroundColor;\r\n  }\r\n  if (fill === false || fill === null) {\r\n    return false;\r\n  }\r\n  if (fill === true) {\r\n    return 'origin';\r\n  }\r\n  return fill;\r\n}\r\nfunction decodeFill(line, index, count) {\r\n  const fill = parseFillOption(line);\r\n  if (isObject(fill)) {\r\n    return isNaN(fill.value) ? false : fill;\r\n  }\r\n  let target = parseFloat(fill);\r\n  if (isNumberFinite(target) && Math.floor(target) === target) {\r\n    if (fill[0] === '-' || fill[0] === '+') {\r\n      target = index + target;\r\n    }\r\n    if (target === index || target < 0 || target >= count) {\r\n      return false;\r\n    }\r\n    return target;\r\n  }\r\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\r\n}\r\nfunction computeLinearBoundary(source) {\r\n  const {scale = {}, fill} = source;\r\n  let target = null;\r\n  let horizontal;\r\n  if (fill === 'start') {\r\n    target = scale.bottom;\r\n  } else if (fill === 'end') {\r\n    target = scale.top;\r\n  } else if (isObject(fill)) {\r\n    target = scale.getPixelForValue(fill.value);\r\n  } else if (scale.getBasePixel) {\r\n    target = scale.getBasePixel();\r\n  }\r\n  if (isNumberFinite(target)) {\r\n    horizontal = scale.isHorizontal();\r\n    return {\r\n      x: horizontal ? target : null,\r\n      y: horizontal ? null : target\r\n    };\r\n  }\r\n  return null;\r\n}\r\nclass simpleArc {\r\n  constructor(opts) {\r\n    this.x = opts.x;\r\n    this.y = opts.y;\r\n    this.radius = opts.radius;\r\n  }\r\n  pathSegment(ctx, bounds, opts) {\r\n    const {x, y, radius} = this;\r\n    bounds = bounds || {start: 0, end: TAU};\r\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\r\n    return !opts.bounds;\r\n  }\r\n  interpolate(point) {\r\n    const {x, y, radius} = this;\r\n    const angle = point.angle;\r\n    return {\r\n      x: x + Math.cos(angle) * radius,\r\n      y: y + Math.sin(angle) * radius,\r\n      angle\r\n    };\r\n  }\r\n}\r\nfunction computeCircularBoundary(source) {\r\n  const {scale, fill} = source;\r\n  const options = scale.options;\r\n  const length = scale.getLabels().length;\r\n  const target = [];\r\n  const start = options.reverse ? scale.max : scale.min;\r\n  const end = options.reverse ? scale.min : scale.max;\r\n  let i, center, value;\r\n  if (fill === 'start') {\r\n    value = start;\r\n  } else if (fill === 'end') {\r\n    value = end;\r\n  } else if (isObject(fill)) {\r\n    value = fill.value;\r\n  } else {\r\n    value = scale.getBaseValue();\r\n  }\r\n  if (options.grid.circular) {\r\n    center = scale.getPointPositionForValue(0, start);\r\n    return new simpleArc({\r\n      x: center.x,\r\n      y: center.y,\r\n      radius: scale.getDistanceFromCenterForValue(value)\r\n    });\r\n  }\r\n  for (i = 0; i < length; ++i) {\r\n    target.push(scale.getPointPositionForValue(i, value));\r\n  }\r\n  return target;\r\n}\r\nfunction computeBoundary(source) {\r\n  const scale = source.scale || {};\r\n  if (scale.getPointPositionForValue) {\r\n    return computeCircularBoundary(source);\r\n  }\r\n  return computeLinearBoundary(source);\r\n}\r\nfunction findSegmentEnd(start, end, points) {\r\n  for (;end > start; end--) {\r\n    const point = points[end];\r\n    if (!isNaN(point.x) && !isNaN(point.y)) {\r\n      break;\r\n    }\r\n  }\r\n  return end;\r\n}\r\nfunction pointsFromSegments(boundary, line) {\r\n  const {x = null, y = null} = boundary || {};\r\n  const linePoints = line.points;\r\n  const points = [];\r\n  line.segments.forEach(({start, end}) => {\r\n    end = findSegmentEnd(start, end, linePoints);\r\n    const first = linePoints[start];\r\n    const last = linePoints[end];\r\n    if (y !== null) {\r\n      points.push({x: first.x, y});\r\n      points.push({x: last.x, y});\r\n    } else if (x !== null) {\r\n      points.push({x, y: first.y});\r\n      points.push({x, y: last.y});\r\n    }\r\n  });\r\n  return points;\r\n}\r\nfunction buildStackLine(source) {\r\n  const {chart, scale, index, line} = source;\r\n  const points = [];\r\n  const segments = line.segments;\r\n  const sourcePoints = line.points;\r\n  const linesBelow = getLinesBelow(chart, index);\r\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const segment = segments[i];\r\n    for (let j = segment.start; j <= segment.end; j++) {\r\n      addPointsBelow(points, sourcePoints[j], linesBelow);\r\n    }\r\n  }\r\n  return new LineElement({points, options: {}});\r\n}\r\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\r\nfunction getLinesBelow(chart, index) {\r\n  const below = [];\r\n  const metas = chart.getSortedVisibleDatasetMetas();\r\n  for (let i = 0; i < metas.length; i++) {\r\n    const meta = metas[i];\r\n    if (meta.index === index) {\r\n      break;\r\n    }\r\n    if (isLineAndNotInHideAnimation(meta)) {\r\n      below.unshift(meta.dataset);\r\n    }\r\n  }\r\n  return below;\r\n}\r\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\r\n  const postponed = [];\r\n  for (let j = 0; j < linesBelow.length; j++) {\r\n    const line = linesBelow[j];\r\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\r\n    if (!point || (first && last)) {\r\n      continue;\r\n    }\r\n    if (first) {\r\n      postponed.unshift(point);\r\n    } else {\r\n      points.push(point);\r\n      if (!last) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  points.push(...postponed);\r\n}\r\nfunction findPoint(line, sourcePoint, property) {\r\n  const point = line.interpolate(sourcePoint, property);\r\n  if (!point) {\r\n    return {};\r\n  }\r\n  const pointValue = point[property];\r\n  const segments = line.segments;\r\n  const linePoints = line.points;\r\n  let first = false;\r\n  let last = false;\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const segment = segments[i];\r\n    const firstValue = linePoints[segment.start][property];\r\n    const lastValue = linePoints[segment.end][property];\r\n    if (pointValue >= firstValue && pointValue <= lastValue) {\r\n      first = pointValue === firstValue;\r\n      last = pointValue === lastValue;\r\n      break;\r\n    }\r\n  }\r\n  return {first, last, point};\r\n}\r\nfunction getTarget(source) {\r\n  const {chart, fill, line} = source;\r\n  if (isNumberFinite(fill)) {\r\n    return getLineByIndex(chart, fill);\r\n  }\r\n  if (fill === 'stack') {\r\n    return buildStackLine(source);\r\n  }\r\n  if (fill === 'shape') {\r\n    return true;\r\n  }\r\n  const boundary = computeBoundary(source);\r\n  if (boundary instanceof simpleArc) {\r\n    return boundary;\r\n  }\r\n  return createBoundaryLine(boundary, line);\r\n}\r\nfunction createBoundaryLine(boundary, line) {\r\n  let points = [];\r\n  let _loop = false;\r\n  if (isArray(boundary)) {\r\n    _loop = true;\r\n    points = boundary;\r\n  } else {\r\n    points = pointsFromSegments(boundary, line);\r\n  }\r\n  return points.length ? new LineElement({\r\n    points,\r\n    options: {tension: 0},\r\n    _loop,\r\n    _fullLoop: _loop\r\n  }) : null;\r\n}\r\nfunction resolveTarget(sources, index, propagate) {\r\n  const source = sources[index];\r\n  let fill = source.fill;\r\n  const visited = [index];\r\n  let target;\r\n  if (!propagate) {\r\n    return fill;\r\n  }\r\n  while (fill !== false && visited.indexOf(fill) === -1) {\r\n    if (!isNumberFinite(fill)) {\r\n      return fill;\r\n    }\r\n    target = sources[fill];\r\n    if (!target) {\r\n      return false;\r\n    }\r\n    if (target.visible) {\r\n      return fill;\r\n    }\r\n    visited.push(fill);\r\n    fill = target.fill;\r\n  }\r\n  return false;\r\n}\r\nfunction _clip(ctx, target, clipY) {\r\n  ctx.beginPath();\r\n  target.path(ctx);\r\n  ctx.lineTo(target.last().x, clipY);\r\n  ctx.lineTo(target.first().x, clipY);\r\n  ctx.closePath();\r\n  ctx.clip();\r\n}\r\nfunction getBounds(property, first, last, loop) {\r\n  if (loop) {\r\n    return;\r\n  }\r\n  let start = first[property];\r\n  let end = last[property];\r\n  if (property === 'angle') {\r\n    start = _normalizeAngle(start);\r\n    end = _normalizeAngle(end);\r\n  }\r\n  return {property, start, end};\r\n}\r\nfunction _getEdge(a, b, prop, fn) {\r\n  if (a && b) {\r\n    return fn(a[prop], b[prop]);\r\n  }\r\n  return a ? a[prop] : b ? b[prop] : 0;\r\n}\r\nfunction _segments(line, target, property) {\r\n  const segments = line.segments;\r\n  const points = line.points;\r\n  const tpoints = target.points;\r\n  const parts = [];\r\n  for (const segment of segments) {\r\n    let {start, end} = segment;\r\n    end = findSegmentEnd(start, end, points);\r\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\r\n    if (!target.segments) {\r\n      parts.push({\r\n        source: segment,\r\n        target: bounds,\r\n        start: points[start],\r\n        end: points[end]\r\n      });\r\n      continue;\r\n    }\r\n    const targetSegments = _boundSegments(target, bounds);\r\n    for (const tgt of targetSegments) {\r\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\r\n      const fillSources = _boundSegment(segment, points, subBounds);\r\n      for (const fillSource of fillSources) {\r\n        parts.push({\r\n          source: fillSource,\r\n          target: tgt,\r\n          start: {\r\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\r\n          },\r\n          end: {\r\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return parts;\r\n}\r\nfunction clipBounds(ctx, scale, bounds) {\r\n  const {top, bottom} = scale.chart.chartArea;\r\n  const {property, start, end} = bounds || {};\r\n  if (property === 'x') {\r\n    ctx.beginPath();\r\n    ctx.rect(start, top, end - start, bottom - top);\r\n    ctx.clip();\r\n  }\r\n}\r\nfunction interpolatedLineTo(ctx, target, point, property) {\r\n  const interpolatedPoint = target.interpolate(point, property);\r\n  if (interpolatedPoint) {\r\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\r\n  }\r\n}\r\nfunction _fill(ctx, cfg) {\r\n  const {line, target, property, color, scale} = cfg;\r\n  const segments = _segments(line, target, property);\r\n  for (const {source: src, target: tgt, start, end} of segments) {\r\n    const {style: {backgroundColor = color} = {}} = src;\r\n    const notShape = target !== true;\r\n    ctx.save();\r\n    ctx.fillStyle = backgroundColor;\r\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\r\n    ctx.beginPath();\r\n    const lineLoop = !!line.pathSegment(ctx, src);\r\n    let loop;\r\n    if (notShape) {\r\n      if (lineLoop) {\r\n        ctx.closePath();\r\n      } else {\r\n        interpolatedLineTo(ctx, target, end, property);\r\n      }\r\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\r\n      loop = lineLoop && targetLoop;\r\n      if (!loop) {\r\n        interpolatedLineTo(ctx, target, start, property);\r\n      }\r\n    }\r\n    ctx.closePath();\r\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\r\n    ctx.restore();\r\n  }\r\n}\r\nfunction doFill(ctx, cfg) {\r\n  const {line, target, above, below, area, scale} = cfg;\r\n  const property = line._loop ? 'angle' : cfg.axis;\r\n  ctx.save();\r\n  if (property === 'x' && below !== above) {\r\n    _clip(ctx, target, area.top);\r\n    _fill(ctx, {line, target, color: above, scale, property});\r\n    ctx.restore();\r\n    ctx.save();\r\n    _clip(ctx, target, area.bottom);\r\n  }\r\n  _fill(ctx, {line, target, color: below, scale, property});\r\n  ctx.restore();\r\n}\r\nfunction drawfill(ctx, source, area) {\r\n  const target = getTarget(source);\r\n  const {line, scale, axis} = source;\r\n  const lineOpts = line.options;\r\n  const fillOption = lineOpts.fill;\r\n  const color = lineOpts.backgroundColor;\r\n  const {above = color, below = color} = fillOption || {};\r\n  if (target && line.points.length) {\r\n    clipArea(ctx, area);\r\n    doFill(ctx, {line, target, above, below, area, scale, axis});\r\n    unclipArea(ctx);\r\n  }\r\n}\r\nvar plugin_filler = {\r\n  id: 'filler',\r\n  afterDatasetsUpdate(chart, _args, options) {\r\n    const count = (chart.data.datasets || []).length;\r\n    const sources = [];\r\n    let meta, i, line, source;\r\n    for (i = 0; i < count; ++i) {\r\n      meta = chart.getDatasetMeta(i);\r\n      line = meta.dataset;\r\n      source = null;\r\n      if (line && line.options && line instanceof LineElement) {\r\n        source = {\r\n          visible: chart.isDatasetVisible(i),\r\n          index: i,\r\n          fill: decodeFill(line, i, count),\r\n          chart,\r\n          axis: meta.controller.options.indexAxis,\r\n          scale: meta.vScale,\r\n          line,\r\n        };\r\n      }\r\n      meta.$filler = source;\r\n      sources.push(source);\r\n    }\r\n    for (i = 0; i < count; ++i) {\r\n      source = sources[i];\r\n      if (!source || source.fill === false) {\r\n        continue;\r\n      }\r\n      source.fill = resolveTarget(sources, i, options.propagate);\r\n    }\r\n  },\r\n  beforeDraw(chart, _args, options) {\r\n    const draw = options.drawTime === 'beforeDraw';\r\n    const metasets = chart.getSortedVisibleDatasetMetas();\r\n    const area = chart.chartArea;\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      const source = metasets[i].$filler;\r\n      if (!source) {\r\n        continue;\r\n      }\r\n      source.line.updateControlPoints(area, source.axis);\r\n      if (draw) {\r\n        drawfill(chart.ctx, source, area);\r\n      }\r\n    }\r\n  },\r\n  beforeDatasetsDraw(chart, _args, options) {\r\n    if (options.drawTime !== 'beforeDatasetsDraw') {\r\n      return;\r\n    }\r\n    const metasets = chart.getSortedVisibleDatasetMetas();\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      const source = metasets[i].$filler;\r\n      if (source) {\r\n        drawfill(chart.ctx, source, chart.chartArea);\r\n      }\r\n    }\r\n  },\r\n  beforeDatasetDraw(chart, args, options) {\r\n    const source = args.meta.$filler;\r\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\r\n      return;\r\n    }\r\n    drawfill(chart.ctx, source, chart.chartArea);\r\n  },\r\n  defaults: {\r\n    propagate: true,\r\n    drawTime: 'beforeDatasetDraw'\r\n  }\r\n};\r\n\r\nconst getBoxSize = (labelOpts, fontSize) => {\r\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\r\n  if (labelOpts.usePointStyle) {\r\n    boxHeight = Math.min(boxHeight, fontSize);\r\n    boxWidth = Math.min(boxWidth, fontSize);\r\n  }\r\n  return {\r\n    boxWidth,\r\n    boxHeight,\r\n    itemHeight: Math.max(fontSize, boxHeight)\r\n  };\r\n};\r\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\r\nclass Legend extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this._added = false;\r\n    this.legendHitBoxes = [];\r\n    this._hoveredItem = null;\r\n    this.doughnutMode = false;\r\n    this.chart = config.chart;\r\n    this.options = config.options;\r\n    this.ctx = config.ctx;\r\n    this.legendItems = undefined;\r\n    this.columnSizes = undefined;\r\n    this.lineWidths = undefined;\r\n    this.maxHeight = undefined;\r\n    this.maxWidth = undefined;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.height = undefined;\r\n    this.width = undefined;\r\n    this._margins = undefined;\r\n    this.position = undefined;\r\n    this.weight = undefined;\r\n    this.fullSize = undefined;\r\n  }\r\n  update(maxWidth, maxHeight, margins) {\r\n    this.maxWidth = maxWidth;\r\n    this.maxHeight = maxHeight;\r\n    this._margins = margins;\r\n    this.setDimensions();\r\n    this.buildLabels();\r\n    this.fit();\r\n  }\r\n  setDimensions() {\r\n    if (this.isHorizontal()) {\r\n      this.width = this.maxWidth;\r\n      this.left = this._margins.left;\r\n      this.right = this.width;\r\n    } else {\r\n      this.height = this.maxHeight;\r\n      this.top = this._margins.top;\r\n      this.bottom = this.height;\r\n    }\r\n  }\r\n  buildLabels() {\r\n    const labelOpts = this.options.labels || {};\r\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\r\n    if (labelOpts.filter) {\r\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\r\n    }\r\n    if (labelOpts.sort) {\r\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\r\n    }\r\n    if (this.options.reverse) {\r\n      legendItems.reverse();\r\n    }\r\n    this.legendItems = legendItems;\r\n  }\r\n  fit() {\r\n    const {options, ctx} = this;\r\n    if (!options.display) {\r\n      this.width = this.height = 0;\r\n      return;\r\n    }\r\n    const labelOpts = options.labels;\r\n    const labelFont = toFont(labelOpts.font);\r\n    const fontSize = labelFont.size;\r\n    const titleHeight = this._computeTitleHeight();\r\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\r\n    let width, height;\r\n    ctx.font = labelFont.string;\r\n    if (this.isHorizontal()) {\r\n      width = this.maxWidth;\r\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\r\n    } else {\r\n      height = this.maxHeight;\r\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\r\n    }\r\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\r\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\r\n  }\r\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\r\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\r\n    const hitboxes = this.legendHitBoxes = [];\r\n    const lineWidths = this.lineWidths = [0];\r\n    const lineHeight = itemHeight + padding;\r\n    let totalHeight = titleHeight;\r\n    ctx.textAlign = 'left';\r\n    ctx.textBaseline = 'middle';\r\n    let row = -1;\r\n    let top = -lineHeight;\r\n    this.legendItems.forEach((legendItem, i) => {\r\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\r\n        totalHeight += lineHeight;\r\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\r\n        top += lineHeight;\r\n        row++;\r\n      }\r\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\r\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\r\n    });\r\n    return totalHeight;\r\n  }\r\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\r\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\r\n    const hitboxes = this.legendHitBoxes = [];\r\n    const columnSizes = this.columnSizes = [];\r\n    const heightLimit = maxHeight - titleHeight;\r\n    let totalWidth = padding;\r\n    let currentColWidth = 0;\r\n    let currentColHeight = 0;\r\n    let left = 0;\r\n    let col = 0;\r\n    this.legendItems.forEach((legendItem, i) => {\r\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\r\n        totalWidth += currentColWidth + padding;\r\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\r\n        left += currentColWidth + padding;\r\n        col++;\r\n        currentColWidth = currentColHeight = 0;\r\n      }\r\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\r\n      currentColWidth = Math.max(currentColWidth, itemWidth);\r\n      currentColHeight += itemHeight + padding;\r\n    });\r\n    totalWidth += currentColWidth;\r\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\r\n    return totalWidth;\r\n  }\r\n  adjustHitBoxes() {\r\n    if (!this.options.display) {\r\n      return;\r\n    }\r\n    const titleHeight = this._computeTitleHeight();\r\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\r\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\r\n    if (this.isHorizontal()) {\r\n      let row = 0;\r\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\r\n      for (const hitbox of hitboxes) {\r\n        if (row !== hitbox.row) {\r\n          row = hitbox.row;\r\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\r\n        }\r\n        hitbox.top += this.top + titleHeight + padding;\r\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\r\n        left += hitbox.width + padding;\r\n      }\r\n    } else {\r\n      let col = 0;\r\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\r\n      for (const hitbox of hitboxes) {\r\n        if (hitbox.col !== col) {\r\n          col = hitbox.col;\r\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\r\n        }\r\n        hitbox.top = top;\r\n        hitbox.left += this.left + padding;\r\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\r\n        top += hitbox.height + padding;\r\n      }\r\n    }\r\n  }\r\n  isHorizontal() {\r\n    return this.options.position === 'top' || this.options.position === 'bottom';\r\n  }\r\n  draw() {\r\n    if (this.options.display) {\r\n      const ctx = this.ctx;\r\n      clipArea(ctx, this);\r\n      this._draw();\r\n      unclipArea(ctx);\r\n    }\r\n  }\r\n  _draw() {\r\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\r\n    const {align, labels: labelOpts} = opts;\r\n    const defaultColor = defaults.color;\r\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\r\n    const labelFont = toFont(labelOpts.font);\r\n    const {color: fontColor, padding} = labelOpts;\r\n    const fontSize = labelFont.size;\r\n    const halfFontSize = fontSize / 2;\r\n    let cursor;\r\n    this.drawTitle();\r\n    ctx.textAlign = rtlHelper.textAlign('left');\r\n    ctx.textBaseline = 'middle';\r\n    ctx.lineWidth = 0.5;\r\n    ctx.font = labelFont.string;\r\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\r\n    const drawLegendBox = function(x, y, legendItem) {\r\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\r\n        return;\r\n      }\r\n      ctx.save();\r\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\r\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\r\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\r\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\r\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\r\n      ctx.lineWidth = lineWidth;\r\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\r\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\r\n      if (labelOpts.usePointStyle) {\r\n        const drawOptions = {\r\n          radius: boxWidth * Math.SQRT2 / 2,\r\n          pointStyle: legendItem.pointStyle,\r\n          rotation: legendItem.rotation,\r\n          borderWidth: lineWidth\r\n        };\r\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\r\n        const centerY = y + halfFontSize;\r\n        drawPoint(ctx, drawOptions, centerX, centerY);\r\n      } else {\r\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\r\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\r\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\r\n        ctx.beginPath();\r\n        if (Object.values(borderRadius).some(v => v !== 0)) {\r\n          addRoundedRectPath(ctx, {\r\n            x: xBoxLeft,\r\n            y: yBoxTop,\r\n            w: boxWidth,\r\n            h: boxHeight,\r\n            radius: borderRadius,\r\n          });\r\n        } else {\r\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\r\n        }\r\n        ctx.fill();\r\n        if (lineWidth !== 0) {\r\n          ctx.stroke();\r\n        }\r\n      }\r\n      ctx.restore();\r\n    };\r\n    const fillText = function(x, y, legendItem) {\r\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\r\n        strikethrough: legendItem.hidden,\r\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\r\n      });\r\n    };\r\n    const isHorizontal = this.isHorizontal();\r\n    const titleHeight = this._computeTitleHeight();\r\n    if (isHorizontal) {\r\n      cursor = {\r\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\r\n        y: this.top + padding + titleHeight,\r\n        line: 0\r\n      };\r\n    } else {\r\n      cursor = {\r\n        x: this.left + padding,\r\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\r\n        line: 0\r\n      };\r\n    }\r\n    overrideTextDirection(this.ctx, opts.textDirection);\r\n    const lineHeight = itemHeight + padding;\r\n    this.legendItems.forEach((legendItem, i) => {\r\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\r\n      ctx.fillStyle = legendItem.fontColor || fontColor;\r\n      const textWidth = ctx.measureText(legendItem.text).width;\r\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\r\n      const width = boxWidth + halfFontSize + textWidth;\r\n      let x = cursor.x;\r\n      let y = cursor.y;\r\n      rtlHelper.setWidth(this.width);\r\n      if (isHorizontal) {\r\n        if (i > 0 && x + width + padding > this.right) {\r\n          y = cursor.y += lineHeight;\r\n          cursor.line++;\r\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\r\n        }\r\n      } else if (i > 0 && y + lineHeight > this.bottom) {\r\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\r\n        cursor.line++;\r\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\r\n      }\r\n      const realX = rtlHelper.x(x);\r\n      drawLegendBox(realX, y, legendItem);\r\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\r\n      fillText(rtlHelper.x(x), y, legendItem);\r\n      if (isHorizontal) {\r\n        cursor.x += width + padding;\r\n      } else {\r\n        cursor.y += lineHeight;\r\n      }\r\n    });\r\n    restoreTextDirection(this.ctx, opts.textDirection);\r\n  }\r\n  drawTitle() {\r\n    const opts = this.options;\r\n    const titleOpts = opts.title;\r\n    const titleFont = toFont(titleOpts.font);\r\n    const titlePadding = toPadding(titleOpts.padding);\r\n    if (!titleOpts.display) {\r\n      return;\r\n    }\r\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\r\n    const ctx = this.ctx;\r\n    const position = titleOpts.position;\r\n    const halfFontSize = titleFont.size / 2;\r\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\r\n    let y;\r\n    let left = this.left;\r\n    let maxWidth = this.width;\r\n    if (this.isHorizontal()) {\r\n      maxWidth = Math.max(...this.lineWidths);\r\n      y = this.top + topPaddingPlusHalfFontSize;\r\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\r\n    } else {\r\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\r\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\r\n    }\r\n    const x = _alignStartEnd(position, left, left + maxWidth);\r\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\r\n    ctx.textBaseline = 'middle';\r\n    ctx.strokeStyle = titleOpts.color;\r\n    ctx.fillStyle = titleOpts.color;\r\n    ctx.font = titleFont.string;\r\n    renderText(ctx, titleOpts.text, x, y, titleFont);\r\n  }\r\n  _computeTitleHeight() {\r\n    const titleOpts = this.options.title;\r\n    const titleFont = toFont(titleOpts.font);\r\n    const titlePadding = toPadding(titleOpts.padding);\r\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\r\n  }\r\n  _getLegendItemAt(x, y) {\r\n    let i, hitBox, lh;\r\n    if (x >= this.left && x <= this.right && y >= this.top && y <= this.bottom) {\r\n      lh = this.legendHitBoxes;\r\n      for (i = 0; i < lh.length; ++i) {\r\n        hitBox = lh[i];\r\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\r\n          return this.legendItems[i];\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  handleEvent(e) {\r\n    const opts = this.options;\r\n    if (!isListened(e.type, opts)) {\r\n      return;\r\n    }\r\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\r\n    if (e.type === 'mousemove') {\r\n      const previous = this._hoveredItem;\r\n      const sameItem = itemsEqual(previous, hoveredItem);\r\n      if (previous && !sameItem) {\r\n        callback(opts.onLeave, [e, previous, this], this);\r\n      }\r\n      this._hoveredItem = hoveredItem;\r\n      if (hoveredItem && !sameItem) {\r\n        callback(opts.onHover, [e, hoveredItem, this], this);\r\n      }\r\n    } else if (hoveredItem) {\r\n      callback(opts.onClick, [e, hoveredItem, this], this);\r\n    }\r\n  }\r\n}\r\nfunction isListened(type, opts) {\r\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\r\n    return true;\r\n  }\r\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nvar plugin_legend = {\r\n  id: 'legend',\r\n  _element: Legend,\r\n  start(chart, _args, options) {\r\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\r\n    layouts.configure(chart, legend, options);\r\n    layouts.addBox(chart, legend);\r\n  },\r\n  stop(chart) {\r\n    layouts.removeBox(chart, chart.legend);\r\n    delete chart.legend;\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    const legend = chart.legend;\r\n    layouts.configure(chart, legend, options);\r\n    legend.options = options;\r\n  },\r\n  afterUpdate(chart) {\r\n    const legend = chart.legend;\r\n    legend.buildLabels();\r\n    legend.adjustHitBoxes();\r\n  },\r\n  afterEvent(chart, args) {\r\n    if (!args.replay) {\r\n      chart.legend.handleEvent(args.event);\r\n    }\r\n  },\r\n  defaults: {\r\n    display: true,\r\n    position: 'top',\r\n    align: 'center',\r\n    fullSize: true,\r\n    reverse: false,\r\n    weight: 1000,\r\n    onClick(e, legendItem, legend) {\r\n      const index = legendItem.datasetIndex;\r\n      const ci = legend.chart;\r\n      if (ci.isDatasetVisible(index)) {\r\n        ci.hide(index);\r\n        legendItem.hidden = true;\r\n      } else {\r\n        ci.show(index);\r\n        legendItem.hidden = false;\r\n      }\r\n    },\r\n    onHover: null,\r\n    onLeave: null,\r\n    labels: {\r\n      color: (ctx) => ctx.chart.options.color,\r\n      boxWidth: 40,\r\n      padding: 10,\r\n      generateLabels(chart) {\r\n        const datasets = chart.data.datasets;\r\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\r\n        return chart._getSortedDatasetMetas().map((meta) => {\r\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\r\n          const borderWidth = toPadding(style.borderWidth);\r\n          return {\r\n            text: datasets[meta.index].label,\r\n            fillStyle: style.backgroundColor,\r\n            fontColor: color,\r\n            hidden: !meta.visible,\r\n            lineCap: style.borderCapStyle,\r\n            lineDash: style.borderDash,\r\n            lineDashOffset: style.borderDashOffset,\r\n            lineJoin: style.borderJoinStyle,\r\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\r\n            strokeStyle: style.borderColor,\r\n            pointStyle: pointStyle || style.pointStyle,\r\n            rotation: style.rotation,\r\n            textAlign: textAlign || style.textAlign,\r\n            borderRadius: 0,\r\n            datasetIndex: meta.index\r\n          };\r\n        }, this);\r\n      }\r\n    },\r\n    title: {\r\n      color: (ctx) => ctx.chart.options.color,\r\n      display: false,\r\n      position: 'center',\r\n      text: '',\r\n    }\r\n  },\r\n  descriptors: {\r\n    _scriptable: (name) => !name.startsWith('on'),\r\n    labels: {\r\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\r\n    }\r\n  },\r\n};\r\n\r\nclass Title extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this.chart = config.chart;\r\n    this.options = config.options;\r\n    this.ctx = config.ctx;\r\n    this._padding = undefined;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    this.position = undefined;\r\n    this.weight = undefined;\r\n    this.fullSize = undefined;\r\n  }\r\n  update(maxWidth, maxHeight) {\r\n    const opts = this.options;\r\n    this.left = 0;\r\n    this.top = 0;\r\n    if (!opts.display) {\r\n      this.width = this.height = this.right = this.bottom = 0;\r\n      return;\r\n    }\r\n    this.width = this.right = maxWidth;\r\n    this.height = this.bottom = maxHeight;\r\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\r\n    this._padding = toPadding(opts.padding);\r\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\r\n    if (this.isHorizontal()) {\r\n      this.height = textSize;\r\n    } else {\r\n      this.width = textSize;\r\n    }\r\n  }\r\n  isHorizontal() {\r\n    const pos = this.options.position;\r\n    return pos === 'top' || pos === 'bottom';\r\n  }\r\n  _drawArgs(offset) {\r\n    const {top, left, bottom, right, options} = this;\r\n    const align = options.align;\r\n    let rotation = 0;\r\n    let maxWidth, titleX, titleY;\r\n    if (this.isHorizontal()) {\r\n      titleX = _alignStartEnd(align, left, right);\r\n      titleY = top + offset;\r\n      maxWidth = right - left;\r\n    } else {\r\n      if (options.position === 'left') {\r\n        titleX = left + offset;\r\n        titleY = _alignStartEnd(align, bottom, top);\r\n        rotation = PI * -0.5;\r\n      } else {\r\n        titleX = right - offset;\r\n        titleY = _alignStartEnd(align, top, bottom);\r\n        rotation = PI * 0.5;\r\n      }\r\n      maxWidth = bottom - top;\r\n    }\r\n    return {titleX, titleY, maxWidth, rotation};\r\n  }\r\n  draw() {\r\n    const ctx = this.ctx;\r\n    const opts = this.options;\r\n    if (!opts.display) {\r\n      return;\r\n    }\r\n    const fontOpts = toFont(opts.font);\r\n    const lineHeight = fontOpts.lineHeight;\r\n    const offset = lineHeight / 2 + this._padding.top;\r\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\r\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\r\n      color: opts.color,\r\n      maxWidth,\r\n      rotation,\r\n      textAlign: _toLeftRightCenter(opts.align),\r\n      textBaseline: 'middle',\r\n      translation: [titleX, titleY],\r\n    });\r\n  }\r\n}\r\nfunction createTitle(chart, titleOpts) {\r\n  const title = new Title({\r\n    ctx: chart.ctx,\r\n    options: titleOpts,\r\n    chart\r\n  });\r\n  layouts.configure(chart, title, titleOpts);\r\n  layouts.addBox(chart, title);\r\n  chart.titleBlock = title;\r\n}\r\nvar plugin_title = {\r\n  id: 'title',\r\n  _element: Title,\r\n  start(chart, _args, options) {\r\n    createTitle(chart, options);\r\n  },\r\n  stop(chart) {\r\n    const titleBlock = chart.titleBlock;\r\n    layouts.removeBox(chart, titleBlock);\r\n    delete chart.titleBlock;\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    const title = chart.titleBlock;\r\n    layouts.configure(chart, title, options);\r\n    title.options = options;\r\n  },\r\n  defaults: {\r\n    align: 'center',\r\n    display: false,\r\n    font: {\r\n      weight: 'bold',\r\n    },\r\n    fullSize: true,\r\n    padding: 10,\r\n    position: 'top',\r\n    text: '',\r\n    weight: 2000\r\n  },\r\n  defaultRoutes: {\r\n    color: 'color'\r\n  },\r\n  descriptors: {\r\n    _scriptable: true,\r\n    _indexable: false,\r\n  },\r\n};\r\n\r\nconst map = new WeakMap();\r\nvar plugin_subtitle = {\r\n  id: 'subtitle',\r\n  start(chart, _args, options) {\r\n    const title = new Title({\r\n      ctx: chart.ctx,\r\n      options,\r\n      chart\r\n    });\r\n    layouts.configure(chart, title, options);\r\n    layouts.addBox(chart, title);\r\n    map.set(chart, title);\r\n  },\r\n  stop(chart) {\r\n    layouts.removeBox(chart, map.get(chart));\r\n    map.delete(chart);\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    const title = map.get(chart);\r\n    layouts.configure(chart, title, options);\r\n    title.options = options;\r\n  },\r\n  defaults: {\r\n    align: 'center',\r\n    display: false,\r\n    font: {\r\n      weight: 'normal',\r\n    },\r\n    fullSize: true,\r\n    padding: 0,\r\n    position: 'top',\r\n    text: '',\r\n    weight: 1500\r\n  },\r\n  defaultRoutes: {\r\n    color: 'color'\r\n  },\r\n  descriptors: {\r\n    _scriptable: true,\r\n    _indexable: false,\r\n  },\r\n};\r\n\r\nconst positioners = {\r\n  average(items) {\r\n    if (!items.length) {\r\n      return false;\r\n    }\r\n    let i, len;\r\n    let x = 0;\r\n    let y = 0;\r\n    let count = 0;\r\n    for (i = 0, len = items.length; i < len; ++i) {\r\n      const el = items[i].element;\r\n      if (el && el.hasValue()) {\r\n        const pos = el.tooltipPosition();\r\n        x += pos.x;\r\n        y += pos.y;\r\n        ++count;\r\n      }\r\n    }\r\n    return {\r\n      x: x / count,\r\n      y: y / count\r\n    };\r\n  },\r\n  nearest(items, eventPosition) {\r\n    if (!items.length) {\r\n      return false;\r\n    }\r\n    let x = eventPosition.x;\r\n    let y = eventPosition.y;\r\n    let minDistance = Number.POSITIVE_INFINITY;\r\n    let i, len, nearestElement;\r\n    for (i = 0, len = items.length; i < len; ++i) {\r\n      const el = items[i].element;\r\n      if (el && el.hasValue()) {\r\n        const center = el.getCenterPoint();\r\n        const d = distanceBetweenPoints(eventPosition, center);\r\n        if (d < minDistance) {\r\n          minDistance = d;\r\n          nearestElement = el;\r\n        }\r\n      }\r\n    }\r\n    if (nearestElement) {\r\n      const tp = nearestElement.tooltipPosition();\r\n      x = tp.x;\r\n      y = tp.y;\r\n    }\r\n    return {\r\n      x,\r\n      y\r\n    };\r\n  }\r\n};\r\nfunction pushOrConcat(base, toPush) {\r\n  if (toPush) {\r\n    if (isArray(toPush)) {\r\n      Array.prototype.push.apply(base, toPush);\r\n    } else {\r\n      base.push(toPush);\r\n    }\r\n  }\r\n  return base;\r\n}\r\nfunction splitNewlines(str) {\r\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\r\n    return str.split('\\n');\r\n  }\r\n  return str;\r\n}\r\nfunction createTooltipItem(chart, item) {\r\n  const {element, datasetIndex, index} = item;\r\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\r\n  const {label, value} = controller.getLabelAndValue(index);\r\n  return {\r\n    chart,\r\n    label,\r\n    parsed: controller.getParsed(index),\r\n    raw: chart.data.datasets[datasetIndex].data[index],\r\n    formattedValue: value,\r\n    dataset: controller.getDataset(),\r\n    dataIndex: index,\r\n    datasetIndex,\r\n    element\r\n  };\r\n}\r\nfunction getTooltipSize(tooltip, options) {\r\n  const ctx = tooltip._chart.ctx;\r\n  const {body, footer, title} = tooltip;\r\n  const {boxWidth, boxHeight} = options;\r\n  const bodyFont = toFont(options.bodyFont);\r\n  const titleFont = toFont(options.titleFont);\r\n  const footerFont = toFont(options.footerFont);\r\n  const titleLineCount = title.length;\r\n  const footerLineCount = footer.length;\r\n  const bodyLineItemCount = body.length;\r\n  const padding = toPadding(options.padding);\r\n  let height = padding.height;\r\n  let width = 0;\r\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\r\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\r\n  if (titleLineCount) {\r\n    height += titleLineCount * titleFont.lineHeight\r\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\r\n\t\t\t+ options.titleMarginBottom;\r\n  }\r\n  if (combinedBodyLength) {\r\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\r\n    height += bodyLineItemCount * bodyLineHeight\r\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\r\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\r\n  }\r\n  if (footerLineCount) {\r\n    height += options.footerMarginTop\r\n\t\t\t+ footerLineCount * footerFont.lineHeight\r\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\r\n  }\r\n  let widthPadding = 0;\r\n  const maxLineWidth = function(line) {\r\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\r\n  };\r\n  ctx.save();\r\n  ctx.font = titleFont.string;\r\n  each(tooltip.title, maxLineWidth);\r\n  ctx.font = bodyFont.string;\r\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\r\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\r\n  each(body, (bodyItem) => {\r\n    each(bodyItem.before, maxLineWidth);\r\n    each(bodyItem.lines, maxLineWidth);\r\n    each(bodyItem.after, maxLineWidth);\r\n  });\r\n  widthPadding = 0;\r\n  ctx.font = footerFont.string;\r\n  each(tooltip.footer, maxLineWidth);\r\n  ctx.restore();\r\n  width += padding.width;\r\n  return {width, height};\r\n}\r\nfunction determineYAlign(chart, size) {\r\n  const {y, height} = size;\r\n  if (y < height / 2) {\r\n    return 'top';\r\n  } else if (y > (chart.height - height / 2)) {\r\n    return 'bottom';\r\n  }\r\n  return 'center';\r\n}\r\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\r\n  const {x, width} = size;\r\n  const caret = options.caretSize + options.caretPadding;\r\n  if (xAlign === 'left' && x + width + caret > chart.width) {\r\n    return true;\r\n  }\r\n  if (xAlign === 'right' && x - width - caret < 0) {\r\n    return true;\r\n  }\r\n}\r\nfunction determineXAlign(chart, options, size, yAlign) {\r\n  const {x, width} = size;\r\n  const {width: chartWidth, chartArea: {left, right}} = chart;\r\n  let xAlign = 'center';\r\n  if (yAlign === 'center') {\r\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\r\n  } else if (x <= width / 2) {\r\n    xAlign = 'left';\r\n  } else if (x >= chartWidth - width / 2) {\r\n    xAlign = 'right';\r\n  }\r\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\r\n    xAlign = 'center';\r\n  }\r\n  return xAlign;\r\n}\r\nfunction determineAlignment(chart, options, size) {\r\n  const yAlign = options.yAlign || determineYAlign(chart, size);\r\n  return {\r\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\r\n    yAlign\r\n  };\r\n}\r\nfunction alignX(size, xAlign) {\r\n  let {x, width} = size;\r\n  if (xAlign === 'right') {\r\n    x -= width;\r\n  } else if (xAlign === 'center') {\r\n    x -= (width / 2);\r\n  }\r\n  return x;\r\n}\r\nfunction alignY(size, yAlign, paddingAndSize) {\r\n  let {y, height} = size;\r\n  if (yAlign === 'top') {\r\n    y += paddingAndSize;\r\n  } else if (yAlign === 'bottom') {\r\n    y -= height + paddingAndSize;\r\n  } else {\r\n    y -= (height / 2);\r\n  }\r\n  return y;\r\n}\r\nfunction getBackgroundPoint(options, size, alignment, chart) {\r\n  const {caretSize, caretPadding, cornerRadius} = options;\r\n  const {xAlign, yAlign} = alignment;\r\n  const paddingAndSize = caretSize + caretPadding;\r\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\r\n  let x = alignX(size, xAlign);\r\n  const y = alignY(size, yAlign, paddingAndSize);\r\n  if (yAlign === 'center') {\r\n    if (xAlign === 'left') {\r\n      x += paddingAndSize;\r\n    } else if (xAlign === 'right') {\r\n      x -= paddingAndSize;\r\n    }\r\n  } else if (xAlign === 'left') {\r\n    x -= Math.max(topLeft, bottomLeft) + caretPadding;\r\n  } else if (xAlign === 'right') {\r\n    x += Math.max(topRight, bottomRight) + caretPadding;\r\n  }\r\n  return {\r\n    x: _limitValue(x, 0, chart.width - size.width),\r\n    y: _limitValue(y, 0, chart.height - size.height)\r\n  };\r\n}\r\nfunction getAlignedX(tooltip, align, options) {\r\n  const padding = toPadding(options.padding);\r\n  return align === 'center'\r\n    ? tooltip.x + tooltip.width / 2\r\n    : align === 'right'\r\n      ? tooltip.x + tooltip.width - padding.right\r\n      : tooltip.x + padding.left;\r\n}\r\nfunction getBeforeAfterBodyLines(callback) {\r\n  return pushOrConcat([], splitNewlines(callback));\r\n}\r\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\r\n  return Object.assign(Object.create(parent), {\r\n    tooltip,\r\n    tooltipItems,\r\n    type: 'tooltip'\r\n  });\r\n}\r\nfunction overrideCallbacks(callbacks, context) {\r\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\r\n  return override ? callbacks.override(override) : callbacks;\r\n}\r\nclass Tooltip extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this.opacity = 0;\r\n    this._active = [];\r\n    this._chart = config._chart;\r\n    this._eventPosition = undefined;\r\n    this._size = undefined;\r\n    this._cachedAnimations = undefined;\r\n    this._tooltipItems = [];\r\n    this.$animations = undefined;\r\n    this.$context = undefined;\r\n    this.options = config.options;\r\n    this.dataPoints = undefined;\r\n    this.title = undefined;\r\n    this.beforeBody = undefined;\r\n    this.body = undefined;\r\n    this.afterBody = undefined;\r\n    this.footer = undefined;\r\n    this.xAlign = undefined;\r\n    this.yAlign = undefined;\r\n    this.x = undefined;\r\n    this.y = undefined;\r\n    this.height = undefined;\r\n    this.width = undefined;\r\n    this.caretX = undefined;\r\n    this.caretY = undefined;\r\n    this.labelColors = undefined;\r\n    this.labelPointStyles = undefined;\r\n    this.labelTextColors = undefined;\r\n  }\r\n  initialize(options) {\r\n    this.options = options;\r\n    this._cachedAnimations = undefined;\r\n    this.$context = undefined;\r\n  }\r\n  _resolveAnimations() {\r\n    const cached = this._cachedAnimations;\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    const chart = this._chart;\r\n    const options = this.options.setContext(this.getContext());\r\n    const opts = options.enabled && chart.options.animation && options.animations;\r\n    const animations = new Animations(this._chart, opts);\r\n    if (opts._cacheable) {\r\n      this._cachedAnimations = Object.freeze(animations);\r\n    }\r\n    return animations;\r\n  }\r\n  getContext() {\r\n    return this.$context ||\r\n\t\t\t(this.$context = createTooltipContext(this._chart.getContext(), this, this._tooltipItems));\r\n  }\r\n  getTitle(context, options) {\r\n    const {callbacks} = options;\r\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\r\n    const title = callbacks.title.apply(this, [context]);\r\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\r\n    let lines = [];\r\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\r\n    lines = pushOrConcat(lines, splitNewlines(title));\r\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\r\n    return lines;\r\n  }\r\n  getBeforeBody(tooltipItems, options) {\r\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\r\n  }\r\n  getBody(tooltipItems, options) {\r\n    const {callbacks} = options;\r\n    const bodyItems = [];\r\n    each(tooltipItems, (context) => {\r\n      const bodyItem = {\r\n        before: [],\r\n        lines: [],\r\n        after: []\r\n      };\r\n      const scoped = overrideCallbacks(callbacks, context);\r\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\r\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\r\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\r\n      bodyItems.push(bodyItem);\r\n    });\r\n    return bodyItems;\r\n  }\r\n  getAfterBody(tooltipItems, options) {\r\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\r\n  }\r\n  getFooter(tooltipItems, options) {\r\n    const {callbacks} = options;\r\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\r\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\r\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\r\n    let lines = [];\r\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\r\n    lines = pushOrConcat(lines, splitNewlines(footer));\r\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\r\n    return lines;\r\n  }\r\n  _createItems(options) {\r\n    const active = this._active;\r\n    const data = this._chart.data;\r\n    const labelColors = [];\r\n    const labelPointStyles = [];\r\n    const labelTextColors = [];\r\n    let tooltipItems = [];\r\n    let i, len;\r\n    for (i = 0, len = active.length; i < len; ++i) {\r\n      tooltipItems.push(createTooltipItem(this._chart, active[i]));\r\n    }\r\n    if (options.filter) {\r\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\r\n    }\r\n    if (options.itemSort) {\r\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\r\n    }\r\n    each(tooltipItems, (context) => {\r\n      const scoped = overrideCallbacks(options.callbacks, context);\r\n      labelColors.push(scoped.labelColor.call(this, context));\r\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\r\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\r\n    });\r\n    this.labelColors = labelColors;\r\n    this.labelPointStyles = labelPointStyles;\r\n    this.labelTextColors = labelTextColors;\r\n    this.dataPoints = tooltipItems;\r\n    return tooltipItems;\r\n  }\r\n  update(changed, replay) {\r\n    const options = this.options.setContext(this.getContext());\r\n    const active = this._active;\r\n    let properties;\r\n    let tooltipItems = [];\r\n    if (!active.length) {\r\n      if (this.opacity !== 0) {\r\n        properties = {\r\n          opacity: 0\r\n        };\r\n      }\r\n    } else {\r\n      const position = positioners[options.position].call(this, active, this._eventPosition);\r\n      tooltipItems = this._createItems(options);\r\n      this.title = this.getTitle(tooltipItems, options);\r\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\r\n      this.body = this.getBody(tooltipItems, options);\r\n      this.afterBody = this.getAfterBody(tooltipItems, options);\r\n      this.footer = this.getFooter(tooltipItems, options);\r\n      const size = this._size = getTooltipSize(this, options);\r\n      const positionAndSize = Object.assign({}, position, size);\r\n      const alignment = determineAlignment(this._chart, options, positionAndSize);\r\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this._chart);\r\n      this.xAlign = alignment.xAlign;\r\n      this.yAlign = alignment.yAlign;\r\n      properties = {\r\n        opacity: 1,\r\n        x: backgroundPoint.x,\r\n        y: backgroundPoint.y,\r\n        width: size.width,\r\n        height: size.height,\r\n        caretX: position.x,\r\n        caretY: position.y\r\n      };\r\n    }\r\n    this._tooltipItems = tooltipItems;\r\n    this.$context = undefined;\r\n    if (properties) {\r\n      this._resolveAnimations().update(this, properties);\r\n    }\r\n    if (changed && options.external) {\r\n      options.external.call(this, {chart: this._chart, tooltip: this, replay});\r\n    }\r\n  }\r\n  drawCaret(tooltipPoint, ctx, size, options) {\r\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\r\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\r\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\r\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\r\n  }\r\n  getCaretPosition(tooltipPoint, size, options) {\r\n    const {xAlign, yAlign} = this;\r\n    const {caretSize, cornerRadius} = options;\r\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\r\n    const {x: ptX, y: ptY} = tooltipPoint;\r\n    const {width, height} = size;\r\n    let x1, x2, x3, y1, y2, y3;\r\n    if (yAlign === 'center') {\r\n      y2 = ptY + (height / 2);\r\n      if (xAlign === 'left') {\r\n        x1 = ptX;\r\n        x2 = x1 - caretSize;\r\n        y1 = y2 + caretSize;\r\n        y3 = y2 - caretSize;\r\n      } else {\r\n        x1 = ptX + width;\r\n        x2 = x1 + caretSize;\r\n        y1 = y2 - caretSize;\r\n        y3 = y2 + caretSize;\r\n      }\r\n      x3 = x1;\r\n    } else {\r\n      if (xAlign === 'left') {\r\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\r\n      } else if (xAlign === 'right') {\r\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\r\n      } else {\r\n        x2 = this.caretX;\r\n      }\r\n      if (yAlign === 'top') {\r\n        y1 = ptY;\r\n        y2 = y1 - caretSize;\r\n        x1 = x2 - caretSize;\r\n        x3 = x2 + caretSize;\r\n      } else {\r\n        y1 = ptY + height;\r\n        y2 = y1 + caretSize;\r\n        x1 = x2 + caretSize;\r\n        x3 = x2 - caretSize;\r\n      }\r\n      y3 = y1;\r\n    }\r\n    return {x1, x2, x3, y1, y2, y3};\r\n  }\r\n  drawTitle(pt, ctx, options) {\r\n    const title = this.title;\r\n    const length = title.length;\r\n    let titleFont, titleSpacing, i;\r\n    if (length) {\r\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\r\n      pt.x = getAlignedX(this, options.titleAlign, options);\r\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\r\n      ctx.textBaseline = 'middle';\r\n      titleFont = toFont(options.titleFont);\r\n      titleSpacing = options.titleSpacing;\r\n      ctx.fillStyle = options.titleColor;\r\n      ctx.font = titleFont.string;\r\n      for (i = 0; i < length; ++i) {\r\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\r\n        pt.y += titleFont.lineHeight + titleSpacing;\r\n        if (i + 1 === length) {\r\n          pt.y += options.titleMarginBottom - titleSpacing;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\r\n    const labelColors = this.labelColors[i];\r\n    const labelPointStyle = this.labelPointStyles[i];\r\n    const {boxHeight, boxWidth, boxPadding} = options;\r\n    const bodyFont = toFont(options.bodyFont);\r\n    const colorX = getAlignedX(this, 'left', options);\r\n    const rtlColorX = rtlHelper.x(colorX);\r\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\r\n    const colorY = pt.y + yOffSet;\r\n    if (options.usePointStyle) {\r\n      const drawOptions = {\r\n        radius: Math.min(boxWidth, boxHeight) / 2,\r\n        pointStyle: labelPointStyle.pointStyle,\r\n        rotation: labelPointStyle.rotation,\r\n        borderWidth: 1\r\n      };\r\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\r\n      const centerY = colorY + boxHeight / 2;\r\n      ctx.strokeStyle = options.multiKeyBackground;\r\n      ctx.fillStyle = options.multiKeyBackground;\r\n      drawPoint(ctx, drawOptions, centerX, centerY);\r\n      ctx.strokeStyle = labelColors.borderColor;\r\n      ctx.fillStyle = labelColors.backgroundColor;\r\n      drawPoint(ctx, drawOptions, centerX, centerY);\r\n    } else {\r\n      ctx.lineWidth = labelColors.borderWidth || 1;\r\n      ctx.strokeStyle = labelColors.borderColor;\r\n      ctx.setLineDash(labelColors.borderDash || []);\r\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\r\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\r\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\r\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\r\n      if (Object.values(borderRadius).some(v => v !== 0)) {\r\n        ctx.beginPath();\r\n        ctx.fillStyle = options.multiKeyBackground;\r\n        addRoundedRectPath(ctx, {\r\n          x: outerX,\r\n          y: colorY,\r\n          w: boxWidth,\r\n          h: boxHeight,\r\n          radius: borderRadius,\r\n        });\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        ctx.fillStyle = labelColors.backgroundColor;\r\n        ctx.beginPath();\r\n        addRoundedRectPath(ctx, {\r\n          x: innerX,\r\n          y: colorY + 1,\r\n          w: boxWidth - 2,\r\n          h: boxHeight - 2,\r\n          radius: borderRadius,\r\n        });\r\n        ctx.fill();\r\n      } else {\r\n        ctx.fillStyle = options.multiKeyBackground;\r\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\r\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\r\n        ctx.fillStyle = labelColors.backgroundColor;\r\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\r\n      }\r\n    }\r\n    ctx.fillStyle = this.labelTextColors[i];\r\n  }\r\n  drawBody(pt, ctx, options) {\r\n    const {body} = this;\r\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\r\n    const bodyFont = toFont(options.bodyFont);\r\n    let bodyLineHeight = bodyFont.lineHeight;\r\n    let xLinePadding = 0;\r\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\r\n    const fillLineOfText = function(line) {\r\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\r\n      pt.y += bodyLineHeight + bodySpacing;\r\n    };\r\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\r\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\r\n    ctx.textAlign = bodyAlign;\r\n    ctx.textBaseline = 'middle';\r\n    ctx.font = bodyFont.string;\r\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\r\n    ctx.fillStyle = options.bodyColor;\r\n    each(this.beforeBody, fillLineOfText);\r\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\r\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\r\n      : 0;\r\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\r\n      bodyItem = body[i];\r\n      textColor = this.labelTextColors[i];\r\n      ctx.fillStyle = textColor;\r\n      each(bodyItem.before, fillLineOfText);\r\n      lines = bodyItem.lines;\r\n      if (displayColors && lines.length) {\r\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\r\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\r\n      }\r\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\r\n        fillLineOfText(lines[j]);\r\n        bodyLineHeight = bodyFont.lineHeight;\r\n      }\r\n      each(bodyItem.after, fillLineOfText);\r\n    }\r\n    xLinePadding = 0;\r\n    bodyLineHeight = bodyFont.lineHeight;\r\n    each(this.afterBody, fillLineOfText);\r\n    pt.y -= bodySpacing;\r\n  }\r\n  drawFooter(pt, ctx, options) {\r\n    const footer = this.footer;\r\n    const length = footer.length;\r\n    let footerFont, i;\r\n    if (length) {\r\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\r\n      pt.x = getAlignedX(this, options.footerAlign, options);\r\n      pt.y += options.footerMarginTop;\r\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\r\n      ctx.textBaseline = 'middle';\r\n      footerFont = toFont(options.footerFont);\r\n      ctx.fillStyle = options.footerColor;\r\n      ctx.font = footerFont.string;\r\n      for (i = 0; i < length; ++i) {\r\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\r\n        pt.y += footerFont.lineHeight + options.footerSpacing;\r\n      }\r\n    }\r\n  }\r\n  drawBackground(pt, ctx, tooltipSize, options) {\r\n    const {xAlign, yAlign} = this;\r\n    const {x, y} = pt;\r\n    const {width, height} = tooltipSize;\r\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\r\n    ctx.fillStyle = options.backgroundColor;\r\n    ctx.strokeStyle = options.borderColor;\r\n    ctx.lineWidth = options.borderWidth;\r\n    ctx.beginPath();\r\n    ctx.moveTo(x + topLeft, y);\r\n    if (yAlign === 'top') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + width - topRight, y);\r\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\r\n    if (yAlign === 'center' && xAlign === 'right') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + width, y + height - bottomRight);\r\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\r\n    if (yAlign === 'bottom') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + bottomLeft, y + height);\r\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\r\n    if (yAlign === 'center' && xAlign === 'left') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x, y + topLeft);\r\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    if (options.borderWidth > 0) {\r\n      ctx.stroke();\r\n    }\r\n  }\r\n  _updateAnimationTarget(options) {\r\n    const chart = this._chart;\r\n    const anims = this.$animations;\r\n    const animX = anims && anims.x;\r\n    const animY = anims && anims.y;\r\n    if (animX || animY) {\r\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\r\n      if (!position) {\r\n        return;\r\n      }\r\n      const size = this._size = getTooltipSize(this, options);\r\n      const positionAndSize = Object.assign({}, position, this._size);\r\n      const alignment = determineAlignment(chart, options, positionAndSize);\r\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\r\n      if (animX._to !== point.x || animY._to !== point.y) {\r\n        this.xAlign = alignment.xAlign;\r\n        this.yAlign = alignment.yAlign;\r\n        this.width = size.width;\r\n        this.height = size.height;\r\n        this.caretX = position.x;\r\n        this.caretY = position.y;\r\n        this._resolveAnimations().update(this, point);\r\n      }\r\n    }\r\n  }\r\n  draw(ctx) {\r\n    const options = this.options.setContext(this.getContext());\r\n    let opacity = this.opacity;\r\n    if (!opacity) {\r\n      return;\r\n    }\r\n    this._updateAnimationTarget(options);\r\n    const tooltipSize = {\r\n      width: this.width,\r\n      height: this.height\r\n    };\r\n    const pt = {\r\n      x: this.x,\r\n      y: this.y\r\n    };\r\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\r\n    const padding = toPadding(options.padding);\r\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\r\n    if (options.enabled && hasTooltipContent) {\r\n      ctx.save();\r\n      ctx.globalAlpha = opacity;\r\n      this.drawBackground(pt, ctx, tooltipSize, options);\r\n      overrideTextDirection(ctx, options.textDirection);\r\n      pt.y += padding.top;\r\n      this.drawTitle(pt, ctx, options);\r\n      this.drawBody(pt, ctx, options);\r\n      this.drawFooter(pt, ctx, options);\r\n      restoreTextDirection(ctx, options.textDirection);\r\n      ctx.restore();\r\n    }\r\n  }\r\n  getActiveElements() {\r\n    return this._active || [];\r\n  }\r\n  setActiveElements(activeElements, eventPosition) {\r\n    const lastActive = this._active;\r\n    const active = activeElements.map(({datasetIndex, index}) => {\r\n      const meta = this._chart.getDatasetMeta(datasetIndex);\r\n      if (!meta) {\r\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\r\n      }\r\n      return {\r\n        datasetIndex,\r\n        element: meta.data[index],\r\n        index,\r\n      };\r\n    });\r\n    const changed = !_elementsEqual(lastActive, active);\r\n    const positionChanged = this._positionChanged(active, eventPosition);\r\n    if (changed || positionChanged) {\r\n      this._active = active;\r\n      this._eventPosition = eventPosition;\r\n      this.update(true);\r\n    }\r\n  }\r\n  handleEvent(e, replay) {\r\n    const options = this.options;\r\n    const lastActive = this._active || [];\r\n    let changed = false;\r\n    let active = [];\r\n    if (e.type !== 'mouseout') {\r\n      active = this._chart.getElementsAtEventForMode(e, options.mode, options, replay);\r\n      if (options.reverse) {\r\n        active.reverse();\r\n      }\r\n    }\r\n    const positionChanged = this._positionChanged(active, e);\r\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\r\n    if (changed) {\r\n      this._active = active;\r\n      if (options.enabled || options.external) {\r\n        this._eventPosition = {\r\n          x: e.x,\r\n          y: e.y\r\n        };\r\n        this.update(true, replay);\r\n      }\r\n    }\r\n    return changed;\r\n  }\r\n  _positionChanged(active, e) {\r\n    const {caretX, caretY, options} = this;\r\n    const position = positioners[options.position].call(this, active, e);\r\n    return position !== false && (caretX !== position.x || caretY !== position.y);\r\n  }\r\n}\r\nTooltip.positioners = positioners;\r\nvar plugin_tooltip = {\r\n  id: 'tooltip',\r\n  _element: Tooltip,\r\n  positioners,\r\n  afterInit(chart, _args, options) {\r\n    if (options) {\r\n      chart.tooltip = new Tooltip({_chart: chart, options});\r\n    }\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    if (chart.tooltip) {\r\n      chart.tooltip.initialize(options);\r\n    }\r\n  },\r\n  reset(chart, _args, options) {\r\n    if (chart.tooltip) {\r\n      chart.tooltip.initialize(options);\r\n    }\r\n  },\r\n  afterDraw(chart) {\r\n    const tooltip = chart.tooltip;\r\n    const args = {\r\n      tooltip\r\n    };\r\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\r\n      return;\r\n    }\r\n    if (tooltip) {\r\n      tooltip.draw(chart.ctx);\r\n    }\r\n    chart.notifyPlugins('afterTooltipDraw', args);\r\n  },\r\n  afterEvent(chart, args) {\r\n    if (chart.tooltip) {\r\n      const useFinalPosition = args.replay;\r\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\r\n        args.changed = true;\r\n      }\r\n    }\r\n  },\r\n  defaults: {\r\n    enabled: true,\r\n    external: null,\r\n    position: 'average',\r\n    backgroundColor: 'rgba(0,0,0,0.8)',\r\n    titleColor: '#fff',\r\n    titleFont: {\r\n      weight: 'bold',\r\n    },\r\n    titleSpacing: 2,\r\n    titleMarginBottom: 6,\r\n    titleAlign: 'left',\r\n    bodyColor: '#fff',\r\n    bodySpacing: 2,\r\n    bodyFont: {\r\n    },\r\n    bodyAlign: 'left',\r\n    footerColor: '#fff',\r\n    footerSpacing: 2,\r\n    footerMarginTop: 6,\r\n    footerFont: {\r\n      weight: 'bold',\r\n    },\r\n    footerAlign: 'left',\r\n    padding: 6,\r\n    caretPadding: 2,\r\n    caretSize: 5,\r\n    cornerRadius: 6,\r\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\r\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\r\n    multiKeyBackground: '#fff',\r\n    displayColors: true,\r\n    boxPadding: 0,\r\n    borderColor: 'rgba(0,0,0,0)',\r\n    borderWidth: 0,\r\n    animation: {\r\n      duration: 400,\r\n      easing: 'easeOutQuart',\r\n    },\r\n    animations: {\r\n      numbers: {\r\n        type: 'number',\r\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\r\n      },\r\n      opacity: {\r\n        easing: 'linear',\r\n        duration: 200\r\n      }\r\n    },\r\n    callbacks: {\r\n      beforeTitle: noop,\r\n      title(tooltipItems) {\r\n        if (tooltipItems.length > 0) {\r\n          const item = tooltipItems[0];\r\n          const labels = item.chart.data.labels;\r\n          const labelCount = labels ? labels.length : 0;\r\n          if (this && this.options && this.options.mode === 'dataset') {\r\n            return item.dataset.label || '';\r\n          } else if (item.label) {\r\n            return item.label;\r\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\r\n            return labels[item.dataIndex];\r\n          }\r\n        }\r\n        return '';\r\n      },\r\n      afterTitle: noop,\r\n      beforeBody: noop,\r\n      beforeLabel: noop,\r\n      label(tooltipItem) {\r\n        if (this && this.options && this.options.mode === 'dataset') {\r\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\r\n        }\r\n        let label = tooltipItem.dataset.label || '';\r\n        if (label) {\r\n          label += ': ';\r\n        }\r\n        const value = tooltipItem.formattedValue;\r\n        if (!isNullOrUndef(value)) {\r\n          label += value;\r\n        }\r\n        return label;\r\n      },\r\n      labelColor(tooltipItem) {\r\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\r\n        return {\r\n          borderColor: options.borderColor,\r\n          backgroundColor: options.backgroundColor,\r\n          borderWidth: options.borderWidth,\r\n          borderDash: options.borderDash,\r\n          borderDashOffset: options.borderDashOffset,\r\n          borderRadius: 0,\r\n        };\r\n      },\r\n      labelTextColor() {\r\n        return this.options.bodyColor;\r\n      },\r\n      labelPointStyle(tooltipItem) {\r\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\r\n        return {\r\n          pointStyle: options.pointStyle,\r\n          rotation: options.rotation,\r\n        };\r\n      },\r\n      afterLabel: noop,\r\n      afterBody: noop,\r\n      beforeFooter: noop,\r\n      footer: noop,\r\n      afterFooter: noop\r\n    }\r\n  },\r\n  defaultRoutes: {\r\n    bodyFont: 'font',\r\n    footerFont: 'font',\r\n    titleFont: 'font'\r\n  },\r\n  descriptors: {\r\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\r\n    _indexable: false,\r\n    callbacks: {\r\n      _scriptable: false,\r\n      _indexable: false,\r\n    },\r\n    animation: {\r\n      _fallback: false\r\n    },\r\n    animations: {\r\n      _fallback: 'animation'\r\n    }\r\n  },\r\n  additionalOptionScopes: ['interaction']\r\n};\r\n\r\nvar plugins = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nDecimation: plugin_decimation,\r\nFiller: plugin_filler,\r\nLegend: plugin_legend,\r\nSubTitle: plugin_subtitle,\r\nTitle: plugin_title,\r\nTooltip: plugin_tooltip\r\n});\r\n\r\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\r\n  ? labels.push(raw) - 1\r\n  : isNaN(raw) ? null : index;\r\nfunction findOrAddLabel(labels, raw, index) {\r\n  const first = labels.indexOf(raw);\r\n  if (first === -1) {\r\n    return addIfString(labels, raw, index);\r\n  }\r\n  const last = labels.lastIndexOf(raw);\r\n  return first !== last ? index : first;\r\n}\r\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\r\nclass CategoryScale extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this._startValue = undefined;\r\n    this._valueRange = 0;\r\n  }\r\n  parse(raw, index) {\r\n    if (isNullOrUndef(raw)) {\r\n      return null;\r\n    }\r\n    const labels = this.getLabels();\r\n    index = isFinite(index) && labels[index] === raw ? index\r\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\r\n    return validIndex(index, labels.length - 1);\r\n  }\r\n  determineDataLimits() {\r\n    const {minDefined, maxDefined} = this.getUserBounds();\r\n    let {min, max} = this.getMinMax(true);\r\n    if (this.options.bounds === 'ticks') {\r\n      if (!minDefined) {\r\n        min = 0;\r\n      }\r\n      if (!maxDefined) {\r\n        max = this.getLabels().length - 1;\r\n      }\r\n    }\r\n    this.min = min;\r\n    this.max = max;\r\n  }\r\n  buildTicks() {\r\n    const min = this.min;\r\n    const max = this.max;\r\n    const offset = this.options.offset;\r\n    const ticks = [];\r\n    let labels = this.getLabels();\r\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\r\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\r\n    this._startValue = this.min - (offset ? 0.5 : 0);\r\n    for (let value = min; value <= max; value++) {\r\n      ticks.push({value});\r\n    }\r\n    return ticks;\r\n  }\r\n  getLabelForValue(value) {\r\n    const labels = this.getLabels();\r\n    if (value >= 0 && value < labels.length) {\r\n      return labels[value];\r\n    }\r\n    return value;\r\n  }\r\n  configure() {\r\n    super.configure();\r\n    if (!this.isHorizontal()) {\r\n      this._reversePixels = !this._reversePixels;\r\n    }\r\n  }\r\n  getPixelForValue(value) {\r\n    if (typeof value !== 'number') {\r\n      value = this.parse(value);\r\n    }\r\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\r\n  }\r\n  getPixelForTick(index) {\r\n    const ticks = this.ticks;\r\n    if (index < 0 || index > ticks.length - 1) {\r\n      return null;\r\n    }\r\n    return this.getPixelForValue(ticks[index].value);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\r\n  }\r\n  getBasePixel() {\r\n    return this.bottom;\r\n  }\r\n}\r\nCategoryScale.id = 'category';\r\nCategoryScale.defaults = {\r\n  ticks: {\r\n    callback: CategoryScale.prototype.getLabelForValue\r\n  }\r\n};\r\n\r\nfunction generateTicks$1(generationOptions, dataRange) {\r\n  const ticks = [];\r\n  const MIN_SPACING = 1e-14;\r\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\r\n  const unit = step || 1;\r\n  const maxSpaces = maxTicks - 1;\r\n  const {min: rmin, max: rmax} = dataRange;\r\n  const minDefined = !isNullOrUndef(min);\r\n  const maxDefined = !isNullOrUndef(max);\r\n  const countDefined = !isNullOrUndef(count);\r\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\r\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\r\n  let factor, niceMin, niceMax, numSpaces;\r\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\r\n    return [{value: rmin}, {value: rmax}];\r\n  }\r\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\r\n  if (numSpaces > maxSpaces) {\r\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\r\n  }\r\n  if (!isNullOrUndef(precision)) {\r\n    factor = Math.pow(10, precision);\r\n    spacing = Math.ceil(spacing * factor) / factor;\r\n  }\r\n  if (bounds === 'ticks') {\r\n    niceMin = Math.floor(rmin / spacing) * spacing;\r\n    niceMax = Math.ceil(rmax / spacing) * spacing;\r\n  } else {\r\n    niceMin = rmin;\r\n    niceMax = rmax;\r\n  }\r\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\r\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\r\n    spacing = (max - min) / numSpaces;\r\n    niceMin = min;\r\n    niceMax = max;\r\n  } else if (countDefined) {\r\n    niceMin = minDefined ? min : niceMin;\r\n    niceMax = maxDefined ? max : niceMax;\r\n    numSpaces = count - 1;\r\n    spacing = (niceMax - niceMin) / numSpaces;\r\n  } else {\r\n    numSpaces = (niceMax - niceMin) / spacing;\r\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n      numSpaces = Math.round(numSpaces);\r\n    } else {\r\n      numSpaces = Math.ceil(numSpaces);\r\n    }\r\n  }\r\n  const decimalPlaces = Math.max(\r\n    _decimalPlaces(spacing),\r\n    _decimalPlaces(niceMin)\r\n  );\r\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\r\n  niceMin = Math.round(niceMin * factor) / factor;\r\n  niceMax = Math.round(niceMax * factor) / factor;\r\n  let j = 0;\r\n  if (minDefined) {\r\n    if (includeBounds && niceMin !== min) {\r\n      ticks.push({value: min});\r\n      if (niceMin < min) {\r\n        j++;\r\n      }\r\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\r\n        j++;\r\n      }\r\n    } else if (niceMin < min) {\r\n      j++;\r\n    }\r\n  }\r\n  for (; j < numSpaces; ++j) {\r\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\r\n  }\r\n  if (maxDefined && includeBounds && niceMax !== max) {\r\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\r\n      ticks[ticks.length - 1].value = max;\r\n    } else {\r\n      ticks.push({value: max});\r\n    }\r\n  } else if (!maxDefined || niceMax === max) {\r\n    ticks.push({value: niceMax});\r\n  }\r\n  return ticks;\r\n}\r\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\r\n  const rad = toRadians(minRotation);\r\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\r\n  const length = 0.75 * minSpacing * ('' + value).length;\r\n  return Math.min(minSpacing / ratio, length);\r\n}\r\nclass LinearScaleBase extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.start = undefined;\r\n    this.end = undefined;\r\n    this._startValue = undefined;\r\n    this._endValue = undefined;\r\n    this._valueRange = 0;\r\n  }\r\n  parse(raw, index) {\r\n    if (isNullOrUndef(raw)) {\r\n      return null;\r\n    }\r\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\r\n      return null;\r\n    }\r\n    return +raw;\r\n  }\r\n  handleTickRangeOptions() {\r\n    const {beginAtZero} = this.options;\r\n    const {minDefined, maxDefined} = this.getUserBounds();\r\n    let {min, max} = this;\r\n    const setMin = v => (min = minDefined ? min : v);\r\n    const setMax = v => (max = maxDefined ? max : v);\r\n    if (beginAtZero) {\r\n      const minSign = sign(min);\r\n      const maxSign = sign(max);\r\n      if (minSign < 0 && maxSign < 0) {\r\n        setMax(0);\r\n      } else if (minSign > 0 && maxSign > 0) {\r\n        setMin(0);\r\n      }\r\n    }\r\n    if (min === max) {\r\n      let offset = 1;\r\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\r\n        offset = Math.abs(max * 0.05);\r\n      }\r\n      setMax(max + offset);\r\n      if (!beginAtZero) {\r\n        setMin(min - offset);\r\n      }\r\n    }\r\n    this.min = min;\r\n    this.max = max;\r\n  }\r\n  getTickLimit() {\r\n    const tickOpts = this.options.ticks;\r\n    let {maxTicksLimit, stepSize} = tickOpts;\r\n    let maxTicks;\r\n    if (stepSize) {\r\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\r\n    } else {\r\n      maxTicks = this.computeTickLimit();\r\n      maxTicksLimit = maxTicksLimit || 11;\r\n    }\r\n    if (maxTicksLimit) {\r\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\r\n    }\r\n    return maxTicks;\r\n  }\r\n  computeTickLimit() {\r\n    return Number.POSITIVE_INFINITY;\r\n  }\r\n  buildTicks() {\r\n    const opts = this.options;\r\n    const tickOpts = opts.ticks;\r\n    let maxTicks = this.getTickLimit();\r\n    maxTicks = Math.max(2, maxTicks);\r\n    const numericGeneratorOptions = {\r\n      maxTicks,\r\n      bounds: opts.bounds,\r\n      min: opts.min,\r\n      max: opts.max,\r\n      precision: tickOpts.precision,\r\n      step: tickOpts.stepSize,\r\n      count: tickOpts.count,\r\n      maxDigits: this._maxDigits(),\r\n      horizontal: this.isHorizontal(),\r\n      minRotation: tickOpts.minRotation || 0,\r\n      includeBounds: tickOpts.includeBounds !== false\r\n    };\r\n    const dataRange = this._range || this;\r\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\r\n    if (opts.bounds === 'ticks') {\r\n      _setMinAndMaxByKey(ticks, this, 'value');\r\n    }\r\n    if (opts.reverse) {\r\n      ticks.reverse();\r\n      this.start = this.max;\r\n      this.end = this.min;\r\n    } else {\r\n      this.start = this.min;\r\n      this.end = this.max;\r\n    }\r\n    return ticks;\r\n  }\r\n  configure() {\r\n    const ticks = this.ticks;\r\n    let start = this.min;\r\n    let end = this.max;\r\n    super.configure();\r\n    if (this.options.offset && ticks.length) {\r\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\r\n      start -= offset;\r\n      end += offset;\r\n    }\r\n    this._startValue = start;\r\n    this._endValue = end;\r\n    this._valueRange = end - start;\r\n  }\r\n  getLabelForValue(value) {\r\n    return formatNumber(value, this.chart.options.locale);\r\n  }\r\n}\r\n\r\nclass LinearScale extends LinearScaleBase {\r\n  determineDataLimits() {\r\n    const {min, max} = this.getMinMax(true);\r\n    this.min = isNumberFinite(min) ? min : 0;\r\n    this.max = isNumberFinite(max) ? max : 1;\r\n    this.handleTickRangeOptions();\r\n  }\r\n  computeTickLimit() {\r\n    const horizontal = this.isHorizontal();\r\n    const length = horizontal ? this.width : this.height;\r\n    const minRotation = toRadians(this.options.ticks.minRotation);\r\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\r\n    const tickFont = this._resolveTickFontOptions(0);\r\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\r\n  }\r\n  getPixelForValue(value) {\r\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\r\n  }\r\n}\r\nLinearScale.id = 'linear';\r\nLinearScale.defaults = {\r\n  ticks: {\r\n    callback: Ticks.formatters.numeric\r\n  }\r\n};\r\n\r\nfunction isMajor(tickVal) {\r\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\r\n  return remain === 1;\r\n}\r\nfunction generateTicks(generationOptions, dataRange) {\r\n  const endExp = Math.floor(log10(dataRange.max));\r\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\r\n  const ticks = [];\r\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\r\n  let exp = Math.floor(log10(tickVal));\r\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\r\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\r\n  do {\r\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\r\n    ++significand;\r\n    if (significand === 10) {\r\n      significand = 1;\r\n      ++exp;\r\n      precision = exp >= 0 ? 1 : precision;\r\n    }\r\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\r\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\r\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\r\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\r\n  return ticks;\r\n}\r\nclass LogarithmicScale extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.start = undefined;\r\n    this.end = undefined;\r\n    this._startValue = undefined;\r\n    this._valueRange = 0;\r\n  }\r\n  parse(raw, index) {\r\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\r\n    if (value === 0) {\r\n      this._zero = true;\r\n      return undefined;\r\n    }\r\n    return isNumberFinite(value) && value > 0 ? value : null;\r\n  }\r\n  determineDataLimits() {\r\n    const {min, max} = this.getMinMax(true);\r\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\r\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\r\n    if (this.options.beginAtZero) {\r\n      this._zero = true;\r\n    }\r\n    this.handleTickRangeOptions();\r\n  }\r\n  handleTickRangeOptions() {\r\n    const {minDefined, maxDefined} = this.getUserBounds();\r\n    let min = this.min;\r\n    let max = this.max;\r\n    const setMin = v => (min = minDefined ? min : v);\r\n    const setMax = v => (max = maxDefined ? max : v);\r\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\r\n    if (min === max) {\r\n      if (min <= 0) {\r\n        setMin(1);\r\n        setMax(10);\r\n      } else {\r\n        setMin(exp(min, -1));\r\n        setMax(exp(max, +1));\r\n      }\r\n    }\r\n    if (min <= 0) {\r\n      setMin(exp(max, -1));\r\n    }\r\n    if (max <= 0) {\r\n      setMax(exp(min, +1));\r\n    }\r\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\r\n      setMin(exp(min, -1));\r\n    }\r\n    this.min = min;\r\n    this.max = max;\r\n  }\r\n  buildTicks() {\r\n    const opts = this.options;\r\n    const generationOptions = {\r\n      min: this._userMin,\r\n      max: this._userMax\r\n    };\r\n    const ticks = generateTicks(generationOptions, this);\r\n    if (opts.bounds === 'ticks') {\r\n      _setMinAndMaxByKey(ticks, this, 'value');\r\n    }\r\n    if (opts.reverse) {\r\n      ticks.reverse();\r\n      this.start = this.max;\r\n      this.end = this.min;\r\n    } else {\r\n      this.start = this.min;\r\n      this.end = this.max;\r\n    }\r\n    return ticks;\r\n  }\r\n  getLabelForValue(value) {\r\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\r\n  }\r\n  configure() {\r\n    const start = this.min;\r\n    super.configure();\r\n    this._startValue = log10(start);\r\n    this._valueRange = log10(this.max) - log10(start);\r\n  }\r\n  getPixelForValue(value) {\r\n    if (value === undefined || value === 0) {\r\n      value = this.min;\r\n    }\r\n    if (value === null || isNaN(value)) {\r\n      return NaN;\r\n    }\r\n    return this.getPixelForDecimal(value === this.min\r\n      ? 0\r\n      : (log10(value) - this._startValue) / this._valueRange);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const decimal = this.getDecimalForPixel(pixel);\r\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\r\n  }\r\n}\r\nLogarithmicScale.id = 'logarithmic';\r\nLogarithmicScale.defaults = {\r\n  ticks: {\r\n    callback: Ticks.formatters.logarithmic,\r\n    major: {\r\n      enabled: true\r\n    }\r\n  }\r\n};\r\n\r\nfunction getTickBackdropHeight(opts) {\r\n  const tickOpts = opts.ticks;\r\n  if (tickOpts.display && opts.display) {\r\n    const padding = toPadding(tickOpts.backdropPadding);\r\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\r\n  }\r\n  return 0;\r\n}\r\nfunction measureLabelSize(ctx, font, label) {\r\n  label = isArray(label) ? label : [label];\r\n  return {\r\n    w: _longestText(ctx, font.string, label),\r\n    h: label.length * font.lineHeight\r\n  };\r\n}\r\nfunction determineLimits(angle, pos, size, min, max) {\r\n  if (angle === min || angle === max) {\r\n    return {\r\n      start: pos - (size / 2),\r\n      end: pos + (size / 2)\r\n    };\r\n  } else if (angle < min || angle > max) {\r\n    return {\r\n      start: pos - size,\r\n      end: pos\r\n    };\r\n  }\r\n  return {\r\n    start: pos,\r\n    end: pos + size\r\n  };\r\n}\r\nfunction fitWithPointLabels(scale) {\r\n  const furthestLimits = {\r\n    l: 0,\r\n    r: scale.width,\r\n    t: 0,\r\n    b: scale.height - scale.paddingTop\r\n  };\r\n  const furthestAngles = {};\r\n  const labelSizes = [];\r\n  const padding = [];\r\n  const valueCount = scale.getLabels().length;\r\n  for (let i = 0; i < valueCount; i++) {\r\n    const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\r\n    padding[i] = opts.padding;\r\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\r\n    const plFont = toFont(opts.font);\r\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\r\n    labelSizes[i] = textSize;\r\n    const angleRadians = scale.getIndexAngle(i);\r\n    const angle = toDegrees(angleRadians);\r\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\r\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\r\n    if (hLimits.start < furthestLimits.l) {\r\n      furthestLimits.l = hLimits.start;\r\n      furthestAngles.l = angleRadians;\r\n    }\r\n    if (hLimits.end > furthestLimits.r) {\r\n      furthestLimits.r = hLimits.end;\r\n      furthestAngles.r = angleRadians;\r\n    }\r\n    if (vLimits.start < furthestLimits.t) {\r\n      furthestLimits.t = vLimits.start;\r\n      furthestAngles.t = angleRadians;\r\n    }\r\n    if (vLimits.end > furthestLimits.b) {\r\n      furthestLimits.b = vLimits.end;\r\n      furthestAngles.b = angleRadians;\r\n    }\r\n  }\r\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\r\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\r\n}\r\nfunction buildPointLabelItems(scale, labelSizes, padding) {\r\n  const items = [];\r\n  const valueCount = scale.getLabels().length;\r\n  const opts = scale.options;\r\n  const tickBackdropHeight = getTickBackdropHeight(opts);\r\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\r\n  for (let i = 0; i < valueCount; i++) {\r\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\r\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\r\n    const angle = toDegrees(scale.getIndexAngle(i));\r\n    const size = labelSizes[i];\r\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\r\n    const textAlign = getTextAlignForAngle(angle);\r\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\r\n    items.push({\r\n      x: pointLabelPosition.x,\r\n      y,\r\n      textAlign,\r\n      left,\r\n      top: y,\r\n      right: left + size.w,\r\n      bottom: y + size.h\r\n    });\r\n  }\r\n  return items;\r\n}\r\nfunction getTextAlignForAngle(angle) {\r\n  if (angle === 0 || angle === 180) {\r\n    return 'center';\r\n  } else if (angle < 180) {\r\n    return 'left';\r\n  }\r\n  return 'right';\r\n}\r\nfunction leftForTextAlign(x, w, align) {\r\n  if (align === 'right') {\r\n    x -= w;\r\n  } else if (align === 'center') {\r\n    x -= (w / 2);\r\n  }\r\n  return x;\r\n}\r\nfunction yForAngle(y, h, angle) {\r\n  if (angle === 90 || angle === 270) {\r\n    y -= (h / 2);\r\n  } else if (angle > 270 || angle < 90) {\r\n    y -= h;\r\n  }\r\n  return y;\r\n}\r\nfunction drawPointLabels(scale, labelCount) {\r\n  const {ctx, options: {pointLabels}} = scale;\r\n  for (let i = labelCount - 1; i >= 0; i--) {\r\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\r\n    const plFont = toFont(optsAtIndex.font);\r\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\r\n    const {backdropColor} = optsAtIndex;\r\n    if (!isNullOrUndef(backdropColor)) {\r\n      const padding = toPadding(optsAtIndex.backdropPadding);\r\n      ctx.fillStyle = backdropColor;\r\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\r\n    }\r\n    renderText(\r\n      ctx,\r\n      scale._pointLabels[i],\r\n      x,\r\n      y + (plFont.lineHeight / 2),\r\n      plFont,\r\n      {\r\n        color: optsAtIndex.color,\r\n        textAlign: textAlign,\r\n        textBaseline: 'middle'\r\n      }\r\n    );\r\n  }\r\n}\r\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\r\n  const {ctx} = scale;\r\n  if (circular) {\r\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\r\n  } else {\r\n    let pointPosition = scale.getPointPosition(0, radius);\r\n    ctx.moveTo(pointPosition.x, pointPosition.y);\r\n    for (let i = 1; i < labelCount; i++) {\r\n      pointPosition = scale.getPointPosition(i, radius);\r\n      ctx.lineTo(pointPosition.x, pointPosition.y);\r\n    }\r\n  }\r\n}\r\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\r\n  const ctx = scale.ctx;\r\n  const circular = gridLineOpts.circular;\r\n  const {color, lineWidth} = gridLineOpts;\r\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\r\n    return;\r\n  }\r\n  ctx.save();\r\n  ctx.strokeStyle = color;\r\n  ctx.lineWidth = lineWidth;\r\n  ctx.setLineDash(gridLineOpts.borderDash);\r\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\r\n  ctx.beginPath();\r\n  pathRadiusLine(scale, radius, circular, labelCount);\r\n  ctx.closePath();\r\n  ctx.stroke();\r\n  ctx.restore();\r\n}\r\nfunction numberOrZero(param) {\r\n  return isNumber(param) ? param : 0;\r\n}\r\nfunction createPointLabelContext(parent, index, label) {\r\n  return Object.assign(Object.create(parent), {\r\n    label,\r\n    index,\r\n    type: 'pointLabel'\r\n  });\r\n}\r\nclass RadialLinearScale extends LinearScaleBase {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.xCenter = undefined;\r\n    this.yCenter = undefined;\r\n    this.drawingArea = undefined;\r\n    this._pointLabels = [];\r\n    this._pointLabelItems = [];\r\n  }\r\n  setDimensions() {\r\n    this.width = this.maxWidth;\r\n    this.height = this.maxHeight;\r\n    this.paddingTop = getTickBackdropHeight(this.options) / 2;\r\n    this.xCenter = Math.floor(this.width / 2);\r\n    this.yCenter = Math.floor((this.height - this.paddingTop) / 2);\r\n    this.drawingArea = Math.min(this.height - this.paddingTop, this.width) / 2;\r\n  }\r\n  determineDataLimits() {\r\n    const {min, max} = this.getMinMax(false);\r\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\r\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\r\n    this.handleTickRangeOptions();\r\n  }\r\n  computeTickLimit() {\r\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\r\n  }\r\n  generateTickLabels(ticks) {\r\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\r\n    this._pointLabels = this.getLabels().map((value, index) => {\r\n      const label = callback(this.options.pointLabels.callback, [value, index], this);\r\n      return label || label === 0 ? label : '';\r\n    });\r\n  }\r\n  fit() {\r\n    const opts = this.options;\r\n    if (opts.display && opts.pointLabels.display) {\r\n      fitWithPointLabels(this);\r\n    } else {\r\n      this.setCenterPoint(0, 0, 0, 0);\r\n    }\r\n  }\r\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\r\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\r\n    let radiusReductionRight = Math.max(furthestLimits.r - this.width, 0) / Math.sin(furthestAngles.r);\r\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\r\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (this.height - this.paddingTop), 0) / Math.cos(furthestAngles.b);\r\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\r\n    radiusReductionRight = numberOrZero(radiusReductionRight);\r\n    radiusReductionTop = numberOrZero(radiusReductionTop);\r\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\r\n    this.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\r\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\r\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\r\n    this.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\r\n  }\r\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\r\n    const maxRight = this.width - rightMovement - this.drawingArea;\r\n    const maxLeft = leftMovement + this.drawingArea;\r\n    const maxTop = topMovement + this.drawingArea;\r\n    const maxBottom = (this.height - this.paddingTop) - bottomMovement - this.drawingArea;\r\n    this.xCenter = Math.floor(((maxLeft + maxRight) / 2) + this.left);\r\n    this.yCenter = Math.floor(((maxTop + maxBottom) / 2) + this.top + this.paddingTop);\r\n  }\r\n  getIndexAngle(index) {\r\n    const angleMultiplier = TAU / this.getLabels().length;\r\n    const startAngle = this.options.startAngle || 0;\r\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\r\n  }\r\n  getDistanceFromCenterForValue(value) {\r\n    if (isNullOrUndef(value)) {\r\n      return NaN;\r\n    }\r\n    const scalingFactor = this.drawingArea / (this.max - this.min);\r\n    if (this.options.reverse) {\r\n      return (this.max - value) * scalingFactor;\r\n    }\r\n    return (value - this.min) * scalingFactor;\r\n  }\r\n  getValueForDistanceFromCenter(distance) {\r\n    if (isNullOrUndef(distance)) {\r\n      return NaN;\r\n    }\r\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\r\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\r\n  }\r\n  getPointLabelContext(index) {\r\n    const pointLabels = this._pointLabels || [];\r\n    if (index >= 0 && index < pointLabels.length) {\r\n      const pointLabel = pointLabels[index];\r\n      return createPointLabelContext(this.getContext(), index, pointLabel);\r\n    }\r\n  }\r\n  getPointPosition(index, distanceFromCenter) {\r\n    const angle = this.getIndexAngle(index) - HALF_PI;\r\n    return {\r\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\r\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\r\n      angle\r\n    };\r\n  }\r\n  getPointPositionForValue(index, value) {\r\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\r\n  }\r\n  getBasePosition(index) {\r\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\r\n  }\r\n  getPointLabelPosition(index) {\r\n    const {left, top, right, bottom} = this._pointLabelItems[index];\r\n    return {\r\n      left,\r\n      top,\r\n      right,\r\n      bottom,\r\n    };\r\n  }\r\n  drawBackground() {\r\n    const {backgroundColor, grid: {circular}} = this.options;\r\n    if (backgroundColor) {\r\n      const ctx = this.ctx;\r\n      ctx.save();\r\n      ctx.beginPath();\r\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this.getLabels().length);\r\n      ctx.closePath();\r\n      ctx.fillStyle = backgroundColor;\r\n      ctx.fill();\r\n      ctx.restore();\r\n    }\r\n  }\r\n  drawGrid() {\r\n    const ctx = this.ctx;\r\n    const opts = this.options;\r\n    const {angleLines, grid} = opts;\r\n    const labelCount = this.getLabels().length;\r\n    let i, offset, position;\r\n    if (opts.pointLabels.display) {\r\n      drawPointLabels(this, labelCount);\r\n    }\r\n    if (grid.display) {\r\n      this.ticks.forEach((tick, index) => {\r\n        if (index !== 0) {\r\n          offset = this.getDistanceFromCenterForValue(tick.value);\r\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\r\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\r\n        }\r\n      });\r\n    }\r\n    if (angleLines.display) {\r\n      ctx.save();\r\n      for (i = this.getLabels().length - 1; i >= 0; i--) {\r\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\r\n        const {color, lineWidth} = optsAtIndex;\r\n        if (!lineWidth || !color) {\r\n          continue;\r\n        }\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.strokeStyle = color;\r\n        ctx.setLineDash(optsAtIndex.borderDash);\r\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\r\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\r\n        position = this.getPointPosition(i, offset);\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.xCenter, this.yCenter);\r\n        ctx.lineTo(position.x, position.y);\r\n        ctx.stroke();\r\n      }\r\n      ctx.restore();\r\n    }\r\n  }\r\n  drawBorder() {}\r\n  drawLabels() {\r\n    const ctx = this.ctx;\r\n    const opts = this.options;\r\n    const tickOpts = opts.ticks;\r\n    if (!tickOpts.display) {\r\n      return;\r\n    }\r\n    const startAngle = this.getIndexAngle(0);\r\n    let offset, width;\r\n    ctx.save();\r\n    ctx.translate(this.xCenter, this.yCenter);\r\n    ctx.rotate(startAngle);\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n    this.ticks.forEach((tick, index) => {\r\n      if (index === 0 && !opts.reverse) {\r\n        return;\r\n      }\r\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\r\n      const tickFont = toFont(optsAtIndex.font);\r\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\r\n      if (optsAtIndex.showLabelBackdrop) {\r\n        ctx.font = tickFont.string;\r\n        width = ctx.measureText(tick.label).width;\r\n        ctx.fillStyle = optsAtIndex.backdropColor;\r\n        const padding = toPadding(optsAtIndex.backdropPadding);\r\n        ctx.fillRect(\r\n          -width / 2 - padding.left,\r\n          -offset - tickFont.size / 2 - padding.top,\r\n          width + padding.width,\r\n          tickFont.size + padding.height\r\n        );\r\n      }\r\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\r\n        color: optsAtIndex.color,\r\n      });\r\n    });\r\n    ctx.restore();\r\n  }\r\n  drawTitle() {}\r\n}\r\nRadialLinearScale.id = 'radialLinear';\r\nRadialLinearScale.defaults = {\r\n  display: true,\r\n  animate: true,\r\n  position: 'chartArea',\r\n  angleLines: {\r\n    display: true,\r\n    lineWidth: 1,\r\n    borderDash: [],\r\n    borderDashOffset: 0.0\r\n  },\r\n  grid: {\r\n    circular: false\r\n  },\r\n  startAngle: 0,\r\n  ticks: {\r\n    showLabelBackdrop: true,\r\n    callback: Ticks.formatters.numeric\r\n  },\r\n  pointLabels: {\r\n    backdropColor: undefined,\r\n    backdropPadding: 2,\r\n    display: true,\r\n    font: {\r\n      size: 10\r\n    },\r\n    callback(label) {\r\n      return label;\r\n    },\r\n    padding: 5\r\n  }\r\n};\r\nRadialLinearScale.defaultRoutes = {\r\n  'angleLines.color': 'borderColor',\r\n  'pointLabels.color': 'color',\r\n  'ticks.color': 'color'\r\n};\r\nRadialLinearScale.descriptors = {\r\n  angleLines: {\r\n    _fallback: 'grid'\r\n  }\r\n};\r\n\r\nconst INTERVALS = {\r\n  millisecond: {common: true, size: 1, steps: 1000},\r\n  second: {common: true, size: 1000, steps: 60},\r\n  minute: {common: true, size: 60000, steps: 60},\r\n  hour: {common: true, size: 3600000, steps: 24},\r\n  day: {common: true, size: 86400000, steps: 30},\r\n  week: {common: false, size: 604800000, steps: 4},\r\n  month: {common: true, size: 2.628e9, steps: 12},\r\n  quarter: {common: false, size: 7.884e9, steps: 4},\r\n  year: {common: true, size: 3.154e10}\r\n};\r\nconst UNITS = (Object.keys(INTERVALS));\r\nfunction sorter(a, b) {\r\n  return a - b;\r\n}\r\nfunction parse(scale, input) {\r\n  if (isNullOrUndef(input)) {\r\n    return null;\r\n  }\r\n  const adapter = scale._adapter;\r\n  const {parser, round, isoWeekday} = scale._parseOpts;\r\n  let value = input;\r\n  if (typeof parser === 'function') {\r\n    value = parser(value);\r\n  }\r\n  if (!isNumberFinite(value)) {\r\n    value = typeof parser === 'string'\r\n      ? adapter.parse(value, parser)\r\n      : adapter.parse(value);\r\n  }\r\n  if (value === null) {\r\n    return null;\r\n  }\r\n  if (round) {\r\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\r\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\r\n      : adapter.startOf(value, round);\r\n  }\r\n  return +value;\r\n}\r\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\r\n  const ilen = UNITS.length;\r\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\r\n    const interval = INTERVALS[UNITS[i]];\r\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\r\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\r\n      return UNITS[i];\r\n    }\r\n  }\r\n  return UNITS[ilen - 1];\r\n}\r\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\r\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\r\n    const unit = UNITS[i];\r\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\r\n      return unit;\r\n    }\r\n  }\r\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\r\n}\r\nfunction determineMajorUnit(unit) {\r\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\r\n    if (INTERVALS[UNITS[i]].common) {\r\n      return UNITS[i];\r\n    }\r\n  }\r\n}\r\nfunction addTick(ticks, time, timestamps) {\r\n  if (!timestamps) {\r\n    ticks[time] = true;\r\n  } else if (timestamps.length) {\r\n    const {lo, hi} = _lookup(timestamps, time);\r\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\r\n    ticks[timestamp] = true;\r\n  }\r\n}\r\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\r\n  const adapter = scale._adapter;\r\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\r\n  const last = ticks[ticks.length - 1].value;\r\n  let major, index;\r\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\r\n    index = map[major];\r\n    if (index >= 0) {\r\n      ticks[index].major = true;\r\n    }\r\n  }\r\n  return ticks;\r\n}\r\nfunction ticksFromTimestamps(scale, values, majorUnit) {\r\n  const ticks = [];\r\n  const map = {};\r\n  const ilen = values.length;\r\n  let i, value;\r\n  for (i = 0; i < ilen; ++i) {\r\n    value = values[i];\r\n    map[value] = i;\r\n    ticks.push({\r\n      value,\r\n      major: false\r\n    });\r\n  }\r\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\r\n}\r\nclass TimeScale extends Scale {\r\n  constructor(props) {\r\n    super(props);\r\n    this._cache = {\r\n      data: [],\r\n      labels: [],\r\n      all: []\r\n    };\r\n    this._unit = 'day';\r\n    this._majorUnit = undefined;\r\n    this._offsets = {};\r\n    this._normalized = false;\r\n    this._parseOpts = undefined;\r\n  }\r\n  init(scaleOpts, opts) {\r\n    const time = scaleOpts.time || (scaleOpts.time = {});\r\n    const adapter = this._adapter = new _adapters._date(scaleOpts.adapters.date);\r\n    mergeIf(time.displayFormats, adapter.formats());\r\n    this._parseOpts = {\r\n      parser: time.parser,\r\n      round: time.round,\r\n      isoWeekday: time.isoWeekday\r\n    };\r\n    super.init(scaleOpts);\r\n    this._normalized = opts.normalized;\r\n  }\r\n  parse(raw, index) {\r\n    if (raw === undefined) {\r\n      return null;\r\n    }\r\n    return parse(this, raw);\r\n  }\r\n  beforeLayout() {\r\n    super.beforeLayout();\r\n    this._cache = {\r\n      data: [],\r\n      labels: [],\r\n      all: []\r\n    };\r\n  }\r\n  determineDataLimits() {\r\n    const options = this.options;\r\n    const adapter = this._adapter;\r\n    const unit = options.time.unit || 'day';\r\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\r\n    function _applyBounds(bounds) {\r\n      if (!minDefined && !isNaN(bounds.min)) {\r\n        min = Math.min(min, bounds.min);\r\n      }\r\n      if (!maxDefined && !isNaN(bounds.max)) {\r\n        max = Math.max(max, bounds.max);\r\n      }\r\n    }\r\n    if (!minDefined || !maxDefined) {\r\n      _applyBounds(this._getLabelBounds());\r\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\r\n        _applyBounds(this.getMinMax(false));\r\n      }\r\n    }\r\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\r\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\r\n    this.min = Math.min(min, max - 1);\r\n    this.max = Math.max(min + 1, max);\r\n  }\r\n  _getLabelBounds() {\r\n    const arr = this.getLabelTimestamps();\r\n    let min = Number.POSITIVE_INFINITY;\r\n    let max = Number.NEGATIVE_INFINITY;\r\n    if (arr.length) {\r\n      min = arr[0];\r\n      max = arr[arr.length - 1];\r\n    }\r\n    return {min, max};\r\n  }\r\n  buildTicks() {\r\n    const options = this.options;\r\n    const timeOpts = options.time;\r\n    const tickOpts = options.ticks;\r\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\r\n    if (options.bounds === 'ticks' && timestamps.length) {\r\n      this.min = this._userMin || timestamps[0];\r\n      this.max = this._userMax || timestamps[timestamps.length - 1];\r\n    }\r\n    const min = this.min;\r\n    const max = this.max;\r\n    const ticks = _filterBetween(timestamps, min, max);\r\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\r\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\r\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\r\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\r\n      : determineMajorUnit(this._unit);\r\n    this.initOffsets(timestamps);\r\n    if (options.reverse) {\r\n      ticks.reverse();\r\n    }\r\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\r\n  }\r\n  initOffsets(timestamps) {\r\n    let start = 0;\r\n    let end = 0;\r\n    let first, last;\r\n    if (this.options.offset && timestamps.length) {\r\n      first = this.getDecimalForValue(timestamps[0]);\r\n      if (timestamps.length === 1) {\r\n        start = 1 - first;\r\n      } else {\r\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\r\n      }\r\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\r\n      if (timestamps.length === 1) {\r\n        end = last;\r\n      } else {\r\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\r\n      }\r\n    }\r\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\r\n    start = _limitValue(start, 0, limit);\r\n    end = _limitValue(end, 0, limit);\r\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\r\n  }\r\n  _generate() {\r\n    const adapter = this._adapter;\r\n    const min = this.min;\r\n    const max = this.max;\r\n    const options = this.options;\r\n    const timeOpts = options.time;\r\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\r\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\r\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\r\n    const hasWeekday = isNumber(weekday) || weekday === true;\r\n    const ticks = {};\r\n    let first = min;\r\n    let time, count;\r\n    if (hasWeekday) {\r\n      first = +adapter.startOf(first, 'isoWeek', weekday);\r\n    }\r\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\r\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\r\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\r\n    }\r\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\r\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\r\n      addTick(ticks, time, timestamps);\r\n    }\r\n    if (time === max || options.bounds === 'ticks' || count === 1) {\r\n      addTick(ticks, time, timestamps);\r\n    }\r\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\r\n  }\r\n  getLabelForValue(value) {\r\n    const adapter = this._adapter;\r\n    const timeOpts = this.options.time;\r\n    if (timeOpts.tooltipFormat) {\r\n      return adapter.format(value, timeOpts.tooltipFormat);\r\n    }\r\n    return adapter.format(value, timeOpts.displayFormats.datetime);\r\n  }\r\n  _tickFormatFunction(time, index, ticks, format) {\r\n    const options = this.options;\r\n    const formats = options.time.displayFormats;\r\n    const unit = this._unit;\r\n    const majorUnit = this._majorUnit;\r\n    const minorFormat = unit && formats[unit];\r\n    const majorFormat = majorUnit && formats[majorUnit];\r\n    const tick = ticks[index];\r\n    const major = majorUnit && majorFormat && tick && tick.major;\r\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\r\n    const formatter = options.ticks.callback;\r\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\r\n  }\r\n  generateTickLabels(ticks) {\r\n    let i, ilen, tick;\r\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n      tick = ticks[i];\r\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\r\n    }\r\n  }\r\n  getDecimalForValue(value) {\r\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\r\n  }\r\n  getPixelForValue(value) {\r\n    const offsets = this._offsets;\r\n    const pos = this.getDecimalForValue(value);\r\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const offsets = this._offsets;\r\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\r\n    return this.min + pos * (this.max - this.min);\r\n  }\r\n  _getLabelSize(label) {\r\n    const ticksOpts = this.options.ticks;\r\n    const tickLabelWidth = this.ctx.measureText(label).width;\r\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\r\n    const cosRotation = Math.cos(angle);\r\n    const sinRotation = Math.sin(angle);\r\n    const tickFontSize = this._resolveTickFontOptions(0).size;\r\n    return {\r\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\r\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\r\n    };\r\n  }\r\n  _getLabelCapacity(exampleTime) {\r\n    const timeOpts = this.options.time;\r\n    const displayFormats = timeOpts.displayFormats;\r\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\r\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\r\n    const size = this._getLabelSize(exampleLabel);\r\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\r\n    return capacity > 0 ? capacity : 1;\r\n  }\r\n  getDataTimestamps() {\r\n    let timestamps = this._cache.data || [];\r\n    let i, ilen;\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const metas = this.getMatchingVisibleMetas();\r\n    if (this._normalized && metas.length) {\r\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\r\n    }\r\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\r\n    }\r\n    return (this._cache.data = this.normalize(timestamps));\r\n  }\r\n  getLabelTimestamps() {\r\n    const timestamps = this._cache.labels || [];\r\n    let i, ilen;\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const labels = this.getLabels();\r\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\r\n      timestamps.push(parse(this, labels[i]));\r\n    }\r\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\r\n  }\r\n  normalize(values) {\r\n    return _arrayUnique(values.sort(sorter));\r\n  }\r\n}\r\nTimeScale.id = 'time';\r\nTimeScale.defaults = {\r\n  bounds: 'data',\r\n  adapters: {},\r\n  time: {\r\n    parser: false,\r\n    unit: false,\r\n    round: false,\r\n    isoWeekday: false,\r\n    minUnit: 'millisecond',\r\n    displayFormats: {}\r\n  },\r\n  ticks: {\r\n    source: 'auto',\r\n    major: {\r\n      enabled: false\r\n    }\r\n  }\r\n};\r\n\r\nfunction interpolate(table, val, reverse) {\r\n  let lo = 0;\r\n  let hi = table.length - 1;\r\n  let prevSource, nextSource, prevTarget, nextTarget;\r\n  if (reverse) {\r\n    if (val >= table[lo].pos && val <= table[hi].pos) {\r\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\r\n    }\r\n    ({pos: prevSource, time: prevTarget} = table[lo]);\r\n    ({pos: nextSource, time: nextTarget} = table[hi]);\r\n  } else {\r\n    if (val >= table[lo].time && val <= table[hi].time) {\r\n      ({lo, hi} = _lookupByKey(table, 'time', val));\r\n    }\r\n    ({time: prevSource, pos: prevTarget} = table[lo]);\r\n    ({time: nextSource, pos: nextTarget} = table[hi]);\r\n  }\r\n  const span = nextSource - prevSource;\r\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\r\n}\r\nclass TimeSeriesScale extends TimeScale {\r\n  constructor(props) {\r\n    super(props);\r\n    this._table = [];\r\n    this._minPos = undefined;\r\n    this._tableRange = undefined;\r\n  }\r\n  initOffsets() {\r\n    const timestamps = this._getTimestampsForTable();\r\n    const table = this._table = this.buildLookupTable(timestamps);\r\n    this._minPos = interpolate(table, this.min);\r\n    this._tableRange = interpolate(table, this.max) - this._minPos;\r\n    super.initOffsets(timestamps);\r\n  }\r\n  buildLookupTable(timestamps) {\r\n    const {min, max} = this;\r\n    const items = [];\r\n    const table = [];\r\n    let i, ilen, prev, curr, next;\r\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\r\n      curr = timestamps[i];\r\n      if (curr >= min && curr <= max) {\r\n        items.push(curr);\r\n      }\r\n    }\r\n    if (items.length < 2) {\r\n      return [\r\n        {time: min, pos: 0},\r\n        {time: max, pos: 1}\r\n      ];\r\n    }\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      next = items[i + 1];\r\n      prev = items[i - 1];\r\n      curr = items[i];\r\n      if (Math.round((next + prev) / 2) !== curr) {\r\n        table.push({time: curr, pos: i / (ilen - 1)});\r\n      }\r\n    }\r\n    return table;\r\n  }\r\n  _getTimestampsForTable() {\r\n    let timestamps = this._cache.all || [];\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const data = this.getDataTimestamps();\r\n    const label = this.getLabelTimestamps();\r\n    if (data.length && label.length) {\r\n      timestamps = this.normalize(data.concat(label));\r\n    } else {\r\n      timestamps = data.length ? data : label;\r\n    }\r\n    timestamps = this._cache.all = timestamps;\r\n    return timestamps;\r\n  }\r\n  getDecimalForValue(value) {\r\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const offsets = this._offsets;\r\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\r\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\r\n  }\r\n}\r\nTimeSeriesScale.id = 'timeseries';\r\nTimeSeriesScale.defaults = TimeScale.defaults;\r\n\r\nvar scales = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nCategoryScale: CategoryScale,\r\nLinearScale: LinearScale,\r\nLogarithmicScale: LogarithmicScale,\r\nRadialLinearScale: RadialLinearScale,\r\nTimeScale: TimeScale,\r\nTimeSeriesScale: TimeSeriesScale\r\n});\r\n\r\nChart.register(controllers, scales, elements, plugins);\r\nChart.helpers = {...helpers};\r\nChart._adapters = _adapters;\r\nChart.Animation = Animation;\r\nChart.Animations = Animations;\r\nChart.animator = animator;\r\nChart.controllers = registry.controllers.items;\r\nChart.DatasetController = DatasetController;\r\nChart.Element = Element;\r\nChart.elements = elements;\r\nChart.Interaction = Interaction;\r\nChart.layouts = layouts;\r\nChart.platforms = platforms;\r\nChart.Scale = Scale;\r\nChart.Ticks = Ticks;\r\nObject.assign(Chart, controllers, scales, elements, plugins, platforms);\r\nChart.Chart = Chart;\r\nif (typeof window !== 'undefined') {\r\n  window.Chart = Chart;\r\n}\r\n\r\nreturn Chart;\r\n\r\n})));\r\n"]},"metadata":{},"sourceType":"script"}