{"ast":null,"code":"/*!\r\n * Chart.js v3.5.1\r\n * https://www.chartjs.org\r\n * (c) 2021 Chart.js Contributors\r\n * Released under the MIT License\r\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as _isDomSupported, J as log10, K as _factorize, L as finiteOrDefault, M as callback, N as _addGrace, O as toDegrees, Q as _measureText, R as _int16Range, S as _alignPixel, U as clipArea, V as renderText, W as unclipArea, X as toFont, Y as _toLeftRightCenter, Z as _alignStartEnd, $ as overrides, a0 as merge, a1 as _capitalize, a2 as descriptors, a3 as isFunction, a4 as _attachContext, a5 as _createResolver, a6 as _descriptors, a7 as mergeIf, a8 as uid, a9 as debounce, aa as retinaScale, ab as clearCanvas, ac as setsEqual, ad as _elementsEqual, ae as getAngleFromPoint, af as _readValueToProps, ag as _updateBezierControlPoints, ah as _computeSegments, ai as _boundSegments, aj as _steppedInterpolation, ak as _bezierInterpolation, al as _pointInLine, am as _steppedLineTo, an as _bezierCurveTo, ao as drawPoint, ap as addRoundedRectPath, aq as toTRBL, ar as toTRBLCorners, as as _boundSegment, at as _normalizeAngle, au as getRtlAdapter, av as overrideTextDirection, aw as _textX, ax as restoreTextDirection, ay as noop, az as distanceBetweenPoints, aA as _setMinAndMaxByKey, aB as niceNum, aC as almostWhole, aD as almostEquals, aE as _decimalPlaces, aF as _longestText, aG as _filterBetween, aH as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n\n        this._notify(chart, anims, date, 'complete');\n\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n\n    return anims;\n  }\n\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n\n    this._getAnims(chart).items.push(...items);\n  }\n\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  start(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims) {\n      return;\n    }\n\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n\n    return true;\n  }\n\n  stop(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.items.length) {\n      return;\n    }\n\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n\n    anims.items = [];\n\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n\n}\n\nvar animator = new Animator();\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n\n};\n\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || elapsed < duration);\n\n    if (!this._active) {\n      this._target[prop] = to;\n\n      this._notify(true);\n\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = elapsed / duration % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({\n        res,\n        rej\n      });\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: name => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      }\n    }\n  }\n});\n\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n\n      if (!isObject(cfg)) {\n        return;\n      }\n\n      const resolved = {};\n\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {});\n    }\n\n    return animations;\n  }\n\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n\n    return animations;\n  }\n\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n\n  let options = target.options;\n\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n\n      break;\n    }\n\n    otherValue = stack.values[datasetIndex];\n\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n\n    if (positive && value > 0 || !positive && value < 0) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {\n    chart,\n    _cachedMeta: meta\n  } = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {\n    iScale,\n    vScale,\n    index: datasetIndex\n  } = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {\n      [iAxis]: index,\n      [vAxis]: value\n    } = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\n\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n\n    delete stacks[axis][datasetIndex];\n  }\n}\n\nconst isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\n\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\n\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale ? meta.vScale : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  _destroy() {\n    const meta = this._cachedMeta;\n\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    this._resyncElements(resetNewElements);\n\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n  }\n\n  parse(start, count) {\n    const {\n      _cachedMeta: meta,\n      _data: data\n    } = this;\n    const {\n      iScale,\n      _stacked\n    } = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n\n          prev = cur;\n        }\n      }\n\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  parsePrimitiveData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseArrayData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n\n    return parsed;\n  }\n\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {\n      mode\n    });\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {\n        all: true\n      });\n    }\n\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n\n    const otherScale = this._getOtherScale(scale);\n\n    const stack = canStack && meta._stacked && {\n      keys: getSortedDatasetIndices(this.chart, true),\n      values: null\n    };\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    const {\n      min: otherMin,\n      max: otherMax\n    } = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n\n      if (sorted) {\n        break;\n      }\n    }\n\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n\n    return values;\n  }\n\n  getMaxOverflow() {\n    return false;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.configure();\n    this._cachedDataOpts = {};\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  update(mode) {}\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || elements.length - start;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n\n      if (element.hidden) {\n        continue;\n      }\n\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n\n    const context = () => this.getContext(index, active);\n\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n\n    if (cached) {\n      return cached;\n    }\n\n    let options;\n\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n\n    const animations = new Animations(chart, options && options.animations);\n\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: !active && this.getSharedOptions(options) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = arr => {\n      arr.length += count;\n\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {}\n\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n\n    meta.data.splice(start, count);\n  }\n\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    this._sync(['_removeElements', start, count]);\n\n    this._sync(['_insertElements', start, arguments.length - 2]);\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n\n}\n\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n\n  return scale._cache.$bar;\n}\n\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\n\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n\n  return {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  };\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  const {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  } = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n\n    return parsed;\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  getMaxOverflow() {\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      index,\n      _cachedMeta: {\n        vScale\n      }\n    } = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n\n    const ruler = this._getRuler();\n\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n        base,\n        head: base\n      } : this._calculateBarValuePixels(i);\n\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n\n      setBorderSkipped(properties, properties.options || bars[i].options, stack, index);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n\n      if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n        stacks.push(item.stack);\n      }\n\n      if (item.index === last) {\n        break;\n      }\n    }\n\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n\n    const index = name !== undefined ? stacks.indexOf(name) : -1;\n    return index === -1 ? stacks.length - 1 : index;\n  }\n\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  _calculateBarValuePixels(index) {\n    const {\n      _cachedMeta: {\n        vScale,\n        _stacked\n      },\n      options: {\n        base: baseValue,\n        minBarLength\n      }\n    } = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n\n      head = base + size;\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n\n      center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n\n    return parsed;\n  }\n\n  getMaxOverflow() {\n    const {\n      data,\n      _parsed\n    } = this._cachedMeta;\n    let max = 0;\n\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n\n    return max > 0 && max;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale\n    } = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    if (values.$shared) {\n      values = Object.assign({}, values, {\n        $shared: false\n      });\n    }\n\n    const radius = values.radius;\n\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n\n}\n\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n\n  return {\n    ratioX,\n    ratioY,\n    offsetX,\n    offsetY\n  };\n}\n\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = i => +data[i];\n\n      if (isObject(data[start])) {\n        const {\n          key = 'value'\n        } = this._parsing;\n\n        getter = i => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n\n        const rotation = controller._getRotation();\n\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min\n    };\n  }\n\n  update(mode) {\n    const chart = this.chart;\n    const {\n      chartArea\n    } = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n\n    const chartWeight = this._getRingWeight(this.index);\n\n    const {\n      circumference,\n      rotation\n    } = this._getRotationExtents();\n\n    const {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    } = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n\n    const circumference = this._getCircumference();\n\n    if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n\n    let startAngle = this._getRotation();\n\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n\n          if (controller !== this) {\n            controller.configure();\n          }\n\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n\n    return max;\n  }\n\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n\n}\n\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n};\nDoughnutController.descriptors = {\n  _scriptable: name => name !== 'spacing',\n  _indexable: name => name !== 'spacing'\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n\n      },\n\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {\n      dataset: line,\n      data: points = [],\n      _dataset\n    } = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {\n      start,\n      count\n    } = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked\n    } = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = this.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && parsed[iAxis] - prevParsed[iAxis] > maxGapLength;\n      properties.parsed = parsed;\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n\n}\n\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\n\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {\n      iScale,\n      _parsed\n    } = meta;\n    const axis = iScale.axis;\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {\n    start,\n    count\n  };\n}\n\nfunction scaleRangesChanged(meta) {\n  const {\n    xScale,\n    yScale,\n    _scaleRanges\n  } = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n\n  const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - radiusLength * this.index;\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const dataset = this.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n  }\n\n}\n\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n\n      },\n\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {}\n\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const dataset = this.getDataset();\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n}\n\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\n\nclass ScatterController extends LineController {}\n\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n\n  formats() {\n    return abstract();\n  }\n\n  parse(value, format) {\n    return abstract();\n  }\n\n  format(timestamp, format) {\n    return abstract();\n  }\n\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n\n  diff(a, b, unit) {\n    return abstract();\n  }\n\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n\n}\n\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\n\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return getRelativePosition$1(e, chart);\n}\n\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({\n      index,\n      data\n    } = metasets[i]);\n\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {\n    controller,\n    data,\n    _sorted\n  } = metaset;\n  const iScale = controller._cachedMeta.iScale;\n\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\n\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {\n      index,\n      data\n    } = metasets[i];\n    const {\n      lo,\n      hi\n    } = binarySearch(metasets[i], axis, value, intersect);\n\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      items = [{\n        element,\n        datasetIndex,\n        index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n\n  return items;\n}\n\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach(meta => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        if (element && !element.skip) {\n          elements.push({\n            element,\n            datasetIndex: meta.index,\n            index\n          });\n        }\n      });\n      return elements;\n    },\n\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n\n        for (let i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex,\n            index: i\n          });\n        }\n      }\n\n      return items;\n    },\n\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n\n  }\n};\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({\n      position: pos,\n      options: {\n        stack,\n        stackWeight = 1\n      }\n    } = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight\n    });\n  }\n\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n\n  for (const wrap of layouts) {\n    const {\n      stack,\n      pos,\n      stackWeight\n    } = wrap;\n\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n\n    const _stack = stacks[stack] || (stacks[stack] = {\n      count: 0,\n      placed: 0,\n      weight: 0,\n      size: 0\n    });\n\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n\n  return stacks;\n}\n\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {\n    vBoxMaxWidth,\n    hBoxMaxHeight\n  } = params;\n  let i, ilen, layout;\n\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {\n      fullSize\n    } = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {\n    pos,\n    box\n  } = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n\n    const stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(pos => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    const {\n      same,\n      other\n    } = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {\n    x,\n    y\n  } = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {\n      count: 1,\n      placed: 0,\n      weight: 1\n    };\n    const weight = layout.stackWeight / stack.weight || 1;\n\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, layout => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n\n  releaseContext(context) {\n    return false;\n  }\n\n  addEventListener(chart, type, listener) {}\n\n  removeEventListener(chart, type, listener) {}\n\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  isAttached(canvas) {\n    return true;\n  }\n\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\nconst eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {\n    x,\n    y\n  } = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    for (const entry of entries) {\n      for (const node of entry.addedNodes) {\n        if (node === canvas || node.contains(canvas)) {\n          return listener();\n        }\n      }\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    for (const entry of entries) {\n      for (const node of entry.removedNodes) {\n        if (node === canvas || node.contains(canvas)) {\n          return listener();\n        }\n      }\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n\n  const container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n\n    if (width === 0 && height === 0) {\n      return;\n    }\n\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled(event => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, args => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\n\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  releaseContext(context) {\n    const canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(prop => {\n      const value = initial[prop];\n\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach(key => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n\n    return !!(container && container.isConnected);\n  }\n\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n\n  tooltipPosition(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  getProps(props, final) {\n    const anims = this.$animations;\n\n    if (!final || !anims) {\n      return this;\n    }\n\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n\n}\n\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {\n      notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    const remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n\n    return '';\n  }\n\n};\n\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n\n  return delta;\n}\n\nvar Ticks = {\n  formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: name => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: name => name !== 'borderDash' && name !== 'tickBorderDash'\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: name => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: name => name !== 'backdropPadding'\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n\n  const tickLength = scale._tickSize();\n\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n\n  return Math.max(spacing, 1);\n}\n\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n\n  return result;\n}\n\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n\n  return diff;\n}\n\nconst reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n\n  return result;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n\n    lineValue += validIndex < index ? offset : -offset;\n\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction garbageCollect(caches, length) {\n  each(caches, cache => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {\n    top,\n    left,\n    bottom,\n    right,\n    chart\n  } = scale;\n  const {\n    chartArea,\n    scales\n  } = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n\n  return {\n    titleX,\n    titleY,\n    maxWidth,\n    rotation\n  };\n}\n\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  parse(raw, index) {\n    return raw;\n  }\n\n  getUserBounds() {\n    let {\n      _userMin,\n      _userMax,\n      _suggestedMin,\n      _suggestedMax\n    } = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n\n  getMinMax(canStack) {\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {\n        min,\n        max\n      };\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  getTicks() {\n    return this.ticks;\n  }\n\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    const tickOpts = this.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, this.options.grace);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n    }\n\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n\n  determineDataLimits() {}\n\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n\n  buildTicks() {\n    return [];\n  }\n\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {\n      chart,\n      options: {\n        ticks: tickOpts,\n        title: titleOpts,\n        grid: gridOpts\n      }\n    } = this;\n\n    const display = this._isVisible();\n\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      if (tickOpts.display && this.ticks.length) {\n        const {\n          first,\n          last,\n          widest,\n          highest\n        } = this._getLabelSizes();\n\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {\n      ticks: {\n        align,\n        padding\n      },\n      position\n    } = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n\n  isHorizontal() {\n    const {\n      axis,\n      position\n    } = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  _computeLabelSizes(ticks, length) {\n    const {\n      ctx,\n      _longestTextCache: caches\n    } = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {\n        data: {},\n        gc: []\n      };\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = idx => ({\n      width: widths[idx] || 0,\n      height: heights[idx] || 0\n    });\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights\n    };\n  }\n\n  getLabelForValue(value) {\n    return value;\n  }\n\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n\n  getValueForPixel(pixel) {}\n\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  getBaseValue() {\n    const {\n      min,\n      max\n    } = this;\n    return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  }\n\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n\n    return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {\n      grid,\n      position\n    } = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n\n    const alignBorderValue = function (pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {\n      position,\n      ticks: optionTicks\n    } = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {\n      align,\n      crossAlign,\n      padding,\n      mirror\n    } = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n\n        switch (textBaseline) {\n          case 'middle':\n            top -= height / 2;\n            break;\n\n          case 'bottom':\n            top -= height;\n            break;\n        }\n\n        switch (textAlign) {\n          case 'center':\n            left -= width / 2;\n            break;\n\n          case 'right':\n            left -= width;\n            break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {\n      position,\n      ticks\n    } = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {\n      position,\n      ticks: {\n        crossAlign,\n        mirror,\n        padding\n      }\n    } = this.options;\n\n    const labelSizes = this._getLabelSizes();\n\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {\n      textAlign,\n      x\n    };\n  }\n\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {\n        top: 0,\n        left: this.left,\n        bottom: chart.height,\n        right: this.right\n      };\n    }\n\n    if (position === 'top' || position === 'bottom') {\n      return {\n        top: this.top,\n        left: 0,\n        bottom: this.bottom,\n        right: chart.width\n      };\n    }\n  }\n\n  drawBackground() {\n    const {\n      ctx,\n      options: {\n        backgroundColor\n      },\n      left,\n      top,\n      width,\n      height\n    } = this;\n\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n\n    return 0;\n  }\n\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine({\n            x: item.x1,\n            y: item.y1\n          }, {\n            x: item.x2,\n            y: item.y2\n          }, item);\n        }\n\n        if (grid.drawTicks) {\n          drawLine({\n            x: item.tx1,\n            y: item.ty1\n          }, {\n            x: item.tx2,\n            y: item.ty2\n          }, {\n            color: item.tickColor,\n            width: item.tickWidth,\n            borderDash: item.tickBorderDash,\n            borderDashOffset: item.tickBorderDashOffset\n          });\n        }\n      }\n    }\n  }\n\n  drawBorder() {\n    const {\n      chart,\n      ctx,\n      options: {\n        grid\n      }\n    } = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n\n    if (!axisWidth) {\n      return;\n    }\n\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  drawTitle() {\n    const {\n      ctx,\n      options: {\n        position,\n        title,\n        reverse\n      }\n    } = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: chartArea => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: chartArea => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: chartArea => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  get(id) {\n    return this.items[id];\n  }\n\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n\n      if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n\n    return this.plugins;\n  }\n\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n\n    return item;\n  }\n\n}\n\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'destroy') {\n      this._notify(descriptors, chart, 'stop');\n\n      this._notify(this._init, chart, 'uninstall');\n    }\n\n    return result;\n  }\n\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n\n}\n\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n\n  return plugins;\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n\n  if (options === true) {\n    return {};\n  }\n\n  return options;\n}\n\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n\n    if (opts === null) {\n      continue;\n    }\n\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n\n    this._resolverCache.clear();\n  }\n\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n  }\n\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n  }\n\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n  }\n\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n  }\n\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n\n    let cache = _scopeCache.get(mainScope);\n\n    if (!cache || resetCache) {\n      cache = new Map();\n\n      _scopeCache.set(mainScope, cache);\n    }\n\n    return cache;\n  }\n\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {\n      options,\n      type\n    } = this;\n\n    const cache = this._cachedScopes(mainScope, resetCache);\n\n    const cached = cache.get(keyLists);\n\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n\n    return array;\n  }\n\n  chartOptionScopes() {\n    const {\n      options,\n      type\n    } = this;\n    return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n      type\n    }, defaults, descriptors];\n  }\n\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {\n      $shared: true\n    };\n    const {\n      resolver,\n      subPrefixes\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n\n    return result;\n  }\n\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {\n      resolver\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n  }\n\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n\n  return cached;\n}\n\nfunction needContext(proxy, names) {\n  const {\n    isScriptable,\n    isIndexable\n  } = _descriptors(proxy);\n\n  for (const prop of names) {\n    if (isScriptable(prop) && isFunction(proxy[prop]) || isIndexable(prop) && isArray(proxy[prop])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar version = \"3.5.1\";\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\n\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n\n  return item;\n}\n\nconst instances = {};\n\nconst getChart = key => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter(c => c.canvas === canvas).pop();\n};\n\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {\n      options: {\n        aspectRatio,\n        maintainAspectRatio\n      },\n      width,\n      height,\n      _aspectRatio\n    } = this;\n\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {\n        width,\n        height\n      };\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {\n      size: newSize\n    });\n    callback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(Object.keys(scaleOpts).map(id => {\n        const scaleOptions = scaleOpts[id];\n        const axis = determineAxis(id, scaleOptions);\n        const isRadial = axis === 'r';\n        const isHorizontal = axis === 'x';\n        return {\n          options: scaleOptions,\n          dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n          dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n        };\n      }));\n    }\n\n    each(items, item => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, scale => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n\n      metasets.splice(numData, numMeta - numData);\n    }\n\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  _removeUnreferencedMetasets() {\n    const {\n      _metasets: metasets,\n      data: {\n        datasets\n      }\n    } = this;\n\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n\n        meta = this.getDatasetMeta(i);\n      }\n\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {\n          datasetElementType,\n          dataElementType\n        } = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n\n    return newControllers;\n  }\n\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  reset() {\n    this._resetElements();\n\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n    config.update();\n    this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    each(this.scales, scale => {\n      layouts.removeBox(this, scale);\n    });\n    const animsDisabled = this._animationsDisabled = !this.options.animation;\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(this.options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== this.options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {\n        controller\n      } = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n\n    this._minPadding = minPadding;\n\n    this._updateLayout(minPadding);\n\n    if (!animsDisabled) {\n      each(newControllers, controller => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    this.notifyPlugins('afterUpdate', {\n      mode\n    });\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    if (this._lastEvent) {\n      this._eventHandler(this._lastEvent, true);\n    }\n\n    this.render();\n  }\n\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, box => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n\n      if (box.configure) {\n        box.configure();\n      }\n\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  _updateDatasets(mode) {\n    const isFunction = typeof mode === 'function';\n\n    if (this.notifyPlugins('beforeDatasetsUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction ? mode({\n        datasetIndex: i\n      }) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {\n      mode\n    });\n  }\n\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {\n      meta,\n      index,\n      mode,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({\n        chart: this\n      });\n    }\n  }\n\n  draw() {\n    let i;\n\n    if (this._resizeBeforeDraw) {\n      const {\n        width,\n        height\n      } = this._resizeBeforeDraw;\n\n      this._resize(width, height);\n\n      this._resizeBeforeDraw = null;\n    }\n\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const layers = this._layers;\n\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = {\n      chart: this,\n      type: 'chart'\n    });\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {\n        visible\n      });\n      this.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets && this._metasets[datasetIndex];\n\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n\n      delete this._metasets[datasetIndex];\n    }\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    const {\n      canvas,\n      ctx\n    } = this;\n\n    this._stop();\n\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  bindEvents() {\n    this.bindUserEvents();\n\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, type => _add(type, listener));\n  }\n\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached;\n\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      this._stop();\n\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({\n      datasetIndex,\n      index\n    }) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true\n    };\n\n    const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  _handleEvent(e, replay) {\n    const {\n      _active: lastActive = [],\n      options\n    } = this;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n\n    if (e.type !== 'mouseout') {\n      active = this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? this._lastEvent : e;\n    }\n\n    this._lastEvent = null;\n\n    if (_isPointInArea(e, this.chartArea, this._minPadding)) {\n      callback(options.onHover, [e, active, this], this);\n\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    changed = !_elementsEqual(active, lastActive);\n\n    if (changed || replay) {\n      this._active = active;\n\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n\n}\n\nconst invalidatePlugins = () => each(Chart.instances, chart => chart._plugins.invalidate());\n\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {\n    startAngle,\n    pixelMargin,\n    x,\n    y,\n    outerRadius,\n    innerRadius\n  } = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  const computeOuterLimit = val => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\n\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\n\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {\n    x,\n    y,\n    startAngle: start,\n    pixelMargin,\n    innerRadius: innerR\n  } = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {\n    outerStart,\n    outerEnd,\n    innerStart,\n    innerEnd\n  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n\n  ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(ctx, element, offset, spacing) {\n  const {\n    fullCircles,\n    startAngle,\n    circumference\n  } = element;\n  let endAngle = element.endAngle;\n\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {\n    x,\n    y,\n    startAngle,\n    pixelMargin,\n    fullCircles\n  } = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\n\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {\n    options\n  } = element;\n  const inner = options.borderAlign === 'inner';\n\n  if (!options.borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\n\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {\n      angle,\n      distance\n    } = getAngleFromPoint(point, {\n      x: chartX,\n      y: chartY\n    });\n    const {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius,\n      circumference\n    } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n\n    const withinRadius = distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust;\n    return betweenAngles && withinRadius;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const {\n      offset,\n      spacing\n    } = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {\n      options,\n      circumference\n    } = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n    let radiusOffset = 0;\n\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n\n}\n\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {\n    start: paramsStart = 0,\n    end: paramsEnd = count - 1\n  } = params;\n  const {\n    start: segmentStart,\n    end: segmentEnd\n  } = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\nfunction pathSegment(ctx, line, segment, params) {\n  const {\n    points,\n    options\n  } = line;\n  const {\n    count,\n    start,\n    loop,\n    ilen\n  } = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {\n    move = true,\n    reverse\n  } = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {\n    count,\n    start,\n    ilen\n  } = pathVars(points, segment, params);\n  const {\n    move = true,\n    reverse\n  } = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n\n    lastY = y;\n  }\n\n  drawX();\n}\n\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n\n  if (!path) {\n    path = line._path = new Path2D();\n\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {\n    segments,\n    options\n  } = line;\n\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n\n    if (segmentMethod(ctx, line, segment, {\n      start,\n      end: start + count - 1\n    })) {\n      ctx.closePath();\n    }\n\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n\n    const segments = _boundSegments(this, {\n      property,\n      start: value,\n      end: value\n    });\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n\n    const _interpolate = _getInterpolationMethod(options);\n\n    let i, ilen;\n\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {\n        start,\n        end\n      } = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n\n    return result.length === 1 ? result[0] : result;\n  }\n\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  path(ctx, start, count) {\n    const segments = this.segments;\n\n    const segmentMethod = _getSegmentMethod(this);\n\n    let loop = this._loop;\n    start = start || 0;\n    count = count || this.points.length - start;\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {\n        start,\n        end: start + count - 1\n      });\n    }\n\n    return !!loop;\n  }\n\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n\n}\n\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: name => name !== 'borderDash' && name !== 'fill'\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {\n    [axis]: value\n  } = el.getProps([axis], useFinalPosition);\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\n\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx, area) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n\n}\n\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {\n    x,\n    y,\n    base,\n    width,\n    height\n  } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {\n    enableBorderRadius\n  } = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const options = this.options;\n    const {\n      inner,\n      outer\n    } = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    const inflateAmount = 0.33;\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount, outer));\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      horizontal\n    } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n\n}\n\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {\n      x: pointAx,\n      y: pointAy\n    } = data[a];\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex1],\n            x: avgX\n          });\n        }\n\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(dataset => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {\n    iScale\n  } = meta;\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {\n    start,\n    count\n  };\n}\n\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {\n        _data,\n        indexAxis\n      } = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n\n      if (meta.type !== 'line') {\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n\n      if (chart.options.parsing) {\n        return;\n      }\n\n      let {\n        start,\n        count\n      } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            return this._decimated;\n          },\n          set: function (d) {\n            this._data = d;\n          }\n        });\n      }\n\n      let decimated;\n\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n\n        default:\n          throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  return fill;\n}\n\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction computeLinearBoundary(source) {\n  const {\n    scale = {},\n    fill\n  } = source;\n  let target = null;\n  let horizontal;\n\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n\n  return null;\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    bounds = bounds || {\n      start: 0,\n      end: TAU\n    };\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n\n}\n\nfunction computeCircularBoundary(source) {\n  const {\n    scale,\n    fill\n  } = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n\n  return target;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n\n  return computeLinearBoundary(source);\n}\n\nfunction findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    const point = points[end];\n\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n\n  return end;\n}\n\nfunction pointsFromSegments(boundary, line) {\n  const {\n    x = null,\n    y = null\n  } = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({\n    start,\n    end\n  }) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y\n      });\n      points.push({\n        x: last.x,\n        y\n      });\n    } else if (x !== null) {\n      points.push({\n        x,\n        y: first.y\n      });\n      points.push({\n        x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\n\nfunction buildStackLine(source) {\n  const {\n    chart,\n    scale,\n    index,\n    line\n  } = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n\n  return new LineElement({\n    points,\n    options: {}\n  });\n}\n\nconst isLineAndNotInHideAnimation = meta => meta.type === 'line' && !meta.hidden;\n\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n\n    if (meta.index === index) {\n      break;\n    }\n\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n\n  return below;\n}\n\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {\n      first,\n      last,\n      point\n    } = findPoint(line, sourcePoint, 'x');\n\n    if (!point || first && last) {\n      continue;\n    }\n\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n\n      if (!last) {\n        break;\n      }\n    }\n  }\n\n  points.push(...postponed);\n}\n\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n\n  return {\n    first,\n    last,\n    point\n  };\n}\n\nfunction getTarget(source) {\n  const {\n    chart,\n    fill,\n    line\n  } = source;\n\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return createBoundaryLine(boundary, line);\n}\n\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {\n      tension: 0\n    },\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n\n  return {\n    property,\n    start,\n    end\n  };\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {\n      start,\n      end\n    } = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n\n  return parts;\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {\n    top,\n    bottom\n  } = scale.chart.chartArea;\n  const {\n    property,\n    start,\n    end\n  } = bounds || {};\n\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nfunction _fill(ctx, cfg) {\n  const {\n    line,\n    target,\n    property,\n    color,\n    scale\n  } = cfg;\n\n  const segments = _segments(line, target, property);\n\n  for (const {\n    source: src,\n    target: tgt,\n    start,\n    end\n  } of segments) {\n    const {\n      style: {\n        backgroundColor = color\n      } = {}\n    } = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {\n        move: lineLoop,\n        reverse: true\n      });\n      loop = lineLoop && targetLoop;\n\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {\n    line,\n    target,\n    above,\n    below,\n    area,\n    scale\n  } = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n\n    _fill(ctx, {\n      line,\n      target,\n      color: above,\n      scale,\n      property\n    });\n\n    ctx.restore();\n    ctx.save();\n\n    _clip(ctx, target, area.bottom);\n  }\n\n  _fill(ctx, {\n    line,\n    target,\n    color: below,\n    scale,\n    property\n  });\n\n  ctx.restore();\n}\n\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {\n    line,\n    scale,\n    axis\n  } = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {\n    above = color,\n    below = color\n  } = fillOption || {};\n\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale,\n      axis\n    });\n    unclipArea(ctx);\n  }\n}\n\nvar plugin_filler = {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {\n    boxHeight = fontSize,\n    boxWidth = fontSize\n  } = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(item => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {\n      options,\n      ctx\n    } = this;\n\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n\n    const titleHeight = this._computeTitleHeight();\n\n    const {\n      boxWidth,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {\n      ctx,\n      maxWidth,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {\n        left: 0,\n        top,\n        row,\n        width: itemWidth,\n        height: itemHeight\n      };\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {\n      ctx,\n      maxHeight,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({\n          width: currentColWidth,\n          height: currentColHeight\n        });\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      hitboxes[i] = {\n        left,\n        top: currentColHeight,\n        col,\n        width: itemWidth,\n        height: itemHeight\n      };\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({\n      width: currentColWidth,\n      height: currentColHeight\n    });\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n\n    const titleHeight = this._computeTitleHeight();\n\n    const {\n      legendHitBoxes: hitboxes,\n      options: {\n        align,\n        labels: {\n          padding\n        },\n        rtl\n      }\n    } = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n\n    if (this.isHorizontal()) {\n      let row = 0;\n\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  _draw() {\n    const {\n      options: opts,\n      columnSizes,\n      lineWidths,\n      ctx\n    } = this;\n    const {\n      align,\n      labels: labelOpts\n    } = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {\n      color: fontColor,\n      padding\n    } = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {\n      boxWidth,\n      boxHeight,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n\n    const drawLegendBox = function (x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function (x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    const isHorizontal = this.isHorizontal();\n\n    const titleHeight = this._computeTitleHeight();\n\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (x >= this.left && x <= this.right && y >= this.top && y <= this.bottom) {\n      lh = this.legendHitBoxes;\n\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  handleEvent(e) {\n    const opts = this.options;\n\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n\n}\n\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n\n  return false;\n}\n\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: ctx => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {\n          labels: {\n            usePointStyle,\n            pointStyle,\n            textAlign,\n            color\n          }\n        } = chart.legend.options;\n        return chart._getSortedDatasetMetas().map(meta => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n\n    },\n    title: {\n      color: ctx => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: name => !name.startsWith('on'),\n    labels: {\n      _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n    }\n  }\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      options\n    } = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n\n      maxWidth = bottom - top;\n    }\n\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n\n};\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n}\n\nfunction createTooltipItem(chart, item) {\n  const {\n    element,\n    datasetIndex,\n    index\n  } = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {\n    label,\n    value\n  } = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {\n    body,\n    footer,\n    title\n  } = tooltip;\n  const {\n    boxWidth,\n    boxHeight\n  } = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  let widthPadding = 0;\n\n  const maxLineWidth = function (line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  each(body, bodyItem => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width,\n    height\n  };\n}\n\nfunction determineYAlign(chart, size) {\n  const {\n    y,\n    height\n  } = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {\n    x,\n    width\n  } = size;\n  const caret = options.caretSize + options.caretPadding;\n\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {\n    x,\n    width\n  } = size;\n  const {\n    width: chartWidth,\n    chartArea: {\n      left,\n      right\n    }\n  } = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {\n    x,\n    width\n  } = size;\n\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {\n    y,\n    height\n  } = size;\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n\n  return y;\n}\n\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {\n    caretSize,\n    caretPadding,\n    cornerRadius\n  } = options;\n  const {\n    xAlign,\n    yAlign\n  } = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {\n    topLeft,\n    topRight,\n    bottomLeft,\n    bottomRight\n  } = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretPadding;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretPadding;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this._chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this._chart, opts);\n\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createTooltipContext(this._chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {\n      callbacks\n    } = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n\n  getBody(tooltipItems, options) {\n    const {\n      callbacks\n    } = options;\n    const bodyItems = [];\n    each(tooltipItems, context => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n\n  getFooter(tooltipItems, options) {\n    const {\n      callbacks\n    } = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n\n  _createItems(options) {\n    const active = this._active;\n    const data = this._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this._chart, active[i]));\n    }\n\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    each(tooltipItems, context => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this._chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {\n        chart: this._chart,\n        tooltip: this,\n        replay\n      });\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      caretSize,\n      cornerRadius\n    } = options;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(cornerRadius);\n    const {\n      x: ptX,\n      y: ptY\n    } = tooltipPoint;\n    const {\n      width,\n      height\n    } = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n\n      y3 = y1;\n    }\n\n    return {\n      x1,\n      x2,\n      x3,\n      y1,\n      y2,\n      y3\n    };\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {\n      boxHeight,\n      boxWidth,\n      boxPadding\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {\n      body\n    } = this;\n    const {\n      bodySpacing,\n      bodyAlign,\n      displayColors,\n      boxHeight,\n      boxWidth,\n      boxPadding\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function (line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      x,\n      y\n    } = pt;\n    const {\n      width,\n      height\n    } = tooltipSize;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  _updateAnimationTarget(options) {\n    const chart = this._chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n\n      if (!position) {\n        return;\n      }\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({\n      datasetIndex,\n      index\n    }) => {\n      const meta = this._chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this.update(true);\n    }\n  }\n\n  handleEvent(e, replay) {\n    const options = this.options;\n    const lastActive = this._active || [];\n    let changed = false;\n    let active = [];\n\n    if (e.type !== 'mouseout') {\n      active = this._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n\n    const positionChanged = this._positionChanged(active, e);\n\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  _positionChanged(active, e) {\n    const {\n      caretX,\n      caretY,\n      options\n    } = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n\n}\n\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        _chart: chart,\n        options\n      });\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n\n        return '';\n      },\n\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n\n        let label = tooltipItem.dataset.label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        const value = tooltipItem.formattedValue;\n\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n\n        return label;\n      },\n\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: plugin_filler,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string' ? labels.push(raw) - 1 : isNaN(raw) ? null : index;\n\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let {\n      min,\n      max\n    } = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({\n        value\n      });\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n\n    return value;\n  }\n\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n\n}\n\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {\n    bounds,\n    step,\n    min,\n    max,\n    precision,\n    count,\n    maxTicks,\n    maxDigits,\n    includeBounds\n  } = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {\n    min: rmin,\n    max: rmax\n  } = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n\n      if (niceMin < min) {\n        j++;\n      }\n\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {\n  horizontal,\n  minRotation\n}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {\n      beginAtZero\n    } = this.options;\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let {\n      min,\n      max\n    } = this;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = 1;\n\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {\n      maxTicksLimit,\n      stepSize\n    } = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n\n    const tickFont = this._resolveTickFontOptions(0);\n\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n\n}\n\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\n\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\n\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n\n    return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n\n}\n\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n  for (let i = 0; i < valueCount; i++) {\n    const extra = i === 0 ? tickBackdropHeight / 2 : 0;\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {\n    ctx,\n    options: {\n      pointLabels\n    }\n  } = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {\n      x,\n      y,\n      textAlign,\n      left,\n      top,\n      right,\n      bottom\n    } = scale._pointLabelItems[i];\n    const {\n      backdropColor\n    } = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {\n    ctx\n  } = scale;\n\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {\n    color,\n    lineWidth\n  } = gridLineOpts;\n\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return Object.assign(Object.create(parent), {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    this.width = this.maxWidth;\n    this.height = this.maxHeight;\n    this.paddingTop = getTickBackdropHeight(this.options) / 2;\n    this.xCenter = Math.floor(this.width / 2);\n    this.yCenter = Math.floor((this.height - this.paddingTop) / 2);\n    this.drawingArea = Math.min(this.height - this.paddingTop, this.width) / 2;\n  }\n\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels().map((value, index) => {\n      const label = callback(this.options.pointLabels.callback, [value, index], this);\n      return label || label === 0 ? label : '';\n    });\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - this.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (this.height - this.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    this.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    this.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const maxRight = this.width - rightMovement - this.drawingArea;\n    const maxLeft = leftMovement + this.drawingArea;\n    const maxTop = topMovement + this.drawingArea;\n    const maxBottom = this.height - this.paddingTop - bottomMovement - this.drawingArea;\n    this.xCenter = Math.floor((maxLeft + maxRight) / 2 + this.left);\n    this.yCenter = Math.floor((maxTop + maxBottom) / 2 + this.top + this.paddingTop);\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter) {\n    const angle = this.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n\n  drawBackground() {\n    const {\n      backgroundColor,\n      grid: {\n        circular\n      }\n    } = this.options;\n\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {\n      angleLines,\n      grid\n    } = opts;\n    const labelCount = this.getLabels().length;\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = this.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {\n          color,\n          lineWidth\n        } = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  drawBorder() {}\n\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color\n      });\n    });\n    ctx.restore();\n  }\n\n  drawTitle() {}\n\n}\n\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n\n    callback(label) {\n      return label;\n    },\n\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nconst INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nconst UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {\n    parser,\n    round,\n    isoWeekday\n  } = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {\n      lo,\n      hi\n    } = _lookup(timestamps, time);\n\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n\n  return ticks;\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n\n    return {\n      min,\n      max\n    };\n  }\n\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {\n      start,\n      end,\n      factor: 1 / (start + 1 + end)\n    };\n  }\n\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n      h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n    };\n  }\n\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n\n    const size = this._getLabelSize(exampleLabel);\n\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return this._cache.data = metas[0].controller.getAllParsedValues(this);\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return this._cache.data = this.normalize(timestamps);\n  }\n\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n  }\n\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n\n}\n\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'pos', val));\n    }\n\n    ({\n      pos: prevSource,\n      time: prevTarget\n    } = table[lo]);\n    ({\n      pos: nextSource,\n      time: nextTarget\n    } = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'time', val));\n    }\n\n    ({\n      time: prevSource,\n      pos: prevTarget\n    } = table[lo]);\n    ({\n      time: nextSource,\n      pos: nextTarget\n    } = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  buildLookupTable(timestamps) {\n    const {\n      min,\n      max\n    } = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  }\n\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n\n}\n\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nconst registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"sources":["D:/dougnut-chart-library/node_modules/chart.js/dist/chart.esm.js"],"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","d","defaults","i","isObject","b","isArray","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","defined","s","sign","j","isNullOrUndef","_","_arrayUnique","t","toRadians","k","toPercentage","m","toDimension","T","TAU","n","formatNumber","o","_angleBetween","H","HALF_PI","P","PI","p","isNumber","q","_limitValue","w","_lookupByKey","x","getRelativePosition$1","y","_isPointInArea","z","_rlookupByKey","A","toPadding","B","each","C","getMaximumSize","D","_getParentNode","E","readUsedSize","F","throttled","G","supportsEventListenerOptions","I","_isDomSupported","J","log10","K","_factorize","L","finiteOrDefault","M","callback","N","_addGrace","O","toDegrees","Q","_measureText","R","_int16Range","S","_alignPixel","U","clipArea","V","renderText","W","unclipArea","X","toFont","Y","_toLeftRightCenter","Z","_alignStartEnd","$","overrides","a0","merge","a1","_capitalize","a2","descriptors","a3","isFunction","a4","_attachContext","a5","_createResolver","a6","_descriptors","a7","mergeIf","a8","uid","a9","debounce","aa","retinaScale","ab","clearCanvas","ac","setsEqual","ad","_elementsEqual","ae","getAngleFromPoint","af","_readValueToProps","ag","_updateBezierControlPoints","ah","_computeSegments","ai","_boundSegments","aj","_steppedInterpolation","ak","_bezierInterpolation","al","_pointInLine","am","_steppedLineTo","an","_bezierCurveTo","ao","drawPoint","ap","addRoundedRectPath","aq","toTRBL","ar","toTRBLCorners","as","_boundSegment","at","_normalizeAngle","au","getRtlAdapter","av","overrideTextDirection","aw","_textX","ax","restoreTextDirection","ay","noop","az","distanceBetweenPoints","aA","_setMinAndMaxByKey","aB","niceNum","aC","almostWhole","aD","almostEquals","aE","_decimalPlaces","aF","_longestText","aG","_filterBetween","aH","_lookup","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","call","window","_update","Date","now","remaining","running","items","length","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","create","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","hidden","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","_onDataUnshift","prototype","getAllScaleValues","_cache","$bar","visibleMetas","concat","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","BarController","iAxisKey","vAxisKey","obj","bars","getBasePixel","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","val","isNaN","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","points","point","iPixel","getPixelForDecimal","vPixel","skip","radius","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","pointCount","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","interaction","controllers","__proto__","abstract","Error","DateAdapter","formats","format","timestamp","amount","unit","diff","startOf","weekday","endOf","override","members","adapters","_date","getRelativePosition","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","jlen","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","_minPadding","evaluationFunc","inRange","getNearestItems","distanceMetric","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","isAttached","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","createAttachObserver","observer","MutationObserver","entries","addedNodes","contains","observe","document","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","getProps","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","scope","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","console","error","_proxy","warn","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","Chart","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","existingEvents","newEvents","events","unbindEvents","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_updateHoverStyles","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","lastEvent","onHover","invalidatePlugins","enumerable","defineProperties","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","borderJoinStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","capBezierPoints","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","inflateAmount","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","configurable","getLineByIndex","parseFillOption","fillOption","decodeFill","parseFloat","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","findSegmentEnd","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","isLineAndNotInHideAnimation","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","getTarget","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","notShape","lineLoop","targetLoop","doFill","above","drawfill","lineOpts","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointLabelContext","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","buildPointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","numberOrZero","param","createPointLabelContext","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"mappings":"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","sourcesContent":["/*!\r\n * Chart.js v3.5.1\r\n * https://www.chartjs.org\r\n * (c) 2021 Chart.js Contributors\r\n * Released under the MIT License\r\n */\r\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as _isDomSupported, J as log10, K as _factorize, L as finiteOrDefault, M as callback, N as _addGrace, O as toDegrees, Q as _measureText, R as _int16Range, S as _alignPixel, U as clipArea, V as renderText, W as unclipArea, X as toFont, Y as _toLeftRightCenter, Z as _alignStartEnd, $ as overrides, a0 as merge, a1 as _capitalize, a2 as descriptors, a3 as isFunction, a4 as _attachContext, a5 as _createResolver, a6 as _descriptors, a7 as mergeIf, a8 as uid, a9 as debounce, aa as retinaScale, ab as clearCanvas, ac as setsEqual, ad as _elementsEqual, ae as getAngleFromPoint, af as _readValueToProps, ag as _updateBezierControlPoints, ah as _computeSegments, ai as _boundSegments, aj as _steppedInterpolation, ak as _bezierInterpolation, al as _pointInLine, am as _steppedLineTo, an as _bezierCurveTo, ao as drawPoint, ap as addRoundedRectPath, aq as toTRBL, ar as toTRBLCorners, as as _boundSegment, at as _normalizeAngle, au as getRtlAdapter, av as overrideTextDirection, aw as _textX, ax as restoreTextDirection, ay as noop, az as distanceBetweenPoints, aA as _setMinAndMaxByKey, aB as niceNum, aC as almostWhole, aD as almostEquals, aE as _decimalPlaces, aF as _longestText, aG as _filterBetween, aH as _lookup } from './chunks/helpers.segment.js';\r\nexport { d as defaults } from './chunks/helpers.segment.js';\r\n\r\nclass Animator {\r\n  constructor() {\r\n    this._request = null;\r\n    this._charts = new Map();\r\n    this._running = false;\r\n    this._lastDate = undefined;\r\n  }\r\n  _notify(chart, anims, date, type) {\r\n    const callbacks = anims.listeners[type];\r\n    const numSteps = anims.duration;\r\n    callbacks.forEach(fn => fn({\r\n      chart,\r\n      initial: anims.initial,\r\n      numSteps,\r\n      currentStep: Math.min(date - anims.start, numSteps)\r\n    }));\r\n  }\r\n  _refresh() {\r\n    if (this._request) {\r\n      return;\r\n    }\r\n    this._running = true;\r\n    this._request = requestAnimFrame.call(window, () => {\r\n      this._update();\r\n      this._request = null;\r\n      if (this._running) {\r\n        this._refresh();\r\n      }\r\n    });\r\n  }\r\n  _update(date = Date.now()) {\r\n    let remaining = 0;\r\n    this._charts.forEach((anims, chart) => {\r\n      if (!anims.running || !anims.items.length) {\r\n        return;\r\n      }\r\n      const items = anims.items;\r\n      let i = items.length - 1;\r\n      let draw = false;\r\n      let item;\r\n      for (; i >= 0; --i) {\r\n        item = items[i];\r\n        if (item._active) {\r\n          if (item._total > anims.duration) {\r\n            anims.duration = item._total;\r\n          }\r\n          item.tick(date);\r\n          draw = true;\r\n        } else {\r\n          items[i] = items[items.length - 1];\r\n          items.pop();\r\n        }\r\n      }\r\n      if (draw) {\r\n        chart.draw();\r\n        this._notify(chart, anims, date, 'progress');\r\n      }\r\n      if (!items.length) {\r\n        anims.running = false;\r\n        this._notify(chart, anims, date, 'complete');\r\n        anims.initial = false;\r\n      }\r\n      remaining += items.length;\r\n    });\r\n    this._lastDate = date;\r\n    if (remaining === 0) {\r\n      this._running = false;\r\n    }\r\n  }\r\n  _getAnims(chart) {\r\n    const charts = this._charts;\r\n    let anims = charts.get(chart);\r\n    if (!anims) {\r\n      anims = {\r\n        running: false,\r\n        initial: true,\r\n        items: [],\r\n        listeners: {\r\n          complete: [],\r\n          progress: []\r\n        }\r\n      };\r\n      charts.set(chart, anims);\r\n    }\r\n    return anims;\r\n  }\r\n  listen(chart, event, cb) {\r\n    this._getAnims(chart).listeners[event].push(cb);\r\n  }\r\n  add(chart, items) {\r\n    if (!items || !items.length) {\r\n      return;\r\n    }\r\n    this._getAnims(chart).items.push(...items);\r\n  }\r\n  has(chart) {\r\n    return this._getAnims(chart).items.length > 0;\r\n  }\r\n  start(chart) {\r\n    const anims = this._charts.get(chart);\r\n    if (!anims) {\r\n      return;\r\n    }\r\n    anims.running = true;\r\n    anims.start = Date.now();\r\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\r\n    this._refresh();\r\n  }\r\n  running(chart) {\r\n    if (!this._running) {\r\n      return false;\r\n    }\r\n    const anims = this._charts.get(chart);\r\n    if (!anims || !anims.running || !anims.items.length) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  stop(chart) {\r\n    const anims = this._charts.get(chart);\r\n    if (!anims || !anims.items.length) {\r\n      return;\r\n    }\r\n    const items = anims.items;\r\n    let i = items.length - 1;\r\n    for (; i >= 0; --i) {\r\n      items[i].cancel();\r\n    }\r\n    anims.items = [];\r\n    this._notify(chart, anims, Date.now(), 'complete');\r\n  }\r\n  remove(chart) {\r\n    return this._charts.delete(chart);\r\n  }\r\n}\r\nvar animator = new Animator();\r\n\r\nconst transparent = 'transparent';\r\nconst interpolators = {\r\n  boolean(from, to, factor) {\r\n    return factor > 0.5 ? to : from;\r\n  },\r\n  color(from, to, factor) {\r\n    const c0 = color(from || transparent);\r\n    const c1 = c0.valid && color(to || transparent);\r\n    return c1 && c1.valid\r\n      ? c1.mix(c0, factor).hexString()\r\n      : to;\r\n  },\r\n  number(from, to, factor) {\r\n    return from + (to - from) * factor;\r\n  }\r\n};\r\nclass Animation {\r\n  constructor(cfg, target, prop, to) {\r\n    const currentValue = target[prop];\r\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\r\n    const from = resolve([cfg.from, currentValue, to]);\r\n    this._active = true;\r\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\r\n    this._easing = effects[cfg.easing] || effects.linear;\r\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\r\n    this._duration = this._total = Math.floor(cfg.duration);\r\n    this._loop = !!cfg.loop;\r\n    this._target = target;\r\n    this._prop = prop;\r\n    this._from = from;\r\n    this._to = to;\r\n    this._promises = undefined;\r\n  }\r\n  active() {\r\n    return this._active;\r\n  }\r\n  update(cfg, to, date) {\r\n    if (this._active) {\r\n      this._notify(false);\r\n      const currentValue = this._target[this._prop];\r\n      const elapsed = date - this._start;\r\n      const remain = this._duration - elapsed;\r\n      this._start = date;\r\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\r\n      this._total += elapsed;\r\n      this._loop = !!cfg.loop;\r\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\r\n      this._from = resolve([cfg.from, currentValue, to]);\r\n    }\r\n  }\r\n  cancel() {\r\n    if (this._active) {\r\n      this.tick(Date.now());\r\n      this._active = false;\r\n      this._notify(false);\r\n    }\r\n  }\r\n  tick(date) {\r\n    const elapsed = date - this._start;\r\n    const duration = this._duration;\r\n    const prop = this._prop;\r\n    const from = this._from;\r\n    const loop = this._loop;\r\n    const to = this._to;\r\n    let factor;\r\n    this._active = from !== to && (loop || (elapsed < duration));\r\n    if (!this._active) {\r\n      this._target[prop] = to;\r\n      this._notify(true);\r\n      return;\r\n    }\r\n    if (elapsed < 0) {\r\n      this._target[prop] = from;\r\n      return;\r\n    }\r\n    factor = (elapsed / duration) % 2;\r\n    factor = loop && factor > 1 ? 2 - factor : factor;\r\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\r\n    this._target[prop] = this._fn(from, to, factor);\r\n  }\r\n  wait() {\r\n    const promises = this._promises || (this._promises = []);\r\n    return new Promise((res, rej) => {\r\n      promises.push({res, rej});\r\n    });\r\n  }\r\n  _notify(resolved) {\r\n    const method = resolved ? 'res' : 'rej';\r\n    const promises = this._promises || [];\r\n    for (let i = 0; i < promises.length; i++) {\r\n      promises[i][method]();\r\n    }\r\n  }\r\n}\r\n\r\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\r\nconst colors = ['color', 'borderColor', 'backgroundColor'];\r\ndefaults.set('animation', {\r\n  delay: undefined,\r\n  duration: 1000,\r\n  easing: 'easeOutQuart',\r\n  fn: undefined,\r\n  from: undefined,\r\n  loop: undefined,\r\n  to: undefined,\r\n  type: undefined,\r\n});\r\nconst animationOptions = Object.keys(defaults.animation);\r\ndefaults.describe('animation', {\r\n  _fallback: false,\r\n  _indexable: false,\r\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\r\n});\r\ndefaults.set('animations', {\r\n  colors: {\r\n    type: 'color',\r\n    properties: colors\r\n  },\r\n  numbers: {\r\n    type: 'number',\r\n    properties: numbers\r\n  },\r\n});\r\ndefaults.describe('animations', {\r\n  _fallback: 'animation',\r\n});\r\ndefaults.set('transitions', {\r\n  active: {\r\n    animation: {\r\n      duration: 400\r\n    }\r\n  },\r\n  resize: {\r\n    animation: {\r\n      duration: 0\r\n    }\r\n  },\r\n  show: {\r\n    animations: {\r\n      colors: {\r\n        from: 'transparent'\r\n      },\r\n      visible: {\r\n        type: 'boolean',\r\n        duration: 0\r\n      },\r\n    }\r\n  },\r\n  hide: {\r\n    animations: {\r\n      colors: {\r\n        to: 'transparent'\r\n      },\r\n      visible: {\r\n        type: 'boolean',\r\n        easing: 'linear',\r\n        fn: v => v | 0\r\n      },\r\n    }\r\n  }\r\n});\r\nclass Animations {\r\n  constructor(chart, config) {\r\n    this._chart = chart;\r\n    this._properties = new Map();\r\n    this.configure(config);\r\n  }\r\n  configure(config) {\r\n    if (!isObject(config)) {\r\n      return;\r\n    }\r\n    const animatedProps = this._properties;\r\n    Object.getOwnPropertyNames(config).forEach(key => {\r\n      const cfg = config[key];\r\n      if (!isObject(cfg)) {\r\n        return;\r\n      }\r\n      const resolved = {};\r\n      for (const option of animationOptions) {\r\n        resolved[option] = cfg[option];\r\n      }\r\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\r\n        if (prop === key || !animatedProps.has(prop)) {\r\n          animatedProps.set(prop, resolved);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  _animateOptions(target, values) {\r\n    const newOptions = values.options;\r\n    const options = resolveTargetOptions(target, newOptions);\r\n    if (!options) {\r\n      return [];\r\n    }\r\n    const animations = this._createAnimations(options, newOptions);\r\n    if (newOptions.$shared) {\r\n      awaitAll(target.options.$animations, newOptions).then(() => {\r\n        target.options = newOptions;\r\n      }, () => {\r\n      });\r\n    }\r\n    return animations;\r\n  }\r\n  _createAnimations(target, values) {\r\n    const animatedProps = this._properties;\r\n    const animations = [];\r\n    const running = target.$animations || (target.$animations = {});\r\n    const props = Object.keys(values);\r\n    const date = Date.now();\r\n    let i;\r\n    for (i = props.length - 1; i >= 0; --i) {\r\n      const prop = props[i];\r\n      if (prop.charAt(0) === '$') {\r\n        continue;\r\n      }\r\n      if (prop === 'options') {\r\n        animations.push(...this._animateOptions(target, values));\r\n        continue;\r\n      }\r\n      const value = values[prop];\r\n      let animation = running[prop];\r\n      const cfg = animatedProps.get(prop);\r\n      if (animation) {\r\n        if (cfg && animation.active()) {\r\n          animation.update(cfg, value, date);\r\n          continue;\r\n        } else {\r\n          animation.cancel();\r\n        }\r\n      }\r\n      if (!cfg || !cfg.duration) {\r\n        target[prop] = value;\r\n        continue;\r\n      }\r\n      running[prop] = animation = new Animation(cfg, target, prop, value);\r\n      animations.push(animation);\r\n    }\r\n    return animations;\r\n  }\r\n  update(target, values) {\r\n    if (this._properties.size === 0) {\r\n      Object.assign(target, values);\r\n      return;\r\n    }\r\n    const animations = this._createAnimations(target, values);\r\n    if (animations.length) {\r\n      animator.add(this._chart, animations);\r\n      return true;\r\n    }\r\n  }\r\n}\r\nfunction awaitAll(animations, properties) {\r\n  const running = [];\r\n  const keys = Object.keys(properties);\r\n  for (let i = 0; i < keys.length; i++) {\r\n    const anim = animations[keys[i]];\r\n    if (anim && anim.active()) {\r\n      running.push(anim.wait());\r\n    }\r\n  }\r\n  return Promise.all(running);\r\n}\r\nfunction resolveTargetOptions(target, newOptions) {\r\n  if (!newOptions) {\r\n    return;\r\n  }\r\n  let options = target.options;\r\n  if (!options) {\r\n    target.options = newOptions;\r\n    return;\r\n  }\r\n  if (options.$shared) {\r\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\r\n  }\r\n  return options;\r\n}\r\n\r\nfunction scaleClip(scale, allowedOverflow) {\r\n  const opts = scale && scale.options || {};\r\n  const reverse = opts.reverse;\r\n  const min = opts.min === undefined ? allowedOverflow : 0;\r\n  const max = opts.max === undefined ? allowedOverflow : 0;\r\n  return {\r\n    start: reverse ? max : min,\r\n    end: reverse ? min : max\r\n  };\r\n}\r\nfunction defaultClip(xScale, yScale, allowedOverflow) {\r\n  if (allowedOverflow === false) {\r\n    return false;\r\n  }\r\n  const x = scaleClip(xScale, allowedOverflow);\r\n  const y = scaleClip(yScale, allowedOverflow);\r\n  return {\r\n    top: y.end,\r\n    right: x.end,\r\n    bottom: y.start,\r\n    left: x.start\r\n  };\r\n}\r\nfunction toClip(value) {\r\n  let t, r, b, l;\r\n  if (isObject(value)) {\r\n    t = value.top;\r\n    r = value.right;\r\n    b = value.bottom;\r\n    l = value.left;\r\n  } else {\r\n    t = r = b = l = value;\r\n  }\r\n  return {\r\n    top: t,\r\n    right: r,\r\n    bottom: b,\r\n    left: l,\r\n    disabled: value === false\r\n  };\r\n}\r\nfunction getSortedDatasetIndices(chart, filterVisible) {\r\n  const keys = [];\r\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\r\n  let i, ilen;\r\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    keys.push(metasets[i].index);\r\n  }\r\n  return keys;\r\n}\r\nfunction applyStack(stack, value, dsIndex, options) {\r\n  const keys = stack.keys;\r\n  const singleMode = options.mode === 'single';\r\n  let i, ilen, datasetIndex, otherValue;\r\n  if (value === null) {\r\n    return;\r\n  }\r\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n    datasetIndex = +keys[i];\r\n    if (datasetIndex === dsIndex) {\r\n      if (options.all) {\r\n        continue;\r\n      }\r\n      break;\r\n    }\r\n    otherValue = stack.values[datasetIndex];\r\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\r\n      value += otherValue;\r\n    }\r\n  }\r\n  return value;\r\n}\r\nfunction convertObjectDataToArray(data) {\r\n  const keys = Object.keys(data);\r\n  const adata = new Array(keys.length);\r\n  let i, ilen, key;\r\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n    key = keys[i];\r\n    adata[i] = {\r\n      x: key,\r\n      y: data[key]\r\n    };\r\n  }\r\n  return adata;\r\n}\r\nfunction isStacked(scale, meta) {\r\n  const stacked = scale && scale.options.stacked;\r\n  return stacked || (stacked === undefined && meta.stack !== undefined);\r\n}\r\nfunction getStackKey(indexScale, valueScale, meta) {\r\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\r\n}\r\nfunction getUserBounds(scale) {\r\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\r\n  return {\r\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\r\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\r\n  };\r\n}\r\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\r\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\r\n  return subStack[indexValue] || (subStack[indexValue] = {});\r\n}\r\nfunction getLastIndexInStack(stack, vScale, positive, type) {\r\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\r\n    const value = stack[meta.index];\r\n    if ((positive && value > 0) || (!positive && value < 0)) {\r\n      return meta.index;\r\n    }\r\n  }\r\n  return null;\r\n}\r\nfunction updateStacks(controller, parsed) {\r\n  const {chart, _cachedMeta: meta} = controller;\r\n  const stacks = chart._stacks || (chart._stacks = {});\r\n  const {iScale, vScale, index: datasetIndex} = meta;\r\n  const iAxis = iScale.axis;\r\n  const vAxis = vScale.axis;\r\n  const key = getStackKey(iScale, vScale, meta);\r\n  const ilen = parsed.length;\r\n  let stack;\r\n  for (let i = 0; i < ilen; ++i) {\r\n    const item = parsed[i];\r\n    const {[iAxis]: index, [vAxis]: value} = item;\r\n    const itemStacks = item._stacks || (item._stacks = {});\r\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\r\n    stack[datasetIndex] = value;\r\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\r\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\r\n  }\r\n}\r\nfunction getFirstScaleId(chart, axis) {\r\n  const scales = chart.scales;\r\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\r\n}\r\nfunction createDatasetContext(parent, index) {\r\n  return Object.assign(Object.create(parent),\r\n    {\r\n      active: false,\r\n      dataset: undefined,\r\n      datasetIndex: index,\r\n      index,\r\n      mode: 'default',\r\n      type: 'dataset'\r\n    }\r\n  );\r\n}\r\nfunction createDataContext(parent, index, element) {\r\n  return Object.assign(Object.create(parent), {\r\n    active: false,\r\n    dataIndex: index,\r\n    parsed: undefined,\r\n    raw: undefined,\r\n    element,\r\n    index,\r\n    mode: 'default',\r\n    type: 'data'\r\n  });\r\n}\r\nfunction clearStacks(meta, items) {\r\n  const datasetIndex = meta.controller.index;\r\n  const axis = meta.vScale && meta.vScale.axis;\r\n  if (!axis) {\r\n    return;\r\n  }\r\n  items = items || meta._parsed;\r\n  for (const parsed of items) {\r\n    const stacks = parsed._stacks;\r\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\r\n      return;\r\n    }\r\n    delete stacks[axis][datasetIndex];\r\n  }\r\n}\r\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\r\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\r\nclass DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    this.chart = chart;\r\n    this._ctx = chart.ctx;\r\n    this.index = datasetIndex;\r\n    this._cachedDataOpts = {};\r\n    this._cachedMeta = this.getMeta();\r\n    this._type = this._cachedMeta.type;\r\n    this.options = undefined;\r\n    this._parsing = false;\r\n    this._data = undefined;\r\n    this._objectData = undefined;\r\n    this._sharedOptions = undefined;\r\n    this._drawStart = undefined;\r\n    this._drawCount = undefined;\r\n    this.enableOptionSharing = false;\r\n    this.$context = undefined;\r\n    this._syncList = [];\r\n    this.initialize();\r\n  }\r\n  initialize() {\r\n    const meta = this._cachedMeta;\r\n    this.configure();\r\n    this.linkScales();\r\n    meta._stacked = isStacked(meta.vScale, meta);\r\n    this.addElements();\r\n  }\r\n  updateIndex(datasetIndex) {\r\n    if (this.index !== datasetIndex) {\r\n      clearStacks(this._cachedMeta);\r\n    }\r\n    this.index = datasetIndex;\r\n  }\r\n  linkScales() {\r\n    const chart = this.chart;\r\n    const meta = this._cachedMeta;\r\n    const dataset = this.getDataset();\r\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\r\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\r\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\r\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\r\n    const indexAxis = meta.indexAxis;\r\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\r\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\r\n    meta.xScale = this.getScaleForId(xid);\r\n    meta.yScale = this.getScaleForId(yid);\r\n    meta.rScale = this.getScaleForId(rid);\r\n    meta.iScale = this.getScaleForId(iid);\r\n    meta.vScale = this.getScaleForId(vid);\r\n  }\r\n  getDataset() {\r\n    return this.chart.data.datasets[this.index];\r\n  }\r\n  getMeta() {\r\n    return this.chart.getDatasetMeta(this.index);\r\n  }\r\n  getScaleForId(scaleID) {\r\n    return this.chart.scales[scaleID];\r\n  }\r\n  _getOtherScale(scale) {\r\n    const meta = this._cachedMeta;\r\n    return scale === meta.iScale\r\n      ? meta.vScale\r\n      : meta.iScale;\r\n  }\r\n  reset() {\r\n    this._update('reset');\r\n  }\r\n  _destroy() {\r\n    const meta = this._cachedMeta;\r\n    if (this._data) {\r\n      unlistenArrayEvents(this._data, this);\r\n    }\r\n    if (meta._stacked) {\r\n      clearStacks(meta);\r\n    }\r\n  }\r\n  _dataCheck() {\r\n    const dataset = this.getDataset();\r\n    const data = dataset.data || (dataset.data = []);\r\n    const _data = this._data;\r\n    if (isObject(data)) {\r\n      this._data = convertObjectDataToArray(data);\r\n    } else if (_data !== data) {\r\n      if (_data) {\r\n        unlistenArrayEvents(_data, this);\r\n        const meta = this._cachedMeta;\r\n        clearStacks(meta);\r\n        meta._parsed = [];\r\n      }\r\n      if (data && Object.isExtensible(data)) {\r\n        listenArrayEvents(data, this);\r\n      }\r\n      this._syncList = [];\r\n      this._data = data;\r\n    }\r\n  }\r\n  addElements() {\r\n    const meta = this._cachedMeta;\r\n    this._dataCheck();\r\n    if (this.datasetElementType) {\r\n      meta.dataset = new this.datasetElementType();\r\n    }\r\n  }\r\n  buildOrUpdateElements(resetNewElements) {\r\n    const meta = this._cachedMeta;\r\n    const dataset = this.getDataset();\r\n    let stackChanged = false;\r\n    this._dataCheck();\r\n    const oldStacked = meta._stacked;\r\n    meta._stacked = isStacked(meta.vScale, meta);\r\n    if (meta.stack !== dataset.stack) {\r\n      stackChanged = true;\r\n      clearStacks(meta);\r\n      meta.stack = dataset.stack;\r\n    }\r\n    this._resyncElements(resetNewElements);\r\n    if (stackChanged || oldStacked !== meta._stacked) {\r\n      updateStacks(this, meta._parsed);\r\n    }\r\n  }\r\n  configure() {\r\n    const config = this.chart.config;\r\n    const scopeKeys = config.datasetScopeKeys(this._type);\r\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\r\n    this.options = config.createResolver(scopes, this.getContext());\r\n    this._parsing = this.options.parsing;\r\n  }\r\n  parse(start, count) {\r\n    const {_cachedMeta: meta, _data: data} = this;\r\n    const {iScale, _stacked} = meta;\r\n    const iAxis = iScale.axis;\r\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\r\n    let prev = start > 0 && meta._parsed[start - 1];\r\n    let i, cur, parsed;\r\n    if (this._parsing === false) {\r\n      meta._parsed = data;\r\n      meta._sorted = true;\r\n      parsed = data;\r\n    } else {\r\n      if (isArray(data[start])) {\r\n        parsed = this.parseArrayData(meta, data, start, count);\r\n      } else if (isObject(data[start])) {\r\n        parsed = this.parseObjectData(meta, data, start, count);\r\n      } else {\r\n        parsed = this.parsePrimitiveData(meta, data, start, count);\r\n      }\r\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\r\n      for (i = 0; i < count; ++i) {\r\n        meta._parsed[i + start] = cur = parsed[i];\r\n        if (sorted) {\r\n          if (isNotInOrderComparedToPrev()) {\r\n            sorted = false;\r\n          }\r\n          prev = cur;\r\n        }\r\n      }\r\n      meta._sorted = sorted;\r\n    }\r\n    if (_stacked) {\r\n      updateStacks(this, parsed);\r\n    }\r\n  }\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    const {iScale, vScale} = meta;\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    const labels = iScale.getLabels();\r\n    const singleScale = iScale === vScale;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      parsed[i] = {\r\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\r\n        [vAxis]: vScale.parse(data[index], index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  parseArrayData(meta, data, start, count) {\r\n    const {xScale, yScale} = meta;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index, item;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      item = data[index];\r\n      parsed[i] = {\r\n        x: xScale.parse(item[0], index),\r\n        y: yScale.parse(item[1], index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const {xScale, yScale} = meta;\r\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index, item;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      item = data[index];\r\n      parsed[i] = {\r\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\r\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  getParsed(index) {\r\n    return this._cachedMeta._parsed[index];\r\n  }\r\n  getDataElement(index) {\r\n    return this._cachedMeta.data[index];\r\n  }\r\n  applyStack(scale, parsed, mode) {\r\n    const chart = this.chart;\r\n    const meta = this._cachedMeta;\r\n    const value = parsed[scale.axis];\r\n    const stack = {\r\n      keys: getSortedDatasetIndices(chart, true),\r\n      values: parsed._stacks[scale.axis]\r\n    };\r\n    return applyStack(stack, value, meta.index, {mode});\r\n  }\r\n  updateRangeFromParsed(range, scale, parsed, stack) {\r\n    const parsedValue = parsed[scale.axis];\r\n    let value = parsedValue === null ? NaN : parsedValue;\r\n    const values = stack && parsed._stacks[scale.axis];\r\n    if (stack && values) {\r\n      stack.values = values;\r\n      range.min = Math.min(range.min, value);\r\n      range.max = Math.max(range.max, value);\r\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\r\n    }\r\n    range.min = Math.min(range.min, value);\r\n    range.max = Math.max(range.max, value);\r\n  }\r\n  getMinMax(scale, canStack) {\r\n    const meta = this._cachedMeta;\r\n    const _parsed = meta._parsed;\r\n    const sorted = meta._sorted && scale === meta.iScale;\r\n    const ilen = _parsed.length;\r\n    const otherScale = this._getOtherScale(scale);\r\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(this.chart, true), values: null};\r\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\r\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\r\n    let i, value, parsed, otherValue;\r\n    function _skip() {\r\n      parsed = _parsed[i];\r\n      value = parsed[scale.axis];\r\n      otherValue = parsed[otherScale.axis];\r\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\r\n    }\r\n    for (i = 0; i < ilen; ++i) {\r\n      if (_skip()) {\r\n        continue;\r\n      }\r\n      this.updateRangeFromParsed(range, scale, parsed, stack);\r\n      if (sorted) {\r\n        break;\r\n      }\r\n    }\r\n    if (sorted) {\r\n      for (i = ilen - 1; i >= 0; --i) {\r\n        if (_skip()) {\r\n          continue;\r\n        }\r\n        this.updateRangeFromParsed(range, scale, parsed, stack);\r\n        break;\r\n      }\r\n    }\r\n    return range;\r\n  }\r\n  getAllParsedValues(scale) {\r\n    const parsed = this._cachedMeta._parsed;\r\n    const values = [];\r\n    let i, ilen, value;\r\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\r\n      value = parsed[i][scale.axis];\r\n      if (isNumberFinite(value)) {\r\n        values.push(value);\r\n      }\r\n    }\r\n    return values;\r\n  }\r\n  getMaxOverflow() {\r\n    return false;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const vScale = meta.vScale;\r\n    const parsed = this.getParsed(index);\r\n    return {\r\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\r\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\r\n    };\r\n  }\r\n  _update(mode) {\r\n    const meta = this._cachedMeta;\r\n    this.configure();\r\n    this._cachedDataOpts = {};\r\n    this.update(mode || 'default');\r\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\r\n  }\r\n  update(mode) {}\r\n  draw() {\r\n    const ctx = this._ctx;\r\n    const chart = this.chart;\r\n    const meta = this._cachedMeta;\r\n    const elements = meta.data || [];\r\n    const area = chart.chartArea;\r\n    const active = [];\r\n    const start = this._drawStart || 0;\r\n    const count = this._drawCount || (elements.length - start);\r\n    let i;\r\n    if (meta.dataset) {\r\n      meta.dataset.draw(ctx, area, start, count);\r\n    }\r\n    for (i = start; i < start + count; ++i) {\r\n      const element = elements[i];\r\n      if (element.hidden) {\r\n        continue;\r\n      }\r\n      if (element.active) {\r\n        active.push(element);\r\n      } else {\r\n        element.draw(ctx, area);\r\n      }\r\n    }\r\n    for (i = 0; i < active.length; ++i) {\r\n      active[i].draw(ctx, area);\r\n    }\r\n  }\r\n  getStyle(index, active) {\r\n    const mode = active ? 'active' : 'default';\r\n    return index === undefined && this._cachedMeta.dataset\r\n      ? this.resolveDatasetElementOptions(mode)\r\n      : this.resolveDataElementOptions(index || 0, mode);\r\n  }\r\n  getContext(index, active, mode) {\r\n    const dataset = this.getDataset();\r\n    let context;\r\n    if (index >= 0 && index < this._cachedMeta.data.length) {\r\n      const element = this._cachedMeta.data[index];\r\n      context = element.$context ||\r\n        (element.$context = createDataContext(this.getContext(), index, element));\r\n      context.parsed = this.getParsed(index);\r\n      context.raw = dataset.data[index];\r\n      context.index = context.dataIndex = index;\r\n    } else {\r\n      context = this.$context ||\r\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\r\n      context.dataset = dataset;\r\n      context.index = context.datasetIndex = this.index;\r\n    }\r\n    context.active = !!active;\r\n    context.mode = mode;\r\n    return context;\r\n  }\r\n  resolveDatasetElementOptions(mode) {\r\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\r\n  }\r\n  resolveDataElementOptions(index, mode) {\r\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\r\n  }\r\n  _resolveElementOptions(elementType, mode = 'default', index) {\r\n    const active = mode === 'active';\r\n    const cache = this._cachedDataOpts;\r\n    const cacheKey = elementType + '-' + mode;\r\n    const cached = cache[cacheKey];\r\n    const sharing = this.enableOptionSharing && defined(index);\r\n    if (cached) {\r\n      return cloneIfNotShared(cached, sharing);\r\n    }\r\n    const config = this.chart.config;\r\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\r\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\r\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\r\n    const names = Object.keys(defaults.elements[elementType]);\r\n    const context = () => this.getContext(index, active);\r\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\r\n    if (values.$shared) {\r\n      values.$shared = sharing;\r\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\r\n    }\r\n    return values;\r\n  }\r\n  _resolveAnimations(index, transition, active) {\r\n    const chart = this.chart;\r\n    const cache = this._cachedDataOpts;\r\n    const cacheKey = `animation-${transition}`;\r\n    const cached = cache[cacheKey];\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    let options;\r\n    if (chart.options.animation !== false) {\r\n      const config = this.chart.config;\r\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\r\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\r\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\r\n    }\r\n    const animations = new Animations(chart, options && options.animations);\r\n    if (options && options._cacheable) {\r\n      cache[cacheKey] = Object.freeze(animations);\r\n    }\r\n    return animations;\r\n  }\r\n  getSharedOptions(options) {\r\n    if (!options.$shared) {\r\n      return;\r\n    }\r\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\r\n  }\r\n  includeOptions(mode, sharedOptions) {\r\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\r\n  }\r\n  updateElement(element, index, properties, mode) {\r\n    if (isDirectUpdateMode(mode)) {\r\n      Object.assign(element, properties);\r\n    } else {\r\n      this._resolveAnimations(index, mode).update(element, properties);\r\n    }\r\n  }\r\n  updateSharedOptions(sharedOptions, mode, newOptions) {\r\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\r\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\r\n    }\r\n  }\r\n  _setStyle(element, index, mode, active) {\r\n    element.active = active;\r\n    const options = this.getStyle(index, active);\r\n    this._resolveAnimations(index, mode, active).update(element, {\r\n      options: (!active && this.getSharedOptions(options)) || options\r\n    });\r\n  }\r\n  removeHoverStyle(element, datasetIndex, index) {\r\n    this._setStyle(element, index, 'active', false);\r\n  }\r\n  setHoverStyle(element, datasetIndex, index) {\r\n    this._setStyle(element, index, 'active', true);\r\n  }\r\n  _removeDatasetHoverStyle() {\r\n    const element = this._cachedMeta.dataset;\r\n    if (element) {\r\n      this._setStyle(element, undefined, 'active', false);\r\n    }\r\n  }\r\n  _setDatasetHoverStyle() {\r\n    const element = this._cachedMeta.dataset;\r\n    if (element) {\r\n      this._setStyle(element, undefined, 'active', true);\r\n    }\r\n  }\r\n  _resyncElements(resetNewElements) {\r\n    const data = this._data;\r\n    const elements = this._cachedMeta.data;\r\n    for (const [method, arg1, arg2] of this._syncList) {\r\n      this[method](arg1, arg2);\r\n    }\r\n    this._syncList = [];\r\n    const numMeta = elements.length;\r\n    const numData = data.length;\r\n    const count = Math.min(numData, numMeta);\r\n    if (count) {\r\n      this.parse(0, count);\r\n    }\r\n    if (numData > numMeta) {\r\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\r\n    } else if (numData < numMeta) {\r\n      this._removeElements(numData, numMeta - numData);\r\n    }\r\n  }\r\n  _insertElements(start, count, resetNewElements = true) {\r\n    const meta = this._cachedMeta;\r\n    const data = meta.data;\r\n    const end = start + count;\r\n    let i;\r\n    const move = (arr) => {\r\n      arr.length += count;\r\n      for (i = arr.length - 1; i >= end; i--) {\r\n        arr[i] = arr[i - count];\r\n      }\r\n    };\r\n    move(data);\r\n    for (i = start; i < end; ++i) {\r\n      data[i] = new this.dataElementType();\r\n    }\r\n    if (this._parsing) {\r\n      move(meta._parsed);\r\n    }\r\n    this.parse(start, count);\r\n    if (resetNewElements) {\r\n      this.updateElements(data, start, count, 'reset');\r\n    }\r\n  }\r\n  updateElements(element, start, count, mode) {}\r\n  _removeElements(start, count) {\r\n    const meta = this._cachedMeta;\r\n    if (this._parsing) {\r\n      const removed = meta._parsed.splice(start, count);\r\n      if (meta._stacked) {\r\n        clearStacks(meta, removed);\r\n      }\r\n    }\r\n    meta.data.splice(start, count);\r\n  }\r\n  _sync(args) {\r\n    if (this._parsing) {\r\n      this._syncList.push(args);\r\n    } else {\r\n      const [method, arg1, arg2] = args;\r\n      this[method](arg1, arg2);\r\n    }\r\n  }\r\n  _onDataPush() {\r\n    const count = arguments.length;\r\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\r\n  }\r\n  _onDataPop() {\r\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\r\n  }\r\n  _onDataShift() {\r\n    this._sync(['_removeElements', 0, 1]);\r\n  }\r\n  _onDataSplice(start, count) {\r\n    this._sync(['_removeElements', start, count]);\r\n    this._sync(['_insertElements', start, arguments.length - 2]);\r\n  }\r\n  _onDataUnshift() {\r\n    this._sync(['_insertElements', 0, arguments.length]);\r\n  }\r\n}\r\nDatasetController.defaults = {};\r\nDatasetController.prototype.datasetElementType = null;\r\nDatasetController.prototype.dataElementType = null;\r\n\r\nfunction getAllScaleValues(scale, type) {\r\n  if (!scale._cache.$bar) {\r\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\r\n    let values = [];\r\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\r\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\r\n    }\r\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\r\n  }\r\n  return scale._cache.$bar;\r\n}\r\nfunction computeMinSampleSize(meta) {\r\n  const scale = meta.iScale;\r\n  const values = getAllScaleValues(scale, meta.type);\r\n  let min = scale._length;\r\n  let i, ilen, curr, prev;\r\n  const updateMinAndPrev = () => {\r\n    if (curr === 32767 || curr === -32768) {\r\n      return;\r\n    }\r\n    if (defined(prev)) {\r\n      min = Math.min(min, Math.abs(curr - prev) || min);\r\n    }\r\n    prev = curr;\r\n  };\r\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\r\n    curr = scale.getPixelForValue(values[i]);\r\n    updateMinAndPrev();\r\n  }\r\n  prev = undefined;\r\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\r\n    curr = scale.getPixelForTick(i);\r\n    updateMinAndPrev();\r\n  }\r\n  return min;\r\n}\r\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\r\n  const thickness = options.barThickness;\r\n  let size, ratio;\r\n  if (isNullOrUndef(thickness)) {\r\n    size = ruler.min * options.categoryPercentage;\r\n    ratio = options.barPercentage;\r\n  } else {\r\n    size = thickness * stackCount;\r\n    ratio = 1;\r\n  }\r\n  return {\r\n    chunk: size / stackCount,\r\n    ratio,\r\n    start: ruler.pixels[index] - (size / 2)\r\n  };\r\n}\r\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\r\n  const pixels = ruler.pixels;\r\n  const curr = pixels[index];\r\n  let prev = index > 0 ? pixels[index - 1] : null;\r\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\r\n  const percent = options.categoryPercentage;\r\n  if (prev === null) {\r\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\r\n  }\r\n  if (next === null) {\r\n    next = curr + curr - prev;\r\n  }\r\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\r\n  const size = Math.abs(next - prev) / 2 * percent;\r\n  return {\r\n    chunk: size / stackCount,\r\n    ratio: options.barPercentage,\r\n    start\r\n  };\r\n}\r\nfunction parseFloatBar(entry, item, vScale, i) {\r\n  const startValue = vScale.parse(entry[0], i);\r\n  const endValue = vScale.parse(entry[1], i);\r\n  const min = Math.min(startValue, endValue);\r\n  const max = Math.max(startValue, endValue);\r\n  let barStart = min;\r\n  let barEnd = max;\r\n  if (Math.abs(min) > Math.abs(max)) {\r\n    barStart = max;\r\n    barEnd = min;\r\n  }\r\n  item[vScale.axis] = barEnd;\r\n  item._custom = {\r\n    barStart,\r\n    barEnd,\r\n    start: startValue,\r\n    end: endValue,\r\n    min,\r\n    max\r\n  };\r\n}\r\nfunction parseValue(entry, item, vScale, i) {\r\n  if (isArray(entry)) {\r\n    parseFloatBar(entry, item, vScale, i);\r\n  } else {\r\n    item[vScale.axis] = vScale.parse(entry, i);\r\n  }\r\n  return item;\r\n}\r\nfunction parseArrayOrPrimitive(meta, data, start, count) {\r\n  const iScale = meta.iScale;\r\n  const vScale = meta.vScale;\r\n  const labels = iScale.getLabels();\r\n  const singleScale = iScale === vScale;\r\n  const parsed = [];\r\n  let i, ilen, item, entry;\r\n  for (i = start, ilen = start + count; i < ilen; ++i) {\r\n    entry = data[i];\r\n    item = {};\r\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\r\n    parsed.push(parseValue(entry, item, vScale, i));\r\n  }\r\n  return parsed;\r\n}\r\nfunction isFloatBar(custom) {\r\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\r\n}\r\nfunction barSign(size, vScale, actualBase) {\r\n  if (size !== 0) {\r\n    return sign(size);\r\n  }\r\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\r\n}\r\nfunction borderProps(properties) {\r\n  let reverse, start, end, top, bottom;\r\n  if (properties.horizontal) {\r\n    reverse = properties.base > properties.x;\r\n    start = 'left';\r\n    end = 'right';\r\n  } else {\r\n    reverse = properties.base < properties.y;\r\n    start = 'bottom';\r\n    end = 'top';\r\n  }\r\n  if (reverse) {\r\n    top = 'end';\r\n    bottom = 'start';\r\n  } else {\r\n    top = 'start';\r\n    bottom = 'end';\r\n  }\r\n  return {start, end, reverse, top, bottom};\r\n}\r\nfunction setBorderSkipped(properties, options, stack, index) {\r\n  let edge = options.borderSkipped;\r\n  const res = {};\r\n  if (!edge) {\r\n    properties.borderSkipped = res;\r\n    return;\r\n  }\r\n  const {start, end, reverse, top, bottom} = borderProps(properties);\r\n  if (edge === 'middle' && stack) {\r\n    properties.enableBorderRadius = true;\r\n    if ((stack._top || 0) === index) {\r\n      edge = top;\r\n    } else if ((stack._bottom || 0) === index) {\r\n      edge = bottom;\r\n    } else {\r\n      res[parseEdge(bottom, start, end, reverse)] = true;\r\n      edge = top;\r\n    }\r\n  }\r\n  res[parseEdge(edge, start, end, reverse)] = true;\r\n  properties.borderSkipped = res;\r\n}\r\nfunction parseEdge(edge, a, b, reverse) {\r\n  if (reverse) {\r\n    edge = swap(edge, a, b);\r\n    edge = startEnd(edge, b, a);\r\n  } else {\r\n    edge = startEnd(edge, a, b);\r\n  }\r\n  return edge;\r\n}\r\nfunction swap(orig, v1, v2) {\r\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\r\n}\r\nfunction startEnd(v, start, end) {\r\n  return v === 'start' ? start : v === 'end' ? end : v;\r\n}\r\nclass BarController extends DatasetController {\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    return parseArrayOrPrimitive(meta, data, start, count);\r\n  }\r\n  parseArrayData(meta, data, start, count) {\r\n    return parseArrayOrPrimitive(meta, data, start, count);\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const {iScale, vScale} = meta;\r\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\r\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\r\n    const parsed = [];\r\n    let i, ilen, item, obj;\r\n    for (i = start, ilen = start + count; i < ilen; ++i) {\r\n      obj = data[i];\r\n      item = {};\r\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\r\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\r\n    }\r\n    return parsed;\r\n  }\r\n  updateRangeFromParsed(range, scale, parsed, stack) {\r\n    super.updateRangeFromParsed(range, scale, parsed, stack);\r\n    const custom = parsed._custom;\r\n    if (custom && scale === this._cachedMeta.vScale) {\r\n      range.min = Math.min(range.min, custom.min);\r\n      range.max = Math.max(range.max, custom.max);\r\n    }\r\n  }\r\n  getMaxOverflow() {\r\n    return 0;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const {iScale, vScale} = meta;\r\n    const parsed = this.getParsed(index);\r\n    const custom = parsed._custom;\r\n    const value = isFloatBar(custom)\r\n      ? '[' + custom.start + ', ' + custom.end + ']'\r\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\r\n    return {\r\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\r\n      value\r\n    };\r\n  }\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    super.initialize();\r\n    const meta = this._cachedMeta;\r\n    meta.stack = this.getDataset().stack;\r\n  }\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    this.updateElements(meta.data, 0, meta.data.length, mode);\r\n  }\r\n  updateElements(bars, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {index, _cachedMeta: {vScale}} = this;\r\n    const base = vScale.getBasePixel();\r\n    const horizontal = vScale.isHorizontal();\r\n    const ruler = this._getRuler();\r\n    const firstOpts = this.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = this.getSharedOptions(firstOpts);\r\n    const includeOptions = this.includeOptions(mode, sharedOptions);\r\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n    for (let i = start; i < start + count; i++) {\r\n      const parsed = this.getParsed(i);\r\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\r\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\r\n      const stack = (parsed._stacks || {})[vScale.axis];\r\n      const properties = {\r\n        horizontal,\r\n        base: vpixels.base,\r\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\r\n        x: horizontal ? vpixels.head : ipixels.center,\r\n        y: horizontal ? ipixels.center : vpixels.head,\r\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\r\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\r\n      };\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\r\n      }\r\n      setBorderSkipped(properties, properties.options || bars[i].options, stack, index);\r\n      this.updateElement(bars[i], i, properties, mode);\r\n    }\r\n  }\r\n  _getStacks(last, dataIndex) {\r\n    const meta = this._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\r\n    const stacked = iScale.options.stacked;\r\n    const ilen = metasets.length;\r\n    const stacks = [];\r\n    let i, item;\r\n    for (i = 0; i < ilen; ++i) {\r\n      item = metasets[i];\r\n      if (!item.controller.options.grouped) {\r\n        continue;\r\n      }\r\n      if (typeof dataIndex !== 'undefined') {\r\n        const val = item.controller.getParsed(dataIndex)[\r\n          item.controller._cachedMeta.vScale.axis\r\n        ];\r\n        if (isNullOrUndef(val) || isNaN(val)) {\r\n          continue;\r\n        }\r\n      }\r\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\r\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\r\n        stacks.push(item.stack);\r\n      }\r\n      if (item.index === last) {\r\n        break;\r\n      }\r\n    }\r\n    if (!stacks.length) {\r\n      stacks.push(undefined);\r\n    }\r\n    return stacks;\r\n  }\r\n  _getStackCount(index) {\r\n    return this._getStacks(undefined, index).length;\r\n  }\r\n  _getStackIndex(datasetIndex, name, dataIndex) {\r\n    const stacks = this._getStacks(datasetIndex, dataIndex);\r\n    const index = (name !== undefined)\r\n      ? stacks.indexOf(name)\r\n      : -1;\r\n    return (index === -1)\r\n      ? stacks.length - 1\r\n      : index;\r\n  }\r\n  _getRuler() {\r\n    const opts = this.options;\r\n    const meta = this._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const pixels = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\r\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\r\n    }\r\n    const barThickness = opts.barThickness;\r\n    const min = barThickness || computeMinSampleSize(meta);\r\n    return {\r\n      min,\r\n      pixels,\r\n      start: iScale._startPixel,\r\n      end: iScale._endPixel,\r\n      stackCount: this._getStackCount(),\r\n      scale: iScale,\r\n      grouped: opts.grouped,\r\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\r\n    };\r\n  }\r\n  _calculateBarValuePixels(index) {\r\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\r\n    const actualBase = baseValue || 0;\r\n    const parsed = this.getParsed(index);\r\n    const custom = parsed._custom;\r\n    const floating = isFloatBar(custom);\r\n    let value = parsed[vScale.axis];\r\n    let start = 0;\r\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\r\n    let head, size;\r\n    if (length !== value) {\r\n      start = length - value;\r\n      length = value;\r\n    }\r\n    if (floating) {\r\n      value = custom.barStart;\r\n      length = custom.barEnd - custom.barStart;\r\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\r\n        start = 0;\r\n      }\r\n      start += value;\r\n    }\r\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\r\n    let base = vScale.getPixelForValue(startValue);\r\n    if (this.chart.getDataVisibility(index)) {\r\n      head = vScale.getPixelForValue(start + length);\r\n    } else {\r\n      head = base;\r\n    }\r\n    size = head - base;\r\n    if (Math.abs(size) < minBarLength) {\r\n      size = barSign(size, vScale, actualBase) * minBarLength;\r\n      if (value === actualBase) {\r\n        base -= size / 2;\r\n      }\r\n      head = base + size;\r\n    }\r\n    if (base === vScale.getPixelForValue(actualBase)) {\r\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\r\n      base += halfGrid;\r\n      size -= halfGrid;\r\n    }\r\n    return {\r\n      size,\r\n      base,\r\n      head,\r\n      center: head + size / 2\r\n    };\r\n  }\r\n  _calculateBarIndexPixels(index, ruler) {\r\n    const scale = ruler.scale;\r\n    const options = this.options;\r\n    const skipNull = options.skipNull;\r\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\r\n    let center, size;\r\n    if (ruler.grouped) {\r\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\r\n      const range = options.barThickness === 'flex'\r\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\r\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\r\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\r\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\r\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\r\n    } else {\r\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\r\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\r\n    }\r\n    return {\r\n      base: center - size / 2,\r\n      head: center + size / 2,\r\n      center,\r\n      size\r\n    };\r\n  }\r\n  draw() {\r\n    const meta = this._cachedMeta;\r\n    const vScale = meta.vScale;\r\n    const rects = meta.data;\r\n    const ilen = rects.length;\r\n    let i = 0;\r\n    for (; i < ilen; ++i) {\r\n      if (this.getParsed(i)[vScale.axis] !== null) {\r\n        rects[i].draw(this._ctx);\r\n      }\r\n    }\r\n  }\r\n}\r\nBarController.id = 'bar';\r\nBarController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'bar',\r\n  categoryPercentage: 0.8,\r\n  barPercentage: 0.9,\r\n  grouped: true,\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'base', 'width', 'height']\r\n    }\r\n  }\r\n};\r\nBarController.overrides = {\r\n  scales: {\r\n    _index_: {\r\n      type: 'category',\r\n      offset: true,\r\n      grid: {\r\n        offset: true\r\n      }\r\n    },\r\n    _value_: {\r\n      type: 'linear',\r\n      beginAtZero: true,\r\n    }\r\n  }\r\n};\r\n\r\nclass BubbleController extends DatasetController {\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    super.initialize();\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const {xScale, yScale} = meta;\r\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n    const parsed = [];\r\n    let i, ilen, item;\r\n    for (i = start, ilen = start + count; i < ilen; ++i) {\r\n      item = data[i];\r\n      parsed.push({\r\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\r\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\r\n        _custom: item && item.r && +item.r\r\n      });\r\n    }\r\n    return parsed;\r\n  }\r\n  getMaxOverflow() {\r\n    const {data, _parsed} = this._cachedMeta;\r\n    let max = 0;\r\n    for (let i = data.length - 1; i >= 0; --i) {\r\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\r\n    }\r\n    return max > 0 && max;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const {xScale, yScale} = meta;\r\n    const parsed = this.getParsed(index);\r\n    const x = xScale.getLabelForValue(parsed.x);\r\n    const y = yScale.getLabelForValue(parsed.y);\r\n    const r = parsed._custom;\r\n    return {\r\n      label: meta.label,\r\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\r\n    };\r\n  }\r\n  update(mode) {\r\n    const points = this._cachedMeta.data;\r\n    this.updateElements(points, 0, points.length, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {iScale, vScale} = this._cachedMeta;\r\n    const firstOpts = this.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = this.getSharedOptions(firstOpts);\r\n    const includeOptions = this.includeOptions(mode, sharedOptions);\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    for (let i = start; i < start + count; i++) {\r\n      const point = points[i];\r\n      const parsed = !reset && this.getParsed(i);\r\n      const properties = {};\r\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\r\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\r\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\r\n      if (includeOptions) {\r\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n        if (reset) {\r\n          properties.options.radius = 0;\r\n        }\r\n      }\r\n      this.updateElement(point, i, properties, mode);\r\n    }\r\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n  }\r\n  resolveDataElementOptions(index, mode) {\r\n    const parsed = this.getParsed(index);\r\n    let values = super.resolveDataElementOptions(index, mode);\r\n    if (values.$shared) {\r\n      values = Object.assign({}, values, {$shared: false});\r\n    }\r\n    const radius = values.radius;\r\n    if (mode !== 'active') {\r\n      values.radius = 0;\r\n    }\r\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\r\n    return values;\r\n  }\r\n}\r\nBubbleController.id = 'bubble';\r\nBubbleController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'point',\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'borderWidth', 'radius']\r\n    }\r\n  }\r\n};\r\nBubbleController.overrides = {\r\n  scales: {\r\n    x: {\r\n      type: 'linear'\r\n    },\r\n    y: {\r\n      type: 'linear'\r\n    }\r\n  },\r\n  plugins: {\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nfunction getRatioAndOffset(rotation, circumference, cutout) {\r\n  let ratioX = 1;\r\n  let ratioY = 1;\r\n  let offsetX = 0;\r\n  let offsetY = 0;\r\n  if (circumference < TAU) {\r\n    const startAngle = rotation;\r\n    const endAngle = startAngle + circumference;\r\n    const startX = Math.cos(startAngle);\r\n    const startY = Math.sin(startAngle);\r\n    const endX = Math.cos(endAngle);\r\n    const endY = Math.sin(endAngle);\r\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\r\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\r\n    const maxX = calcMax(0, startX, endX);\r\n    const maxY = calcMax(HALF_PI, startY, endY);\r\n    const minX = calcMin(PI, startX, endX);\r\n    const minY = calcMin(PI + HALF_PI, startY, endY);\r\n    ratioX = (maxX - minX) / 2;\r\n    ratioY = (maxY - minY) / 2;\r\n    offsetX = -(maxX + minX) / 2;\r\n    offsetY = -(maxY + minY) / 2;\r\n  }\r\n  return {ratioX, ratioY, offsetX, offsetY};\r\n}\r\nclass DoughnutController extends DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    super(chart, datasetIndex);\r\n    this.enableOptionSharing = true;\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n    this.offsetX = undefined;\r\n    this.offsetY = undefined;\r\n  }\r\n  linkScales() {}\r\n  parse(start, count) {\r\n    const data = this.getDataset().data;\r\n    const meta = this._cachedMeta;\r\n    if (this._parsing === false) {\r\n      meta._parsed = data;\r\n    } else {\r\n      let getter = (i) => +data[i];\r\n      if (isObject(data[start])) {\r\n        const {key = 'value'} = this._parsing;\r\n        getter = (i) => +resolveObjectKey(data[i], key);\r\n      }\r\n      let i, ilen;\r\n      for (i = start, ilen = start + count; i < ilen; ++i) {\r\n        meta._parsed[i] = getter(i);\r\n      }\r\n    }\r\n  }\r\n  _getRotation() {\r\n    return toRadians(this.options.rotation - 90);\r\n  }\r\n  _getCircumference() {\r\n    return toRadians(this.options.circumference);\r\n  }\r\n  _getRotationExtents() {\r\n    let min = TAU;\r\n    let max = -TAU;\r\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\r\n      if (this.chart.isDatasetVisible(i)) {\r\n        const controller = this.chart.getDatasetMeta(i).controller;\r\n        const rotation = controller._getRotation();\r\n        const circumference = controller._getCircumference();\r\n        min = Math.min(min, rotation);\r\n        max = Math.max(max, rotation + circumference);\r\n      }\r\n    }\r\n    return {\r\n      rotation: min,\r\n      circumference: max - min,\r\n    };\r\n  }\r\n  update(mode) {\r\n    const chart = this.chart;\r\n    const {chartArea} = chart;\r\n    const meta = this._cachedMeta;\r\n    const arcs = meta.data;\r\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\r\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\r\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\r\n    const chartWeight = this._getRingWeight(this.index);\r\n    const {circumference, rotation} = this._getRotationExtents();\r\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\r\n    const maxWidth = (chartArea.width - spacing) / ratioX;\r\n    const maxHeight = (chartArea.height - spacing) / ratioY;\r\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\r\n    const outerRadius = toDimension(this.options.radius, maxRadius);\r\n    const innerRadius = Math.max(outerRadius * cutout, 0);\r\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\r\n    this.offsetX = offsetX * outerRadius;\r\n    this.offsetY = offsetY * outerRadius;\r\n    meta.total = this.calculateTotal();\r\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\r\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\r\n    this.updateElements(arcs, 0, arcs.length, mode);\r\n  }\r\n  _circumference(i, reset) {\r\n    const opts = this.options;\r\n    const meta = this._cachedMeta;\r\n    const circumference = this._getCircumference();\r\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\r\n      return 0;\r\n    }\r\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\r\n  }\r\n  updateElements(arcs, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const chart = this.chart;\r\n    const chartArea = chart.chartArea;\r\n    const opts = chart.options;\r\n    const animationOpts = opts.animation;\r\n    const centerX = (chartArea.left + chartArea.right) / 2;\r\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\r\n    const animateScale = reset && animationOpts.animateScale;\r\n    const innerRadius = animateScale ? 0 : this.innerRadius;\r\n    const outerRadius = animateScale ? 0 : this.outerRadius;\r\n    const firstOpts = this.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = this.getSharedOptions(firstOpts);\r\n    const includeOptions = this.includeOptions(mode, sharedOptions);\r\n    let startAngle = this._getRotation();\r\n    let i;\r\n    for (i = 0; i < start; ++i) {\r\n      startAngle += this._circumference(i, reset);\r\n    }\r\n    for (i = start; i < start + count; ++i) {\r\n      const circumference = this._circumference(i, reset);\r\n      const arc = arcs[i];\r\n      const properties = {\r\n        x: centerX + this.offsetX,\r\n        y: centerY + this.offsetY,\r\n        startAngle,\r\n        endAngle: startAngle + circumference,\r\n        circumference,\r\n        outerRadius,\r\n        innerRadius\r\n      };\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\r\n      }\r\n      startAngle += circumference;\r\n      this.updateElement(arc, i, properties, mode);\r\n    }\r\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n  }\r\n  calculateTotal() {\r\n    const meta = this._cachedMeta;\r\n    const metaData = meta.data;\r\n    let total = 0;\r\n    let i;\r\n    for (i = 0; i < metaData.length; i++) {\r\n      const value = meta._parsed[i];\r\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\r\n        total += Math.abs(value);\r\n      }\r\n    }\r\n    return total;\r\n  }\r\n  calculateCircumference(value) {\r\n    const total = this._cachedMeta.total;\r\n    if (total > 0 && !isNaN(value)) {\r\n      return TAU * (Math.abs(value) / total);\r\n    }\r\n    return 0;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const chart = this.chart;\r\n    const labels = chart.data.labels || [];\r\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\r\n    return {\r\n      label: labels[index] || '',\r\n      value,\r\n    };\r\n  }\r\n  getMaxBorderWidth(arcs) {\r\n    let max = 0;\r\n    const chart = this.chart;\r\n    let i, ilen, meta, controller, options;\r\n    if (!arcs) {\r\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\r\n        if (chart.isDatasetVisible(i)) {\r\n          meta = chart.getDatasetMeta(i);\r\n          arcs = meta.data;\r\n          controller = meta.controller;\r\n          if (controller !== this) {\r\n            controller.configure();\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (!arcs) {\r\n      return 0;\r\n    }\r\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\r\n      options = controller.resolveDataElementOptions(i);\r\n      if (options.borderAlign !== 'inner') {\r\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n  getMaxOffset(arcs) {\r\n    let max = 0;\r\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\r\n      const options = this.resolveDataElementOptions(i);\r\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\r\n    }\r\n    return max;\r\n  }\r\n  _getRingWeightOffset(datasetIndex) {\r\n    let ringWeightOffset = 0;\r\n    for (let i = 0; i < datasetIndex; ++i) {\r\n      if (this.chart.isDatasetVisible(i)) {\r\n        ringWeightOffset += this._getRingWeight(i);\r\n      }\r\n    }\r\n    return ringWeightOffset;\r\n  }\r\n  _getRingWeight(datasetIndex) {\r\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\r\n  }\r\n  _getVisibleDatasetWeightTotal() {\r\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\r\n  }\r\n}\r\nDoughnutController.id = 'doughnut';\r\nDoughnutController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'arc',\r\n  animation: {\r\n    animateRotate: true,\r\n    animateScale: false\r\n  },\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\r\n    },\r\n  },\r\n  cutout: '50%',\r\n  rotation: 0,\r\n  circumference: 360,\r\n  radius: '100%',\r\n  spacing: 0,\r\n  indexAxis: 'r',\r\n};\r\nDoughnutController.descriptors = {\r\n  _scriptable: (name) => name !== 'spacing',\r\n  _indexable: (name) => name !== 'spacing',\r\n};\r\nDoughnutController.overrides = {\r\n  aspectRatio: 1,\r\n  plugins: {\r\n    legend: {\r\n      labels: {\r\n        generateLabels(chart) {\r\n          const data = chart.data;\r\n          if (data.labels.length && data.datasets.length) {\r\n            const {labels: {pointStyle}} = chart.legend.options;\r\n            return data.labels.map((label, i) => {\r\n              const meta = chart.getDatasetMeta(0);\r\n              const style = meta.controller.getStyle(i);\r\n              return {\r\n                text: label,\r\n                fillStyle: style.backgroundColor,\r\n                strokeStyle: style.borderColor,\r\n                lineWidth: style.borderWidth,\r\n                pointStyle: pointStyle,\r\n                hidden: !chart.getDataVisibility(i),\r\n                index: i\r\n              };\r\n            });\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      onClick(e, legendItem, legend) {\r\n        legend.chart.toggleDataVisibility(legendItem.index);\r\n        legend.chart.update();\r\n      }\r\n    },\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(tooltipItem) {\r\n          let dataLabel = tooltipItem.label;\r\n          const value = ': ' + tooltipItem.formattedValue;\r\n          if (isArray(dataLabel)) {\r\n            dataLabel = dataLabel.slice();\r\n            dataLabel[0] += value;\r\n          } else {\r\n            dataLabel += value;\r\n          }\r\n          return dataLabel;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nclass LineController extends DatasetController {\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    super.initialize();\r\n  }\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    const {dataset: line, data: points = [], _dataset} = meta;\r\n    const animationsDisabled = this.chart._animationsDisabled;\r\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\r\n    this._drawStart = start;\r\n    this._drawCount = count;\r\n    if (scaleRangesChanged(meta)) {\r\n      start = 0;\r\n      count = points.length;\r\n    }\r\n    line._datasetIndex = this.index;\r\n    line._decimated = !!_dataset._decimated;\r\n    line.points = points;\r\n    const options = this.resolveDatasetElementOptions(mode);\r\n    if (!this.options.showLine) {\r\n      options.borderWidth = 0;\r\n    }\r\n    options.segment = this.options.segment;\r\n    this.updateElement(line, undefined, {\r\n      animated: !animationsDisabled,\r\n      options\r\n    }, mode);\r\n    this.updateElements(points, start, count, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const {iScale, vScale, _stacked} = this._cachedMeta;\r\n    const firstOpts = this.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = this.getSharedOptions(firstOpts);\r\n    const includeOptions = this.includeOptions(mode, sharedOptions);\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    const spanGaps = this.options.spanGaps;\r\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\r\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\r\n    let prevParsed = start > 0 && this.getParsed(start - 1);\r\n    for (let i = start; i < start + count; ++i) {\r\n      const point = points[i];\r\n      const parsed = this.getParsed(i);\r\n      const properties = directUpdate ? point : {};\r\n      const nullData = isNullOrUndef(parsed[vAxis]);\r\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\r\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\r\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\r\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\r\n      properties.parsed = parsed;\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n      }\r\n      if (!directUpdate) {\r\n        this.updateElement(point, i, properties, mode);\r\n      }\r\n      prevParsed = parsed;\r\n    }\r\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n  }\r\n  getMaxOverflow() {\r\n    const meta = this._cachedMeta;\r\n    const dataset = meta.dataset;\r\n    const border = dataset.options && dataset.options.borderWidth || 0;\r\n    const data = meta.data || [];\r\n    if (!data.length) {\r\n      return border;\r\n    }\r\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\r\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\r\n    return Math.max(border, firstPoint, lastPoint) / 2;\r\n  }\r\n  draw() {\r\n    const meta = this._cachedMeta;\r\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\r\n    super.draw();\r\n  }\r\n}\r\nLineController.id = 'line';\r\nLineController.defaults = {\r\n  datasetElementType: 'line',\r\n  dataElementType: 'point',\r\n  showLine: true,\r\n  spanGaps: false,\r\n};\r\nLineController.overrides = {\r\n  scales: {\r\n    _index_: {\r\n      type: 'category',\r\n    },\r\n    _value_: {\r\n      type: 'linear',\r\n    },\r\n  }\r\n};\r\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\r\n  const pointCount = points.length;\r\n  let start = 0;\r\n  let count = pointCount;\r\n  if (meta._sorted) {\r\n    const {iScale, _parsed} = meta;\r\n    const axis = iScale.axis;\r\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\r\n    if (minDefined) {\r\n      start = _limitValue(Math.min(\r\n        _lookupByKey(_parsed, iScale.axis, min).lo,\r\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\r\n      0, pointCount - 1);\r\n    }\r\n    if (maxDefined) {\r\n      count = _limitValue(Math.max(\r\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\r\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\r\n      start, pointCount) - start;\r\n    } else {\r\n      count = pointCount - start;\r\n    }\r\n  }\r\n  return {start, count};\r\n}\r\nfunction scaleRangesChanged(meta) {\r\n  const {xScale, yScale, _scaleRanges} = meta;\r\n  const newRanges = {\r\n    xmin: xScale.min,\r\n    xmax: xScale.max,\r\n    ymin: yScale.min,\r\n    ymax: yScale.max\r\n  };\r\n  if (!_scaleRanges) {\r\n    meta._scaleRanges = newRanges;\r\n    return true;\r\n  }\r\n  const changed = _scaleRanges.xmin !== xScale.min\r\n\t\t|| _scaleRanges.xmax !== xScale.max\r\n\t\t|| _scaleRanges.ymin !== yScale.min\r\n\t\t|| _scaleRanges.ymax !== yScale.max;\r\n  Object.assign(_scaleRanges, newRanges);\r\n  return changed;\r\n}\r\n\r\nclass PolarAreaController extends DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    super(chart, datasetIndex);\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const meta = this._cachedMeta;\r\n    const chart = this.chart;\r\n    const labels = chart.data.labels || [];\r\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\r\n    return {\r\n      label: labels[index] || '',\r\n      value,\r\n    };\r\n  }\r\n  update(mode) {\r\n    const arcs = this._cachedMeta.data;\r\n    this._updateRadius();\r\n    this.updateElements(arcs, 0, arcs.length, mode);\r\n  }\r\n  _updateRadius() {\r\n    const chart = this.chart;\r\n    const chartArea = chart.chartArea;\r\n    const opts = chart.options;\r\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\r\n    const outerRadius = Math.max(minSize / 2, 0);\r\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\r\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\r\n    this.outerRadius = outerRadius - (radiusLength * this.index);\r\n    this.innerRadius = this.outerRadius - radiusLength;\r\n  }\r\n  updateElements(arcs, start, count, mode) {\r\n    const reset = mode === 'reset';\r\n    const chart = this.chart;\r\n    const dataset = this.getDataset();\r\n    const opts = chart.options;\r\n    const animationOpts = opts.animation;\r\n    const scale = this._cachedMeta.rScale;\r\n    const centerX = scale.xCenter;\r\n    const centerY = scale.yCenter;\r\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\r\n    let angle = datasetStartAngle;\r\n    let i;\r\n    const defaultAngle = 360 / this.countVisibleElements();\r\n    for (i = 0; i < start; ++i) {\r\n      angle += this._computeAngle(i, mode, defaultAngle);\r\n    }\r\n    for (i = start; i < start + count; i++) {\r\n      const arc = arcs[i];\r\n      let startAngle = angle;\r\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\r\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\r\n      angle = endAngle;\r\n      if (reset) {\r\n        if (animationOpts.animateScale) {\r\n          outerRadius = 0;\r\n        }\r\n        if (animationOpts.animateRotate) {\r\n          startAngle = endAngle = datasetStartAngle;\r\n        }\r\n      }\r\n      const properties = {\r\n        x: centerX,\r\n        y: centerY,\r\n        innerRadius: 0,\r\n        outerRadius,\r\n        startAngle,\r\n        endAngle,\r\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\r\n      };\r\n      this.updateElement(arc, i, properties, mode);\r\n    }\r\n  }\r\n  countVisibleElements() {\r\n    const dataset = this.getDataset();\r\n    const meta = this._cachedMeta;\r\n    let count = 0;\r\n    meta.data.forEach((element, index) => {\r\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\r\n        count++;\r\n      }\r\n    });\r\n    return count;\r\n  }\r\n  _computeAngle(index, mode, defaultAngle) {\r\n    return this.chart.getDataVisibility(index)\r\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\r\n      : 0;\r\n  }\r\n}\r\nPolarAreaController.id = 'polarArea';\r\nPolarAreaController.defaults = {\r\n  dataElementType: 'arc',\r\n  animation: {\r\n    animateRotate: true,\r\n    animateScale: true\r\n  },\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\r\n    },\r\n  },\r\n  indexAxis: 'r',\r\n  startAngle: 0,\r\n};\r\nPolarAreaController.overrides = {\r\n  aspectRatio: 1,\r\n  plugins: {\r\n    legend: {\r\n      labels: {\r\n        generateLabels(chart) {\r\n          const data = chart.data;\r\n          if (data.labels.length && data.datasets.length) {\r\n            const {labels: {pointStyle}} = chart.legend.options;\r\n            return data.labels.map((label, i) => {\r\n              const meta = chart.getDatasetMeta(0);\r\n              const style = meta.controller.getStyle(i);\r\n              return {\r\n                text: label,\r\n                fillStyle: style.backgroundColor,\r\n                strokeStyle: style.borderColor,\r\n                lineWidth: style.borderWidth,\r\n                pointStyle: pointStyle,\r\n                hidden: !chart.getDataVisibility(i),\r\n                index: i\r\n              };\r\n            });\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      onClick(e, legendItem, legend) {\r\n        legend.chart.toggleDataVisibility(legendItem.index);\r\n        legend.chart.update();\r\n      }\r\n    },\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(context) {\r\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  scales: {\r\n    r: {\r\n      type: 'radialLinear',\r\n      angleLines: {\r\n        display: false\r\n      },\r\n      beginAtZero: true,\r\n      grid: {\r\n        circular: true\r\n      },\r\n      pointLabels: {\r\n        display: false\r\n      },\r\n      startAngle: 0\r\n    }\r\n  }\r\n};\r\n\r\nclass PieController extends DoughnutController {\r\n}\r\nPieController.id = 'pie';\r\nPieController.defaults = {\r\n  cutout: 0,\r\n  rotation: 0,\r\n  circumference: 360,\r\n  radius: '100%'\r\n};\r\n\r\nclass RadarController extends DatasetController {\r\n  getLabelAndValue(index) {\r\n    const vScale = this._cachedMeta.vScale;\r\n    const parsed = this.getParsed(index);\r\n    return {\r\n      label: vScale.getLabels()[index],\r\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\r\n    };\r\n  }\r\n  update(mode) {\r\n    const meta = this._cachedMeta;\r\n    const line = meta.dataset;\r\n    const points = meta.data || [];\r\n    const labels = meta.iScale.getLabels();\r\n    line.points = points;\r\n    if (mode !== 'resize') {\r\n      const options = this.resolveDatasetElementOptions(mode);\r\n      if (!this.options.showLine) {\r\n        options.borderWidth = 0;\r\n      }\r\n      const properties = {\r\n        _loop: true,\r\n        _fullLoop: labels.length === points.length,\r\n        options\r\n      };\r\n      this.updateElement(line, undefined, properties, mode);\r\n    }\r\n    this.updateElements(points, 0, points.length, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const dataset = this.getDataset();\r\n    const scale = this._cachedMeta.rScale;\r\n    const reset = mode === 'reset';\r\n    for (let i = start; i < start + count; i++) {\r\n      const point = points[i];\r\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\r\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\r\n      const x = reset ? scale.xCenter : pointPosition.x;\r\n      const y = reset ? scale.yCenter : pointPosition.y;\r\n      const properties = {\r\n        x,\r\n        y,\r\n        angle: pointPosition.angle,\r\n        skip: isNaN(x) || isNaN(y),\r\n        options\r\n      };\r\n      this.updateElement(point, i, properties, mode);\r\n    }\r\n  }\r\n}\r\nRadarController.id = 'radar';\r\nRadarController.defaults = {\r\n  datasetElementType: 'line',\r\n  dataElementType: 'point',\r\n  indexAxis: 'r',\r\n  showLine: true,\r\n  elements: {\r\n    line: {\r\n      fill: 'start'\r\n    }\r\n  },\r\n};\r\nRadarController.overrides = {\r\n  aspectRatio: 1,\r\n  scales: {\r\n    r: {\r\n      type: 'radialLinear',\r\n    }\r\n  }\r\n};\r\n\r\nclass ScatterController extends LineController {\r\n}\r\nScatterController.id = 'scatter';\r\nScatterController.defaults = {\r\n  showLine: false,\r\n  fill: false\r\n};\r\nScatterController.overrides = {\r\n  interaction: {\r\n    mode: 'point'\r\n  },\r\n  plugins: {\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(item) {\r\n          return '(' + item.label + ', ' + item.formattedValue + ')';\r\n        }\r\n      }\r\n    }\r\n  },\r\n  scales: {\r\n    x: {\r\n      type: 'linear'\r\n    },\r\n    y: {\r\n      type: 'linear'\r\n    }\r\n  }\r\n};\r\n\r\nvar controllers = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nBarController: BarController,\r\nBubbleController: BubbleController,\r\nDoughnutController: DoughnutController,\r\nLineController: LineController,\r\nPolarAreaController: PolarAreaController,\r\nPieController: PieController,\r\nRadarController: RadarController,\r\nScatterController: ScatterController\r\n});\r\n\r\nfunction abstract() {\r\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\r\n}\r\nclass DateAdapter {\r\n  constructor(options) {\r\n    this.options = options || {};\r\n  }\r\n  formats() {\r\n    return abstract();\r\n  }\r\n  parse(value, format) {\r\n    return abstract();\r\n  }\r\n  format(timestamp, format) {\r\n    return abstract();\r\n  }\r\n  add(timestamp, amount, unit) {\r\n    return abstract();\r\n  }\r\n  diff(a, b, unit) {\r\n    return abstract();\r\n  }\r\n  startOf(timestamp, unit, weekday) {\r\n    return abstract();\r\n  }\r\n  endOf(timestamp, unit) {\r\n    return abstract();\r\n  }\r\n}\r\nDateAdapter.override = function(members) {\r\n  Object.assign(DateAdapter.prototype, members);\r\n};\r\nvar adapters = {\r\n  _date: DateAdapter\r\n};\r\n\r\nfunction getRelativePosition(e, chart) {\r\n  if ('native' in e) {\r\n    return {\r\n      x: e.x,\r\n      y: e.y\r\n    };\r\n  }\r\n  return getRelativePosition$1(e, chart);\r\n}\r\nfunction evaluateAllVisibleItems(chart, handler) {\r\n  const metasets = chart.getSortedVisibleDatasetMetas();\r\n  let index, data, element;\r\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    ({index, data} = metasets[i]);\r\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\r\n      element = data[j];\r\n      if (!element.skip) {\r\n        handler(element, index, j);\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction binarySearch(metaset, axis, value, intersect) {\r\n  const {controller, data, _sorted} = metaset;\r\n  const iScale = controller._cachedMeta.iScale;\r\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\r\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\r\n    if (!intersect) {\r\n      return lookupMethod(data, axis, value);\r\n    } else if (controller._sharedOptions) {\r\n      const el = data[0];\r\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\r\n      if (range) {\r\n        const start = lookupMethod(data, axis, value - range);\r\n        const end = lookupMethod(data, axis, value + range);\r\n        return {lo: start.lo, hi: end.hi};\r\n      }\r\n    }\r\n  }\r\n  return {lo: 0, hi: data.length - 1};\r\n}\r\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\r\n  const metasets = chart.getSortedVisibleDatasetMetas();\r\n  const value = position[axis];\r\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    const {index, data} = metasets[i];\r\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\r\n    for (let j = lo; j <= hi; ++j) {\r\n      const element = data[j];\r\n      if (!element.skip) {\r\n        handler(element, index, j);\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction getDistanceMetricForAxis(axis) {\r\n  const useX = axis.indexOf('x') !== -1;\r\n  const useY = axis.indexOf('y') !== -1;\r\n  return function(pt1, pt2) {\r\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\r\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\r\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\r\n  };\r\n}\r\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\r\n  const items = [];\r\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\r\n    return items;\r\n  }\r\n  const evaluationFunc = function(element, datasetIndex, index) {\r\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  };\r\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\r\n  return items;\r\n}\r\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\r\n  const distanceMetric = getDistanceMetricForAxis(axis);\r\n  let minDistance = Number.POSITIVE_INFINITY;\r\n  let items = [];\r\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\r\n    return items;\r\n  }\r\n  const evaluationFunc = function(element, datasetIndex, index) {\r\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\r\n      return;\r\n    }\r\n    const center = element.getCenterPoint(useFinalPosition);\r\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\r\n      return;\r\n    }\r\n    const distance = distanceMetric(position, center);\r\n    if (distance < minDistance) {\r\n      items = [{element, datasetIndex, index}];\r\n      minDistance = distance;\r\n    } else if (distance === minDistance) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  };\r\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\r\n  return items;\r\n}\r\nfunction getAxisItems(chart, e, options, useFinalPosition) {\r\n  const position = getRelativePosition(e, chart);\r\n  const items = [];\r\n  const axis = options.axis;\r\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\r\n  let intersectsItem = false;\r\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\r\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\r\n      intersectsItem = true;\r\n    }\r\n  });\r\n  if (options.intersect && !intersectsItem) {\r\n    return [];\r\n  }\r\n  return items;\r\n}\r\nvar Interaction = {\r\n  modes: {\r\n    index(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'x';\r\n      const items = options.intersect\r\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\r\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\r\n      const elements = [];\r\n      if (!items.length) {\r\n        return [];\r\n      }\r\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\r\n        const index = items[0].index;\r\n        const element = meta.data[index];\r\n        if (element && !element.skip) {\r\n          elements.push({element, datasetIndex: meta.index, index});\r\n        }\r\n      });\r\n      return elements;\r\n    },\r\n    dataset(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      let items = options.intersect\r\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\r\n        getNearestItems(chart, position, axis, false, useFinalPosition);\r\n      if (items.length > 0) {\r\n        const datasetIndex = items[0].datasetIndex;\r\n        const data = chart.getDatasetMeta(datasetIndex).data;\r\n        items = [];\r\n        for (let i = 0; i < data.length; ++i) {\r\n          items.push({element: data[i], datasetIndex, index: i});\r\n        }\r\n      }\r\n      return items;\r\n    },\r\n    point(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      return getIntersectItems(chart, position, axis, useFinalPosition);\r\n    },\r\n    nearest(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\r\n    },\r\n    x(chart, e, options, useFinalPosition) {\r\n      options.axis = 'x';\r\n      return getAxisItems(chart, e, options, useFinalPosition);\r\n    },\r\n    y(chart, e, options, useFinalPosition) {\r\n      options.axis = 'y';\r\n      return getAxisItems(chart, e, options, useFinalPosition);\r\n    }\r\n  }\r\n};\r\n\r\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\r\nfunction filterByPosition(array, position) {\r\n  return array.filter(v => v.pos === position);\r\n}\r\nfunction filterDynamicPositionByAxis(array, axis) {\r\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\r\n}\r\nfunction sortByWeight(array, reverse) {\r\n  return array.sort((a, b) => {\r\n    const v0 = reverse ? b : a;\r\n    const v1 = reverse ? a : b;\r\n    return v0.weight === v1.weight ?\r\n      v0.index - v1.index :\r\n      v0.weight - v1.weight;\r\n  });\r\n}\r\nfunction wrapBoxes(boxes) {\r\n  const layoutBoxes = [];\r\n  let i, ilen, box, pos, stack, stackWeight;\r\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\r\n    box = boxes[i];\r\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\r\n    layoutBoxes.push({\r\n      index: i,\r\n      box,\r\n      pos,\r\n      horizontal: box.isHorizontal(),\r\n      weight: box.weight,\r\n      stack: stack && (pos + stack),\r\n      stackWeight\r\n    });\r\n  }\r\n  return layoutBoxes;\r\n}\r\nfunction buildStacks(layouts) {\r\n  const stacks = {};\r\n  for (const wrap of layouts) {\r\n    const {stack, pos, stackWeight} = wrap;\r\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\r\n      continue;\r\n    }\r\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\r\n    _stack.count++;\r\n    _stack.weight += stackWeight;\r\n  }\r\n  return stacks;\r\n}\r\nfunction setLayoutDims(layouts, params) {\r\n  const stacks = buildStacks(layouts);\r\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\r\n  let i, ilen, layout;\r\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\r\n    layout = layouts[i];\r\n    const {fullSize} = layout.box;\r\n    const stack = stacks[layout.stack];\r\n    const factor = stack && layout.stackWeight / stack.weight;\r\n    if (layout.horizontal) {\r\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\r\n      layout.height = hBoxMaxHeight;\r\n    } else {\r\n      layout.width = vBoxMaxWidth;\r\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\r\n    }\r\n  }\r\n  return stacks;\r\n}\r\nfunction buildLayoutBoxes(boxes) {\r\n  const layoutBoxes = wrapBoxes(boxes);\r\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\r\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\r\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\r\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\r\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\r\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\r\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\r\n  return {\r\n    fullSize,\r\n    leftAndTop: left.concat(top),\r\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\r\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\r\n    vertical: left.concat(right).concat(centerVertical),\r\n    horizontal: top.concat(bottom).concat(centerHorizontal)\r\n  };\r\n}\r\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\r\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\r\n}\r\nfunction updateMaxPadding(maxPadding, boxPadding) {\r\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\r\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\r\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\r\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\r\n}\r\nfunction updateDims(chartArea, params, layout, stacks) {\r\n  const {pos, box} = layout;\r\n  const maxPadding = chartArea.maxPadding;\r\n  if (!isObject(pos)) {\r\n    if (layout.size) {\r\n      chartArea[pos] -= layout.size;\r\n    }\r\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\r\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\r\n    layout.size = stack.size / stack.count;\r\n    chartArea[pos] += layout.size;\r\n  }\r\n  if (box.getPadding) {\r\n    updateMaxPadding(maxPadding, box.getPadding());\r\n  }\r\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\r\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\r\n  const widthChanged = newWidth !== chartArea.w;\r\n  const heightChanged = newHeight !== chartArea.h;\r\n  chartArea.w = newWidth;\r\n  chartArea.h = newHeight;\r\n  return layout.horizontal\r\n    ? {same: widthChanged, other: heightChanged}\r\n    : {same: heightChanged, other: widthChanged};\r\n}\r\nfunction handleMaxPadding(chartArea) {\r\n  const maxPadding = chartArea.maxPadding;\r\n  function updatePos(pos) {\r\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\r\n    chartArea[pos] += change;\r\n    return change;\r\n  }\r\n  chartArea.y += updatePos('top');\r\n  chartArea.x += updatePos('left');\r\n  updatePos('right');\r\n  updatePos('bottom');\r\n}\r\nfunction getMargins(horizontal, chartArea) {\r\n  const maxPadding = chartArea.maxPadding;\r\n  function marginForPositions(positions) {\r\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\r\n    positions.forEach((pos) => {\r\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\r\n    });\r\n    return margin;\r\n  }\r\n  return horizontal\r\n    ? marginForPositions(['left', 'right'])\r\n    : marginForPositions(['top', 'bottom']);\r\n}\r\nfunction fitBoxes(boxes, chartArea, params, stacks) {\r\n  const refitBoxes = [];\r\n  let i, ilen, layout, box, refit, changed;\r\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\r\n    layout = boxes[i];\r\n    box = layout.box;\r\n    box.update(\r\n      layout.width || chartArea.w,\r\n      layout.height || chartArea.h,\r\n      getMargins(layout.horizontal, chartArea)\r\n    );\r\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\r\n    refit |= same && refitBoxes.length;\r\n    changed = changed || other;\r\n    if (!box.fullSize) {\r\n      refitBoxes.push(layout);\r\n    }\r\n  }\r\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\r\n}\r\nfunction setBoxDims(box, left, top, width, height) {\r\n  box.top = top;\r\n  box.left = left;\r\n  box.right = left + width;\r\n  box.bottom = top + height;\r\n  box.width = width;\r\n  box.height = height;\r\n}\r\nfunction placeBoxes(boxes, chartArea, params, stacks) {\r\n  const userPadding = params.padding;\r\n  let {x, y} = chartArea;\r\n  for (const layout of boxes) {\r\n    const box = layout.box;\r\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\r\n    const weight = (layout.stackWeight / stack.weight) || 1;\r\n    if (layout.horizontal) {\r\n      const width = chartArea.w * weight;\r\n      const height = stack.size || box.height;\r\n      if (defined(stack.start)) {\r\n        y = stack.start;\r\n      }\r\n      if (box.fullSize) {\r\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\r\n      } else {\r\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\r\n      }\r\n      stack.start = y;\r\n      stack.placed += width;\r\n      y = box.bottom;\r\n    } else {\r\n      const height = chartArea.h * weight;\r\n      const width = stack.size || box.width;\r\n      if (defined(stack.start)) {\r\n        x = stack.start;\r\n      }\r\n      if (box.fullSize) {\r\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\r\n      } else {\r\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\r\n      }\r\n      stack.start = x;\r\n      stack.placed += height;\r\n      x = box.right;\r\n    }\r\n  }\r\n  chartArea.x = x;\r\n  chartArea.y = y;\r\n}\r\ndefaults.set('layout', {\r\n  padding: {\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    left: 0\r\n  }\r\n});\r\nvar layouts = {\r\n  addBox(chart, item) {\r\n    if (!chart.boxes) {\r\n      chart.boxes = [];\r\n    }\r\n    item.fullSize = item.fullSize || false;\r\n    item.position = item.position || 'top';\r\n    item.weight = item.weight || 0;\r\n    item._layers = item._layers || function() {\r\n      return [{\r\n        z: 0,\r\n        draw(chartArea) {\r\n          item.draw(chartArea);\r\n        }\r\n      }];\r\n    };\r\n    chart.boxes.push(item);\r\n  },\r\n  removeBox(chart, layoutItem) {\r\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\r\n    if (index !== -1) {\r\n      chart.boxes.splice(index, 1);\r\n    }\r\n  },\r\n  configure(chart, item, options) {\r\n    item.fullSize = options.fullSize;\r\n    item.position = options.position;\r\n    item.weight = options.weight;\r\n  },\r\n  update(chart, width, height, minPadding) {\r\n    if (!chart) {\r\n      return;\r\n    }\r\n    const padding = toPadding(chart.options.layout.padding);\r\n    const availableWidth = Math.max(width - padding.width, 0);\r\n    const availableHeight = Math.max(height - padding.height, 0);\r\n    const boxes = buildLayoutBoxes(chart.boxes);\r\n    const verticalBoxes = boxes.vertical;\r\n    const horizontalBoxes = boxes.horizontal;\r\n    each(chart.boxes, box => {\r\n      if (typeof box.beforeLayout === 'function') {\r\n        box.beforeLayout();\r\n      }\r\n    });\r\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\r\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\r\n    const params = Object.freeze({\r\n      outerWidth: width,\r\n      outerHeight: height,\r\n      padding,\r\n      availableWidth,\r\n      availableHeight,\r\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\r\n      hBoxMaxHeight: availableHeight / 2\r\n    });\r\n    const maxPadding = Object.assign({}, padding);\r\n    updateMaxPadding(maxPadding, toPadding(minPadding));\r\n    const chartArea = Object.assign({\r\n      maxPadding,\r\n      w: availableWidth,\r\n      h: availableHeight,\r\n      x: padding.left,\r\n      y: padding.top\r\n    }, padding);\r\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\r\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\r\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\r\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\r\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\r\n    }\r\n    handleMaxPadding(chartArea);\r\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\r\n    chartArea.x += chartArea.w;\r\n    chartArea.y += chartArea.h;\r\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\r\n    chart.chartArea = {\r\n      left: chartArea.left,\r\n      top: chartArea.top,\r\n      right: chartArea.left + chartArea.w,\r\n      bottom: chartArea.top + chartArea.h,\r\n      height: chartArea.h,\r\n      width: chartArea.w,\r\n    };\r\n    each(boxes.chartArea, (layout) => {\r\n      const box = layout.box;\r\n      Object.assign(box, chart.chartArea);\r\n      box.update(chartArea.w, chartArea.h);\r\n    });\r\n  }\r\n};\r\n\r\nclass BasePlatform {\r\n  acquireContext(canvas, aspectRatio) {}\r\n  releaseContext(context) {\r\n    return false;\r\n  }\r\n  addEventListener(chart, type, listener) {}\r\n  removeEventListener(chart, type, listener) {}\r\n  getDevicePixelRatio() {\r\n    return 1;\r\n  }\r\n  getMaximumSize(element, width, height, aspectRatio) {\r\n    width = Math.max(0, width || element.width);\r\n    height = height || element.height;\r\n    return {\r\n      width,\r\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\r\n    };\r\n  }\r\n  isAttached(canvas) {\r\n    return true;\r\n  }\r\n}\r\n\r\nclass BasicPlatform extends BasePlatform {\r\n  acquireContext(item) {\r\n    return item && item.getContext && item.getContext('2d') || null;\r\n  }\r\n}\r\n\r\nconst EXPANDO_KEY = '$chartjs';\r\nconst EVENT_TYPES = {\r\n  touchstart: 'mousedown',\r\n  touchmove: 'mousemove',\r\n  touchend: 'mouseup',\r\n  pointerenter: 'mouseenter',\r\n  pointerdown: 'mousedown',\r\n  pointermove: 'mousemove',\r\n  pointerup: 'mouseup',\r\n  pointerleave: 'mouseout',\r\n  pointerout: 'mouseout'\r\n};\r\nconst isNullOrEmpty = value => value === null || value === '';\r\nfunction initCanvas(canvas, aspectRatio) {\r\n  const style = canvas.style;\r\n  const renderHeight = canvas.getAttribute('height');\r\n  const renderWidth = canvas.getAttribute('width');\r\n  canvas[EXPANDO_KEY] = {\r\n    initial: {\r\n      height: renderHeight,\r\n      width: renderWidth,\r\n      style: {\r\n        display: style.display,\r\n        height: style.height,\r\n        width: style.width\r\n      }\r\n    }\r\n  };\r\n  style.display = style.display || 'block';\r\n  style.boxSizing = style.boxSizing || 'border-box';\r\n  if (isNullOrEmpty(renderWidth)) {\r\n    const displayWidth = readUsedSize(canvas, 'width');\r\n    if (displayWidth !== undefined) {\r\n      canvas.width = displayWidth;\r\n    }\r\n  }\r\n  if (isNullOrEmpty(renderHeight)) {\r\n    if (canvas.style.height === '') {\r\n      canvas.height = canvas.width / (aspectRatio || 2);\r\n    } else {\r\n      const displayHeight = readUsedSize(canvas, 'height');\r\n      if (displayHeight !== undefined) {\r\n        canvas.height = displayHeight;\r\n      }\r\n    }\r\n  }\r\n  return canvas;\r\n}\r\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\r\nfunction addListener(node, type, listener) {\r\n  node.addEventListener(type, listener, eventListenerOptions);\r\n}\r\nfunction removeListener(chart, type, listener) {\r\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\r\n}\r\nfunction fromNativeEvent(event, chart) {\r\n  const type = EVENT_TYPES[event.type] || event.type;\r\n  const {x, y} = getRelativePosition$1(event, chart);\r\n  return {\r\n    type,\r\n    chart,\r\n    native: event,\r\n    x: x !== undefined ? x : null,\r\n    y: y !== undefined ? y : null,\r\n  };\r\n}\r\nfunction createAttachObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const observer = new MutationObserver(entries => {\r\n    for (const entry of entries) {\r\n      for (const node of entry.addedNodes) {\r\n        if (node === canvas || node.contains(canvas)) {\r\n          return listener();\r\n        }\r\n      }\r\n    }\r\n  });\r\n  observer.observe(document, {childList: true, subtree: true});\r\n  return observer;\r\n}\r\nfunction createDetachObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const observer = new MutationObserver(entries => {\r\n    for (const entry of entries) {\r\n      for (const node of entry.removedNodes) {\r\n        if (node === canvas || node.contains(canvas)) {\r\n          return listener();\r\n        }\r\n      }\r\n    }\r\n  });\r\n  observer.observe(document, {childList: true, subtree: true});\r\n  return observer;\r\n}\r\nconst drpListeningCharts = new Map();\r\nlet oldDevicePixelRatio = 0;\r\nfunction onWindowResize() {\r\n  const dpr = window.devicePixelRatio;\r\n  if (dpr === oldDevicePixelRatio) {\r\n    return;\r\n  }\r\n  oldDevicePixelRatio = dpr;\r\n  drpListeningCharts.forEach((resize, chart) => {\r\n    if (chart.currentDevicePixelRatio !== dpr) {\r\n      resize();\r\n    }\r\n  });\r\n}\r\nfunction listenDevicePixelRatioChanges(chart, resize) {\r\n  if (!drpListeningCharts.size) {\r\n    window.addEventListener('resize', onWindowResize);\r\n  }\r\n  drpListeningCharts.set(chart, resize);\r\n}\r\nfunction unlistenDevicePixelRatioChanges(chart) {\r\n  drpListeningCharts.delete(chart);\r\n  if (!drpListeningCharts.size) {\r\n    window.removeEventListener('resize', onWindowResize);\r\n  }\r\n}\r\nfunction createResizeObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const container = canvas && _getParentNode(canvas);\r\n  if (!container) {\r\n    return;\r\n  }\r\n  const resize = throttled((width, height) => {\r\n    const w = container.clientWidth;\r\n    listener(width, height);\r\n    if (w < container.clientWidth) {\r\n      listener();\r\n    }\r\n  }, window);\r\n  const observer = new ResizeObserver(entries => {\r\n    const entry = entries[0];\r\n    const width = entry.contentRect.width;\r\n    const height = entry.contentRect.height;\r\n    if (width === 0 && height === 0) {\r\n      return;\r\n    }\r\n    resize(width, height);\r\n  });\r\n  observer.observe(container);\r\n  listenDevicePixelRatioChanges(chart, resize);\r\n  return observer;\r\n}\r\nfunction releaseObserver(chart, type, observer) {\r\n  if (observer) {\r\n    observer.disconnect();\r\n  }\r\n  if (type === 'resize') {\r\n    unlistenDevicePixelRatioChanges(chart);\r\n  }\r\n}\r\nfunction createProxyAndListen(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const proxy = throttled((event) => {\r\n    if (chart.ctx !== null) {\r\n      listener(fromNativeEvent(event, chart));\r\n    }\r\n  }, chart, (args) => {\r\n    const event = args[0];\r\n    return [event, event.offsetX, event.offsetY];\r\n  });\r\n  addListener(canvas, type, proxy);\r\n  return proxy;\r\n}\r\nclass DomPlatform extends BasePlatform {\r\n  acquireContext(canvas, aspectRatio) {\r\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\r\n    if (context && context.canvas === canvas) {\r\n      initCanvas(canvas, aspectRatio);\r\n      return context;\r\n    }\r\n    return null;\r\n  }\r\n  releaseContext(context) {\r\n    const canvas = context.canvas;\r\n    if (!canvas[EXPANDO_KEY]) {\r\n      return false;\r\n    }\r\n    const initial = canvas[EXPANDO_KEY].initial;\r\n    ['height', 'width'].forEach((prop) => {\r\n      const value = initial[prop];\r\n      if (isNullOrUndef(value)) {\r\n        canvas.removeAttribute(prop);\r\n      } else {\r\n        canvas.setAttribute(prop, value);\r\n      }\r\n    });\r\n    const style = initial.style || {};\r\n    Object.keys(style).forEach((key) => {\r\n      canvas.style[key] = style[key];\r\n    });\r\n    canvas.width = canvas.width;\r\n    delete canvas[EXPANDO_KEY];\r\n    return true;\r\n  }\r\n  addEventListener(chart, type, listener) {\r\n    this.removeEventListener(chart, type);\r\n    const proxies = chart.$proxies || (chart.$proxies = {});\r\n    const handlers = {\r\n      attach: createAttachObserver,\r\n      detach: createDetachObserver,\r\n      resize: createResizeObserver\r\n    };\r\n    const handler = handlers[type] || createProxyAndListen;\r\n    proxies[type] = handler(chart, type, listener);\r\n  }\r\n  removeEventListener(chart, type) {\r\n    const proxies = chart.$proxies || (chart.$proxies = {});\r\n    const proxy = proxies[type];\r\n    if (!proxy) {\r\n      return;\r\n    }\r\n    const handlers = {\r\n      attach: releaseObserver,\r\n      detach: releaseObserver,\r\n      resize: releaseObserver\r\n    };\r\n    const handler = handlers[type] || removeListener;\r\n    handler(chart, type, proxy);\r\n    proxies[type] = undefined;\r\n  }\r\n  getDevicePixelRatio() {\r\n    return window.devicePixelRatio;\r\n  }\r\n  getMaximumSize(canvas, width, height, aspectRatio) {\r\n    return getMaximumSize(canvas, width, height, aspectRatio);\r\n  }\r\n  isAttached(canvas) {\r\n    const container = _getParentNode(canvas);\r\n    return !!(container && container.isConnected);\r\n  }\r\n}\r\n\r\nfunction _detectPlatform(canvas) {\r\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\r\n    return BasicPlatform;\r\n  }\r\n  return DomPlatform;\r\n}\r\n\r\nclass Element {\r\n  constructor() {\r\n    this.x = undefined;\r\n    this.y = undefined;\r\n    this.active = false;\r\n    this.options = undefined;\r\n    this.$animations = undefined;\r\n  }\r\n  tooltipPosition(useFinalPosition) {\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return {x, y};\r\n  }\r\n  hasValue() {\r\n    return isNumber(this.x) && isNumber(this.y);\r\n  }\r\n  getProps(props, final) {\r\n    const anims = this.$animations;\r\n    if (!final || !anims) {\r\n      return this;\r\n    }\r\n    const ret = {};\r\n    props.forEach(prop => {\r\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\r\n    });\r\n    return ret;\r\n  }\r\n}\r\nElement.defaults = {};\r\nElement.defaultRoutes = undefined;\r\n\r\nconst formatters = {\r\n  values(value) {\r\n    return isArray(value) ? value : '' + value;\r\n  },\r\n  numeric(tickValue, index, ticks) {\r\n    if (tickValue === 0) {\r\n      return '0';\r\n    }\r\n    const locale = this.chart.options.locale;\r\n    let notation;\r\n    let delta = tickValue;\r\n    if (ticks.length > 1) {\r\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\r\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\r\n        notation = 'scientific';\r\n      }\r\n      delta = calculateDelta(tickValue, ticks);\r\n    }\r\n    const logDelta = log10(Math.abs(delta));\r\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\r\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\r\n    Object.assign(options, this.options.ticks.format);\r\n    return formatNumber(tickValue, locale, options);\r\n  },\r\n  logarithmic(tickValue, index, ticks) {\r\n    if (tickValue === 0) {\r\n      return '0';\r\n    }\r\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\r\n    if (remain === 1 || remain === 2 || remain === 5) {\r\n      return formatters.numeric.call(this, tickValue, index, ticks);\r\n    }\r\n    return '';\r\n  }\r\n};\r\nfunction calculateDelta(tickValue, ticks) {\r\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\r\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\r\n    delta = tickValue - Math.floor(tickValue);\r\n  }\r\n  return delta;\r\n}\r\nvar Ticks = {formatters};\r\n\r\ndefaults.set('scale', {\r\n  display: true,\r\n  offset: false,\r\n  reverse: false,\r\n  beginAtZero: false,\r\n  bounds: 'ticks',\r\n  grace: 0,\r\n  grid: {\r\n    display: true,\r\n    lineWidth: 1,\r\n    drawBorder: true,\r\n    drawOnChartArea: true,\r\n    drawTicks: true,\r\n    tickLength: 8,\r\n    tickWidth: (_ctx, options) => options.lineWidth,\r\n    tickColor: (_ctx, options) => options.color,\r\n    offset: false,\r\n    borderDash: [],\r\n    borderDashOffset: 0.0,\r\n    borderWidth: 1\r\n  },\r\n  title: {\r\n    display: false,\r\n    text: '',\r\n    padding: {\r\n      top: 4,\r\n      bottom: 4\r\n    }\r\n  },\r\n  ticks: {\r\n    minRotation: 0,\r\n    maxRotation: 50,\r\n    mirror: false,\r\n    textStrokeWidth: 0,\r\n    textStrokeColor: '',\r\n    padding: 3,\r\n    display: true,\r\n    autoSkip: true,\r\n    autoSkipPadding: 3,\r\n    labelOffset: 0,\r\n    callback: Ticks.formatters.values,\r\n    minor: {},\r\n    major: {},\r\n    align: 'center',\r\n    crossAlign: 'near',\r\n    showLabelBackdrop: false,\r\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\r\n    backdropPadding: 2,\r\n  }\r\n});\r\ndefaults.route('scale.ticks', 'color', '', 'color');\r\ndefaults.route('scale.grid', 'color', '', 'borderColor');\r\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\r\ndefaults.route('scale.title', 'color', '', 'color');\r\ndefaults.describe('scale', {\r\n  _fallback: false,\r\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\r\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\r\n});\r\ndefaults.describe('scales', {\r\n  _fallback: 'scale',\r\n});\r\ndefaults.describe('scale.ticks', {\r\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\r\n  _indexable: (name) => name !== 'backdropPadding',\r\n});\r\n\r\nfunction autoSkip(scale, ticks) {\r\n  const tickOpts = scale.options.ticks;\r\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\r\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\r\n  const numMajorIndices = majorIndices.length;\r\n  const first = majorIndices[0];\r\n  const last = majorIndices[numMajorIndices - 1];\r\n  const newTicks = [];\r\n  if (numMajorIndices > ticksLimit) {\r\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\r\n    return newTicks;\r\n  }\r\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\r\n  if (numMajorIndices > 0) {\r\n    let i, ilen;\r\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\r\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\r\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\r\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\r\n    }\r\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\r\n    return newTicks;\r\n  }\r\n  skip(ticks, newTicks, spacing);\r\n  return newTicks;\r\n}\r\nfunction determineMaxTicks(scale) {\r\n  const offset = scale.options.offset;\r\n  const tickLength = scale._tickSize();\r\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\r\n  const maxChart = scale._maxLength / tickLength;\r\n  return Math.floor(Math.min(maxScale, maxChart));\r\n}\r\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\r\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\r\n  const spacing = ticks.length / ticksLimit;\r\n  if (!evenMajorSpacing) {\r\n    return Math.max(spacing, 1);\r\n  }\r\n  const factors = _factorize(evenMajorSpacing);\r\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\r\n    const factor = factors[i];\r\n    if (factor > spacing) {\r\n      return factor;\r\n    }\r\n  }\r\n  return Math.max(spacing, 1);\r\n}\r\nfunction getMajorIndices(ticks) {\r\n  const result = [];\r\n  let i, ilen;\r\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n    if (ticks[i].major) {\r\n      result.push(i);\r\n    }\r\n  }\r\n  return result;\r\n}\r\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\r\n  let count = 0;\r\n  let next = majorIndices[0];\r\n  let i;\r\n  spacing = Math.ceil(spacing);\r\n  for (i = 0; i < ticks.length; i++) {\r\n    if (i === next) {\r\n      newTicks.push(ticks[i]);\r\n      count++;\r\n      next = majorIndices[count * spacing];\r\n    }\r\n  }\r\n}\r\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\r\n  const start = valueOrDefault(majorStart, 0);\r\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\r\n  let count = 0;\r\n  let length, i, next;\r\n  spacing = Math.ceil(spacing);\r\n  if (majorEnd) {\r\n    length = majorEnd - majorStart;\r\n    spacing = length / Math.floor(length / spacing);\r\n  }\r\n  next = start;\r\n  while (next < 0) {\r\n    count++;\r\n    next = Math.round(start + count * spacing);\r\n  }\r\n  for (i = Math.max(start, 0); i < end; i++) {\r\n    if (i === next) {\r\n      newTicks.push(ticks[i]);\r\n      count++;\r\n      next = Math.round(start + count * spacing);\r\n    }\r\n  }\r\n}\r\nfunction getEvenSpacing(arr) {\r\n  const len = arr.length;\r\n  let i, diff;\r\n  if (len < 2) {\r\n    return false;\r\n  }\r\n  for (diff = arr[0], i = 1; i < len; ++i) {\r\n    if (arr[i] - arr[i - 1] !== diff) {\r\n      return false;\r\n    }\r\n  }\r\n  return diff;\r\n}\r\n\r\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\r\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\r\nfunction sample(arr, numItems) {\r\n  const result = [];\r\n  const increment = arr.length / numItems;\r\n  const len = arr.length;\r\n  let i = 0;\r\n  for (; i < len; i += increment) {\r\n    result.push(arr[Math.floor(i)]);\r\n  }\r\n  return result;\r\n}\r\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\r\n  const length = scale.ticks.length;\r\n  const validIndex = Math.min(index, length - 1);\r\n  const start = scale._startPixel;\r\n  const end = scale._endPixel;\r\n  const epsilon = 1e-6;\r\n  let lineValue = scale.getPixelForTick(validIndex);\r\n  let offset;\r\n  if (offsetGridLines) {\r\n    if (length === 1) {\r\n      offset = Math.max(lineValue - start, end - lineValue);\r\n    } else if (index === 0) {\r\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\r\n    } else {\r\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\r\n    }\r\n    lineValue += validIndex < index ? offset : -offset;\r\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\r\n      return;\r\n    }\r\n  }\r\n  return lineValue;\r\n}\r\nfunction garbageCollect(caches, length) {\r\n  each(caches, (cache) => {\r\n    const gc = cache.gc;\r\n    const gcLen = gc.length / 2;\r\n    let i;\r\n    if (gcLen > length) {\r\n      for (i = 0; i < gcLen; ++i) {\r\n        delete cache.data[gc[i]];\r\n      }\r\n      gc.splice(0, gcLen);\r\n    }\r\n  });\r\n}\r\nfunction getTickMarkLength(options) {\r\n  return options.drawTicks ? options.tickLength : 0;\r\n}\r\nfunction getTitleHeight(options, fallback) {\r\n  if (!options.display) {\r\n    return 0;\r\n  }\r\n  const font = toFont(options.font, fallback);\r\n  const padding = toPadding(options.padding);\r\n  const lines = isArray(options.text) ? options.text.length : 1;\r\n  return (lines * font.lineHeight) + padding.height;\r\n}\r\nfunction createScaleContext(parent, scale) {\r\n  return Object.assign(Object.create(parent), {\r\n    scale,\r\n    type: 'scale'\r\n  });\r\n}\r\nfunction createTickContext(parent, index, tick) {\r\n  return Object.assign(Object.create(parent), {\r\n    tick,\r\n    index,\r\n    type: 'tick'\r\n  });\r\n}\r\nfunction titleAlign(align, position, reverse) {\r\n  let ret = _toLeftRightCenter(align);\r\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\r\n    ret = reverseAlign(ret);\r\n  }\r\n  return ret;\r\n}\r\nfunction titleArgs(scale, offset, position, align) {\r\n  const {top, left, bottom, right, chart} = scale;\r\n  const {chartArea, scales} = chart;\r\n  let rotation = 0;\r\n  let maxWidth, titleX, titleY;\r\n  const height = bottom - top;\r\n  const width = right - left;\r\n  if (scale.isHorizontal()) {\r\n    titleX = _alignStartEnd(align, left, right);\r\n    if (isObject(position)) {\r\n      const positionAxisID = Object.keys(position)[0];\r\n      const value = position[positionAxisID];\r\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\r\n    } else if (position === 'center') {\r\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\r\n    } else {\r\n      titleY = offsetFromEdge(scale, position, offset);\r\n    }\r\n    maxWidth = right - left;\r\n  } else {\r\n    if (isObject(position)) {\r\n      const positionAxisID = Object.keys(position)[0];\r\n      const value = position[positionAxisID];\r\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\r\n    } else if (position === 'center') {\r\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\r\n    } else {\r\n      titleX = offsetFromEdge(scale, position, offset);\r\n    }\r\n    titleY = _alignStartEnd(align, bottom, top);\r\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\r\n  }\r\n  return {titleX, titleY, maxWidth, rotation};\r\n}\r\nclass Scale extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.id = cfg.id;\r\n    this.type = cfg.type;\r\n    this.options = undefined;\r\n    this.ctx = cfg.ctx;\r\n    this.chart = cfg.chart;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    this._margins = {\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0\r\n    };\r\n    this.maxWidth = undefined;\r\n    this.maxHeight = undefined;\r\n    this.paddingTop = undefined;\r\n    this.paddingBottom = undefined;\r\n    this.paddingLeft = undefined;\r\n    this.paddingRight = undefined;\r\n    this.axis = undefined;\r\n    this.labelRotation = undefined;\r\n    this.min = undefined;\r\n    this.max = undefined;\r\n    this._range = undefined;\r\n    this.ticks = [];\r\n    this._gridLineItems = null;\r\n    this._labelItems = null;\r\n    this._labelSizes = null;\r\n    this._length = 0;\r\n    this._maxLength = 0;\r\n    this._longestTextCache = {};\r\n    this._startPixel = undefined;\r\n    this._endPixel = undefined;\r\n    this._reversePixels = false;\r\n    this._userMax = undefined;\r\n    this._userMin = undefined;\r\n    this._suggestedMax = undefined;\r\n    this._suggestedMin = undefined;\r\n    this._ticksLength = 0;\r\n    this._borderValue = 0;\r\n    this._cache = {};\r\n    this._dataLimitsCached = false;\r\n    this.$context = undefined;\r\n  }\r\n  init(options) {\r\n    this.options = options.setContext(this.getContext());\r\n    this.axis = options.axis;\r\n    this._userMin = this.parse(options.min);\r\n    this._userMax = this.parse(options.max);\r\n    this._suggestedMin = this.parse(options.suggestedMin);\r\n    this._suggestedMax = this.parse(options.suggestedMax);\r\n  }\r\n  parse(raw, index) {\r\n    return raw;\r\n  }\r\n  getUserBounds() {\r\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\r\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\r\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\r\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\r\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\r\n    return {\r\n      min: finiteOrDefault(_userMin, _suggestedMin),\r\n      max: finiteOrDefault(_userMax, _suggestedMax),\r\n      minDefined: isNumberFinite(_userMin),\r\n      maxDefined: isNumberFinite(_userMax)\r\n    };\r\n  }\r\n  getMinMax(canStack) {\r\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\r\n    let range;\r\n    if (minDefined && maxDefined) {\r\n      return {min, max};\r\n    }\r\n    const metas = this.getMatchingVisibleMetas();\r\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      range = metas[i].controller.getMinMax(this, canStack);\r\n      if (!minDefined) {\r\n        min = Math.min(min, range.min);\r\n      }\r\n      if (!maxDefined) {\r\n        max = Math.max(max, range.max);\r\n      }\r\n    }\r\n    return {\r\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\r\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\r\n    };\r\n  }\r\n  getPadding() {\r\n    return {\r\n      left: this.paddingLeft || 0,\r\n      top: this.paddingTop || 0,\r\n      right: this.paddingRight || 0,\r\n      bottom: this.paddingBottom || 0\r\n    };\r\n  }\r\n  getTicks() {\r\n    return this.ticks;\r\n  }\r\n  getLabels() {\r\n    const data = this.chart.data;\r\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\r\n  }\r\n  beforeLayout() {\r\n    this._cache = {};\r\n    this._dataLimitsCached = false;\r\n  }\r\n  beforeUpdate() {\r\n    callback(this.options.beforeUpdate, [this]);\r\n  }\r\n  update(maxWidth, maxHeight, margins) {\r\n    const tickOpts = this.options.ticks;\r\n    const sampleSize = tickOpts.sampleSize;\r\n    this.beforeUpdate();\r\n    this.maxWidth = maxWidth;\r\n    this.maxHeight = maxHeight;\r\n    this._margins = margins = Object.assign({\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0\r\n    }, margins);\r\n    this.ticks = null;\r\n    this._labelSizes = null;\r\n    this._gridLineItems = null;\r\n    this._labelItems = null;\r\n    this.beforeSetDimensions();\r\n    this.setDimensions();\r\n    this.afterSetDimensions();\r\n    this._maxLength = this.isHorizontal()\r\n      ? this.width + margins.left + margins.right\r\n      : this.height + margins.top + margins.bottom;\r\n    if (!this._dataLimitsCached) {\r\n      this.beforeDataLimits();\r\n      this.determineDataLimits();\r\n      this.afterDataLimits();\r\n      this._range = _addGrace(this, this.options.grace);\r\n      this._dataLimitsCached = true;\r\n    }\r\n    this.beforeBuildTicks();\r\n    this.ticks = this.buildTicks() || [];\r\n    this.afterBuildTicks();\r\n    const samplingEnabled = sampleSize < this.ticks.length;\r\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\r\n    this.configure();\r\n    this.beforeCalculateLabelRotation();\r\n    this.calculateLabelRotation();\r\n    this.afterCalculateLabelRotation();\r\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\r\n      this.ticks = autoSkip(this, this.ticks);\r\n      this._labelSizes = null;\r\n    }\r\n    if (samplingEnabled) {\r\n      this._convertTicksToLabels(this.ticks);\r\n    }\r\n    this.beforeFit();\r\n    this.fit();\r\n    this.afterFit();\r\n    this.afterUpdate();\r\n  }\r\n  configure() {\r\n    let reversePixels = this.options.reverse;\r\n    let startPixel, endPixel;\r\n    if (this.isHorizontal()) {\r\n      startPixel = this.left;\r\n      endPixel = this.right;\r\n    } else {\r\n      startPixel = this.top;\r\n      endPixel = this.bottom;\r\n      reversePixels = !reversePixels;\r\n    }\r\n    this._startPixel = startPixel;\r\n    this._endPixel = endPixel;\r\n    this._reversePixels = reversePixels;\r\n    this._length = endPixel - startPixel;\r\n    this._alignToPixels = this.options.alignToPixels;\r\n  }\r\n  afterUpdate() {\r\n    callback(this.options.afterUpdate, [this]);\r\n  }\r\n  beforeSetDimensions() {\r\n    callback(this.options.beforeSetDimensions, [this]);\r\n  }\r\n  setDimensions() {\r\n    if (this.isHorizontal()) {\r\n      this.width = this.maxWidth;\r\n      this.left = 0;\r\n      this.right = this.width;\r\n    } else {\r\n      this.height = this.maxHeight;\r\n      this.top = 0;\r\n      this.bottom = this.height;\r\n    }\r\n    this.paddingLeft = 0;\r\n    this.paddingTop = 0;\r\n    this.paddingRight = 0;\r\n    this.paddingBottom = 0;\r\n  }\r\n  afterSetDimensions() {\r\n    callback(this.options.afterSetDimensions, [this]);\r\n  }\r\n  _callHooks(name) {\r\n    this.chart.notifyPlugins(name, this.getContext());\r\n    callback(this.options[name], [this]);\r\n  }\r\n  beforeDataLimits() {\r\n    this._callHooks('beforeDataLimits');\r\n  }\r\n  determineDataLimits() {}\r\n  afterDataLimits() {\r\n    this._callHooks('afterDataLimits');\r\n  }\r\n  beforeBuildTicks() {\r\n    this._callHooks('beforeBuildTicks');\r\n  }\r\n  buildTicks() {\r\n    return [];\r\n  }\r\n  afterBuildTicks() {\r\n    this._callHooks('afterBuildTicks');\r\n  }\r\n  beforeTickToLabelConversion() {\r\n    callback(this.options.beforeTickToLabelConversion, [this]);\r\n  }\r\n  generateTickLabels(ticks) {\r\n    const tickOpts = this.options.ticks;\r\n    let i, ilen, tick;\r\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n      tick = ticks[i];\r\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\r\n    }\r\n  }\r\n  afterTickToLabelConversion() {\r\n    callback(this.options.afterTickToLabelConversion, [this]);\r\n  }\r\n  beforeCalculateLabelRotation() {\r\n    callback(this.options.beforeCalculateLabelRotation, [this]);\r\n  }\r\n  calculateLabelRotation() {\r\n    const options = this.options;\r\n    const tickOpts = options.ticks;\r\n    const numTicks = this.ticks.length;\r\n    const minRotation = tickOpts.minRotation || 0;\r\n    const maxRotation = tickOpts.maxRotation;\r\n    let labelRotation = minRotation;\r\n    let tickWidth, maxHeight, maxLabelDiagonal;\r\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\r\n      this.labelRotation = minRotation;\r\n      return;\r\n    }\r\n    const labelSizes = this._getLabelSizes();\r\n    const maxLabelWidth = labelSizes.widest.width;\r\n    const maxLabelHeight = labelSizes.highest.height;\r\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\r\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\r\n    if (maxLabelWidth + 6 > tickWidth) {\r\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\r\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\r\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\r\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\r\n      labelRotation = toDegrees(Math.min(\r\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\r\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\r\n      ));\r\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\r\n    }\r\n    this.labelRotation = labelRotation;\r\n  }\r\n  afterCalculateLabelRotation() {\r\n    callback(this.options.afterCalculateLabelRotation, [this]);\r\n  }\r\n  beforeFit() {\r\n    callback(this.options.beforeFit, [this]);\r\n  }\r\n  fit() {\r\n    const minSize = {\r\n      width: 0,\r\n      height: 0\r\n    };\r\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\r\n    const display = this._isVisible();\r\n    const isHorizontal = this.isHorizontal();\r\n    if (display) {\r\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\r\n      if (isHorizontal) {\r\n        minSize.width = this.maxWidth;\r\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\r\n      } else {\r\n        minSize.height = this.maxHeight;\r\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\r\n      }\r\n      if (tickOpts.display && this.ticks.length) {\r\n        const {first, last, widest, highest} = this._getLabelSizes();\r\n        const tickPadding = tickOpts.padding * 2;\r\n        const angleRadians = toRadians(this.labelRotation);\r\n        const cos = Math.cos(angleRadians);\r\n        const sin = Math.sin(angleRadians);\r\n        if (isHorizontal) {\r\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\r\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\r\n        } else {\r\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\r\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\r\n        }\r\n        this._calculatePadding(first, last, sin, cos);\r\n      }\r\n    }\r\n    this._handleMargins();\r\n    if (isHorizontal) {\r\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\r\n      this.height = minSize.height;\r\n    } else {\r\n      this.width = minSize.width;\r\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\r\n    }\r\n  }\r\n  _calculatePadding(first, last, sin, cos) {\r\n    const {ticks: {align, padding}, position} = this.options;\r\n    const isRotated = this.labelRotation !== 0;\r\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\r\n    if (this.isHorizontal()) {\r\n      const offsetLeft = this.getPixelForTick(0) - this.left;\r\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\r\n      let paddingLeft = 0;\r\n      let paddingRight = 0;\r\n      if (isRotated) {\r\n        if (labelsBelowTicks) {\r\n          paddingLeft = cos * first.width;\r\n          paddingRight = sin * last.height;\r\n        } else {\r\n          paddingLeft = sin * first.height;\r\n          paddingRight = cos * last.width;\r\n        }\r\n      } else if (align === 'start') {\r\n        paddingRight = last.width;\r\n      } else if (align === 'end') {\r\n        paddingLeft = first.width;\r\n      } else {\r\n        paddingLeft = first.width / 2;\r\n        paddingRight = last.width / 2;\r\n      }\r\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\r\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\r\n    } else {\r\n      let paddingTop = last.height / 2;\r\n      let paddingBottom = first.height / 2;\r\n      if (align === 'start') {\r\n        paddingTop = 0;\r\n        paddingBottom = first.height;\r\n      } else if (align === 'end') {\r\n        paddingTop = last.height;\r\n        paddingBottom = 0;\r\n      }\r\n      this.paddingTop = paddingTop + padding;\r\n      this.paddingBottom = paddingBottom + padding;\r\n    }\r\n  }\r\n  _handleMargins() {\r\n    if (this._margins) {\r\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\r\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\r\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\r\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\r\n    }\r\n  }\r\n  afterFit() {\r\n    callback(this.options.afterFit, [this]);\r\n  }\r\n  isHorizontal() {\r\n    const {axis, position} = this.options;\r\n    return position === 'top' || position === 'bottom' || axis === 'x';\r\n  }\r\n  isFullSize() {\r\n    return this.options.fullSize;\r\n  }\r\n  _convertTicksToLabels(ticks) {\r\n    this.beforeTickToLabelConversion();\r\n    this.generateTickLabels(ticks);\r\n    let i, ilen;\r\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n      if (isNullOrUndef(ticks[i].label)) {\r\n        ticks.splice(i, 1);\r\n        ilen--;\r\n        i--;\r\n      }\r\n    }\r\n    this.afterTickToLabelConversion();\r\n  }\r\n  _getLabelSizes() {\r\n    let labelSizes = this._labelSizes;\r\n    if (!labelSizes) {\r\n      const sampleSize = this.options.ticks.sampleSize;\r\n      let ticks = this.ticks;\r\n      if (sampleSize < ticks.length) {\r\n        ticks = sample(ticks, sampleSize);\r\n      }\r\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\r\n    }\r\n    return labelSizes;\r\n  }\r\n  _computeLabelSizes(ticks, length) {\r\n    const {ctx, _longestTextCache: caches} = this;\r\n    const widths = [];\r\n    const heights = [];\r\n    let widestLabelSize = 0;\r\n    let highestLabelSize = 0;\r\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\r\n    for (i = 0; i < length; ++i) {\r\n      label = ticks[i].label;\r\n      tickFont = this._resolveTickFontOptions(i);\r\n      ctx.font = fontString = tickFont.string;\r\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\r\n      lineHeight = tickFont.lineHeight;\r\n      width = height = 0;\r\n      if (!isNullOrUndef(label) && !isArray(label)) {\r\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\r\n        height = lineHeight;\r\n      } else if (isArray(label)) {\r\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\r\n          nestedLabel = label[j];\r\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\r\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\r\n            height += lineHeight;\r\n          }\r\n        }\r\n      }\r\n      widths.push(width);\r\n      heights.push(height);\r\n      widestLabelSize = Math.max(width, widestLabelSize);\r\n      highestLabelSize = Math.max(height, highestLabelSize);\r\n    }\r\n    garbageCollect(caches, length);\r\n    const widest = widths.indexOf(widestLabelSize);\r\n    const highest = heights.indexOf(highestLabelSize);\r\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\r\n    return {\r\n      first: valueAt(0),\r\n      last: valueAt(length - 1),\r\n      widest: valueAt(widest),\r\n      highest: valueAt(highest),\r\n      widths,\r\n      heights,\r\n    };\r\n  }\r\n  getLabelForValue(value) {\r\n    return value;\r\n  }\r\n  getPixelForValue(value, index) {\r\n    return NaN;\r\n  }\r\n  getValueForPixel(pixel) {}\r\n  getPixelForTick(index) {\r\n    const ticks = this.ticks;\r\n    if (index < 0 || index > ticks.length - 1) {\r\n      return null;\r\n    }\r\n    return this.getPixelForValue(ticks[index].value);\r\n  }\r\n  getPixelForDecimal(decimal) {\r\n    if (this._reversePixels) {\r\n      decimal = 1 - decimal;\r\n    }\r\n    const pixel = this._startPixel + decimal * this._length;\r\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\r\n  }\r\n  getDecimalForPixel(pixel) {\r\n    const decimal = (pixel - this._startPixel) / this._length;\r\n    return this._reversePixels ? 1 - decimal : decimal;\r\n  }\r\n  getBasePixel() {\r\n    return this.getPixelForValue(this.getBaseValue());\r\n  }\r\n  getBaseValue() {\r\n    const {min, max} = this;\r\n    return min < 0 && max < 0 ? max :\r\n      min > 0 && max > 0 ? min :\r\n      0;\r\n  }\r\n  getContext(index) {\r\n    const ticks = this.ticks || [];\r\n    if (index >= 0 && index < ticks.length) {\r\n      const tick = ticks[index];\r\n      return tick.$context ||\r\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\r\n    }\r\n    return this.$context ||\r\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\r\n  }\r\n  _tickSize() {\r\n    const optionTicks = this.options.ticks;\r\n    const rot = toRadians(this.labelRotation);\r\n    const cos = Math.abs(Math.cos(rot));\r\n    const sin = Math.abs(Math.sin(rot));\r\n    const labelSizes = this._getLabelSizes();\r\n    const padding = optionTicks.autoSkipPadding || 0;\r\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\r\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\r\n    return this.isHorizontal()\r\n      ? h * cos > w * sin ? w / cos : h / sin\r\n      : h * sin < w * cos ? h / cos : w / sin;\r\n  }\r\n  _isVisible() {\r\n    const display = this.options.display;\r\n    if (display !== 'auto') {\r\n      return !!display;\r\n    }\r\n    return this.getMatchingVisibleMetas().length > 0;\r\n  }\r\n  _computeGridLineItems(chartArea) {\r\n    const axis = this.axis;\r\n    const chart = this.chart;\r\n    const options = this.options;\r\n    const {grid, position} = options;\r\n    const offset = grid.offset;\r\n    const isHorizontal = this.isHorizontal();\r\n    const ticks = this.ticks;\r\n    const ticksLength = ticks.length + (offset ? 1 : 0);\r\n    const tl = getTickMarkLength(grid);\r\n    const items = [];\r\n    const borderOpts = grid.setContext(this.getContext());\r\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\r\n    const axisHalfWidth = axisWidth / 2;\r\n    const alignBorderValue = function(pixel) {\r\n      return _alignPixel(chart, pixel, axisWidth);\r\n    };\r\n    let borderValue, i, lineValue, alignedLineValue;\r\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\r\n    if (position === 'top') {\r\n      borderValue = alignBorderValue(this.bottom);\r\n      ty1 = this.bottom - tl;\r\n      ty2 = borderValue - axisHalfWidth;\r\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\r\n      y2 = chartArea.bottom;\r\n    } else if (position === 'bottom') {\r\n      borderValue = alignBorderValue(this.top);\r\n      y1 = chartArea.top;\r\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\r\n      ty1 = borderValue + axisHalfWidth;\r\n      ty2 = this.top + tl;\r\n    } else if (position === 'left') {\r\n      borderValue = alignBorderValue(this.right);\r\n      tx1 = this.right - tl;\r\n      tx2 = borderValue - axisHalfWidth;\r\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\r\n      x2 = chartArea.right;\r\n    } else if (position === 'right') {\r\n      borderValue = alignBorderValue(this.left);\r\n      x1 = chartArea.left;\r\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\r\n      tx1 = borderValue + axisHalfWidth;\r\n      tx2 = this.left + tl;\r\n    } else if (axis === 'x') {\r\n      if (position === 'center') {\r\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\r\n      }\r\n      y1 = chartArea.top;\r\n      y2 = chartArea.bottom;\r\n      ty1 = borderValue + axisHalfWidth;\r\n      ty2 = ty1 + tl;\r\n    } else if (axis === 'y') {\r\n      if (position === 'center') {\r\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\r\n      }\r\n      tx1 = borderValue - axisHalfWidth;\r\n      tx2 = tx1 - tl;\r\n      x1 = chartArea.left;\r\n      x2 = chartArea.right;\r\n    }\r\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\r\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\r\n    for (i = 0; i < ticksLength; i += step) {\r\n      const optsAtIndex = grid.setContext(this.getContext(i));\r\n      const lineWidth = optsAtIndex.lineWidth;\r\n      const lineColor = optsAtIndex.color;\r\n      const borderDash = grid.borderDash || [];\r\n      const borderDashOffset = optsAtIndex.borderDashOffset;\r\n      const tickWidth = optsAtIndex.tickWidth;\r\n      const tickColor = optsAtIndex.tickColor;\r\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\r\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\r\n      lineValue = getPixelForGridLine(this, i, offset);\r\n      if (lineValue === undefined) {\r\n        continue;\r\n      }\r\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\r\n      if (isHorizontal) {\r\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\r\n      } else {\r\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\r\n      }\r\n      items.push({\r\n        tx1,\r\n        ty1,\r\n        tx2,\r\n        ty2,\r\n        x1,\r\n        y1,\r\n        x2,\r\n        y2,\r\n        width: lineWidth,\r\n        color: lineColor,\r\n        borderDash,\r\n        borderDashOffset,\r\n        tickWidth,\r\n        tickColor,\r\n        tickBorderDash,\r\n        tickBorderDashOffset,\r\n      });\r\n    }\r\n    this._ticksLength = ticksLength;\r\n    this._borderValue = borderValue;\r\n    return items;\r\n  }\r\n  _computeLabelItems(chartArea) {\r\n    const axis = this.axis;\r\n    const options = this.options;\r\n    const {position, ticks: optionTicks} = options;\r\n    const isHorizontal = this.isHorizontal();\r\n    const ticks = this.ticks;\r\n    const {align, crossAlign, padding, mirror} = optionTicks;\r\n    const tl = getTickMarkLength(options.grid);\r\n    const tickAndPadding = tl + padding;\r\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\r\n    const rotation = -toRadians(this.labelRotation);\r\n    const items = [];\r\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\r\n    let textBaseline = 'middle';\r\n    if (position === 'top') {\r\n      y = this.bottom - hTickAndPadding;\r\n      textAlign = this._getXAxisLabelAlignment();\r\n    } else if (position === 'bottom') {\r\n      y = this.top + hTickAndPadding;\r\n      textAlign = this._getXAxisLabelAlignment();\r\n    } else if (position === 'left') {\r\n      const ret = this._getYAxisLabelAlignment(tl);\r\n      textAlign = ret.textAlign;\r\n      x = ret.x;\r\n    } else if (position === 'right') {\r\n      const ret = this._getYAxisLabelAlignment(tl);\r\n      textAlign = ret.textAlign;\r\n      x = ret.x;\r\n    } else if (axis === 'x') {\r\n      if (position === 'center') {\r\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\r\n      }\r\n      textAlign = this._getXAxisLabelAlignment();\r\n    } else if (axis === 'y') {\r\n      if (position === 'center') {\r\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\r\n      }\r\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\r\n    }\r\n    if (axis === 'y') {\r\n      if (align === 'start') {\r\n        textBaseline = 'top';\r\n      } else if (align === 'end') {\r\n        textBaseline = 'bottom';\r\n      }\r\n    }\r\n    const labelSizes = this._getLabelSizes();\r\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n      tick = ticks[i];\r\n      label = tick.label;\r\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\r\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\r\n      font = this._resolveTickFontOptions(i);\r\n      lineHeight = font.lineHeight;\r\n      lineCount = isArray(label) ? label.length : 1;\r\n      const halfCount = lineCount / 2;\r\n      const color = optsAtIndex.color;\r\n      const strokeColor = optsAtIndex.textStrokeColor;\r\n      const strokeWidth = optsAtIndex.textStrokeWidth;\r\n      if (isHorizontal) {\r\n        x = pixel;\r\n        if (position === 'top') {\r\n          if (crossAlign === 'near' || rotation !== 0) {\r\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\r\n          } else if (crossAlign === 'center') {\r\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\r\n          } else {\r\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\r\n          }\r\n        } else {\r\n          if (crossAlign === 'near' || rotation !== 0) {\r\n            textOffset = lineHeight / 2;\r\n          } else if (crossAlign === 'center') {\r\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\r\n          } else {\r\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\r\n          }\r\n        }\r\n        if (mirror) {\r\n          textOffset *= -1;\r\n        }\r\n      } else {\r\n        y = pixel;\r\n        textOffset = (1 - lineCount) * lineHeight / 2;\r\n      }\r\n      let backdrop;\r\n      if (optsAtIndex.showLabelBackdrop) {\r\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\r\n        const height = labelSizes.heights[i];\r\n        const width = labelSizes.widths[i];\r\n        let top = y + textOffset - labelPadding.top;\r\n        let left = x - labelPadding.left;\r\n        switch (textBaseline) {\r\n        case 'middle':\r\n          top -= height / 2;\r\n          break;\r\n        case 'bottom':\r\n          top -= height;\r\n          break;\r\n        }\r\n        switch (textAlign) {\r\n        case 'center':\r\n          left -= width / 2;\r\n          break;\r\n        case 'right':\r\n          left -= width;\r\n          break;\r\n        }\r\n        backdrop = {\r\n          left,\r\n          top,\r\n          width: width + labelPadding.width,\r\n          height: height + labelPadding.height,\r\n          color: optsAtIndex.backdropColor,\r\n        };\r\n      }\r\n      items.push({\r\n        rotation,\r\n        label,\r\n        font,\r\n        color,\r\n        strokeColor,\r\n        strokeWidth,\r\n        textOffset,\r\n        textAlign,\r\n        textBaseline,\r\n        translation: [x, y],\r\n        backdrop,\r\n      });\r\n    }\r\n    return items;\r\n  }\r\n  _getXAxisLabelAlignment() {\r\n    const {position, ticks} = this.options;\r\n    const rotation = -toRadians(this.labelRotation);\r\n    if (rotation) {\r\n      return position === 'top' ? 'left' : 'right';\r\n    }\r\n    let align = 'center';\r\n    if (ticks.align === 'start') {\r\n      align = 'left';\r\n    } else if (ticks.align === 'end') {\r\n      align = 'right';\r\n    }\r\n    return align;\r\n  }\r\n  _getYAxisLabelAlignment(tl) {\r\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\r\n    const labelSizes = this._getLabelSizes();\r\n    const tickAndPadding = tl + padding;\r\n    const widest = labelSizes.widest.width;\r\n    let textAlign;\r\n    let x;\r\n    if (position === 'left') {\r\n      if (mirror) {\r\n        x = this.right + padding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'left';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x += (widest / 2);\r\n        } else {\r\n          textAlign = 'right';\r\n          x += widest;\r\n        }\r\n      } else {\r\n        x = this.right - tickAndPadding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'right';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x -= (widest / 2);\r\n        } else {\r\n          textAlign = 'left';\r\n          x = this.left;\r\n        }\r\n      }\r\n    } else if (position === 'right') {\r\n      if (mirror) {\r\n        x = this.left + padding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'right';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x -= (widest / 2);\r\n        } else {\r\n          textAlign = 'left';\r\n          x -= widest;\r\n        }\r\n      } else {\r\n        x = this.left + tickAndPadding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'left';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x += widest / 2;\r\n        } else {\r\n          textAlign = 'right';\r\n          x = this.right;\r\n        }\r\n      }\r\n    } else {\r\n      textAlign = 'right';\r\n    }\r\n    return {textAlign, x};\r\n  }\r\n  _computeLabelArea() {\r\n    if (this.options.ticks.mirror) {\r\n      return;\r\n    }\r\n    const chart = this.chart;\r\n    const position = this.options.position;\r\n    if (position === 'left' || position === 'right') {\r\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\r\n    } if (position === 'top' || position === 'bottom') {\r\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\r\n    }\r\n  }\r\n  drawBackground() {\r\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\r\n    if (backgroundColor) {\r\n      ctx.save();\r\n      ctx.fillStyle = backgroundColor;\r\n      ctx.fillRect(left, top, width, height);\r\n      ctx.restore();\r\n    }\r\n  }\r\n  getLineWidthForValue(value) {\r\n    const grid = this.options.grid;\r\n    if (!this._isVisible() || !grid.display) {\r\n      return 0;\r\n    }\r\n    const ticks = this.ticks;\r\n    const index = ticks.findIndex(t => t.value === value);\r\n    if (index >= 0) {\r\n      const opts = grid.setContext(this.getContext(index));\r\n      return opts.lineWidth;\r\n    }\r\n    return 0;\r\n  }\r\n  drawGrid(chartArea) {\r\n    const grid = this.options.grid;\r\n    const ctx = this.ctx;\r\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\r\n    let i, ilen;\r\n    const drawLine = (p1, p2, style) => {\r\n      if (!style.width || !style.color) {\r\n        return;\r\n      }\r\n      ctx.save();\r\n      ctx.lineWidth = style.width;\r\n      ctx.strokeStyle = style.color;\r\n      ctx.setLineDash(style.borderDash || []);\r\n      ctx.lineDashOffset = style.borderDashOffset;\r\n      ctx.beginPath();\r\n      ctx.moveTo(p1.x, p1.y);\r\n      ctx.lineTo(p2.x, p2.y);\r\n      ctx.stroke();\r\n      ctx.restore();\r\n    };\r\n    if (grid.display) {\r\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n        const item = items[i];\r\n        if (grid.drawOnChartArea) {\r\n          drawLine(\r\n            {x: item.x1, y: item.y1},\r\n            {x: item.x2, y: item.y2},\r\n            item\r\n          );\r\n        }\r\n        if (grid.drawTicks) {\r\n          drawLine(\r\n            {x: item.tx1, y: item.ty1},\r\n            {x: item.tx2, y: item.ty2},\r\n            {\r\n              color: item.tickColor,\r\n              width: item.tickWidth,\r\n              borderDash: item.tickBorderDash,\r\n              borderDashOffset: item.tickBorderDashOffset\r\n            }\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n  drawBorder() {\r\n    const {chart, ctx, options: {grid}} = this;\r\n    const borderOpts = grid.setContext(this.getContext());\r\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\r\n    if (!axisWidth) {\r\n      return;\r\n    }\r\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\r\n    const borderValue = this._borderValue;\r\n    let x1, x2, y1, y2;\r\n    if (this.isHorizontal()) {\r\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\r\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\r\n      y1 = y2 = borderValue;\r\n    } else {\r\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\r\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\r\n      x1 = x2 = borderValue;\r\n    }\r\n    ctx.save();\r\n    ctx.lineWidth = borderOpts.borderWidth;\r\n    ctx.strokeStyle = borderOpts.borderColor;\r\n    ctx.beginPath();\r\n    ctx.moveTo(x1, y1);\r\n    ctx.lineTo(x2, y2);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n  }\r\n  drawLabels(chartArea) {\r\n    const optionTicks = this.options.ticks;\r\n    if (!optionTicks.display) {\r\n      return;\r\n    }\r\n    const ctx = this.ctx;\r\n    const area = this._computeLabelArea();\r\n    if (area) {\r\n      clipArea(ctx, area);\r\n    }\r\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\r\n    let i, ilen;\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      const item = items[i];\r\n      const tickFont = item.font;\r\n      const label = item.label;\r\n      if (item.backdrop) {\r\n        ctx.fillStyle = item.backdrop.color;\r\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\r\n      }\r\n      let y = item.textOffset;\r\n      renderText(ctx, label, 0, y, tickFont, item);\r\n    }\r\n    if (area) {\r\n      unclipArea(ctx);\r\n    }\r\n  }\r\n  drawTitle() {\r\n    const {ctx, options: {position, title, reverse}} = this;\r\n    if (!title.display) {\r\n      return;\r\n    }\r\n    const font = toFont(title.font);\r\n    const padding = toPadding(title.padding);\r\n    const align = title.align;\r\n    let offset = font.lineHeight / 2;\r\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\r\n      offset += padding.bottom;\r\n      if (isArray(title.text)) {\r\n        offset += font.lineHeight * (title.text.length - 1);\r\n      }\r\n    } else {\r\n      offset += padding.top;\r\n    }\r\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\r\n    renderText(ctx, title.text, 0, 0, font, {\r\n      color: title.color,\r\n      maxWidth,\r\n      rotation,\r\n      textAlign: titleAlign(align, position, reverse),\r\n      textBaseline: 'middle',\r\n      translation: [titleX, titleY],\r\n    });\r\n  }\r\n  draw(chartArea) {\r\n    if (!this._isVisible()) {\r\n      return;\r\n    }\r\n    this.drawBackground();\r\n    this.drawGrid(chartArea);\r\n    this.drawBorder();\r\n    this.drawTitle();\r\n    this.drawLabels(chartArea);\r\n  }\r\n  _layers() {\r\n    const opts = this.options;\r\n    const tz = opts.ticks && opts.ticks.z || 0;\r\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\r\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\r\n      return [{\r\n        z: tz,\r\n        draw: (chartArea) => {\r\n          this.draw(chartArea);\r\n        }\r\n      }];\r\n    }\r\n    return [{\r\n      z: gz,\r\n      draw: (chartArea) => {\r\n        this.drawBackground();\r\n        this.drawGrid(chartArea);\r\n        this.drawTitle();\r\n      }\r\n    }, {\r\n      z: gz + 1,\r\n      draw: () => {\r\n        this.drawBorder();\r\n      }\r\n    }, {\r\n      z: tz,\r\n      draw: (chartArea) => {\r\n        this.drawLabels(chartArea);\r\n      }\r\n    }];\r\n  }\r\n  getMatchingVisibleMetas(type) {\r\n    const metas = this.chart.getSortedVisibleDatasetMetas();\r\n    const axisID = this.axis + 'AxisID';\r\n    const result = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      const meta = metas[i];\r\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\r\n        result.push(meta);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  _resolveTickFontOptions(index) {\r\n    const opts = this.options.ticks.setContext(this.getContext(index));\r\n    return toFont(opts.font);\r\n  }\r\n  _maxDigits() {\r\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\r\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\r\n  }\r\n}\r\n\r\nclass TypedRegistry {\r\n  constructor(type, scope, override) {\r\n    this.type = type;\r\n    this.scope = scope;\r\n    this.override = override;\r\n    this.items = Object.create(null);\r\n  }\r\n  isForType(type) {\r\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\r\n  }\r\n  register(item) {\r\n    const proto = Object.getPrototypeOf(item);\r\n    let parentScope;\r\n    if (isIChartComponent(proto)) {\r\n      parentScope = this.register(proto);\r\n    }\r\n    const items = this.items;\r\n    const id = item.id;\r\n    const scope = this.scope + '.' + id;\r\n    if (!id) {\r\n      throw new Error('class does not have id: ' + item);\r\n    }\r\n    if (id in items) {\r\n      return scope;\r\n    }\r\n    items[id] = item;\r\n    registerDefaults(item, scope, parentScope);\r\n    if (this.override) {\r\n      defaults.override(item.id, item.overrides);\r\n    }\r\n    return scope;\r\n  }\r\n  get(id) {\r\n    return this.items[id];\r\n  }\r\n  unregister(item) {\r\n    const items = this.items;\r\n    const id = item.id;\r\n    const scope = this.scope;\r\n    if (id in items) {\r\n      delete items[id];\r\n    }\r\n    if (scope && id in defaults[scope]) {\r\n      delete defaults[scope][id];\r\n      if (this.override) {\r\n        delete overrides[id];\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction registerDefaults(item, scope, parentScope) {\r\n  const itemDefaults = merge(Object.create(null), [\r\n    parentScope ? defaults.get(parentScope) : {},\r\n    defaults.get(scope),\r\n    item.defaults\r\n  ]);\r\n  defaults.set(scope, itemDefaults);\r\n  if (item.defaultRoutes) {\r\n    routeDefaults(scope, item.defaultRoutes);\r\n  }\r\n  if (item.descriptors) {\r\n    defaults.describe(scope, item.descriptors);\r\n  }\r\n}\r\nfunction routeDefaults(scope, routes) {\r\n  Object.keys(routes).forEach(property => {\r\n    const propertyParts = property.split('.');\r\n    const sourceName = propertyParts.pop();\r\n    const sourceScope = [scope].concat(propertyParts).join('.');\r\n    const parts = routes[property].split('.');\r\n    const targetName = parts.pop();\r\n    const targetScope = parts.join('.');\r\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\r\n  });\r\n}\r\nfunction isIChartComponent(proto) {\r\n  return 'id' in proto && 'defaults' in proto;\r\n}\r\n\r\nclass Registry {\r\n  constructor() {\r\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\r\n    this.elements = new TypedRegistry(Element, 'elements');\r\n    this.plugins = new TypedRegistry(Object, 'plugins');\r\n    this.scales = new TypedRegistry(Scale, 'scales');\r\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\r\n  }\r\n  add(...args) {\r\n    this._each('register', args);\r\n  }\r\n  remove(...args) {\r\n    this._each('unregister', args);\r\n  }\r\n  addControllers(...args) {\r\n    this._each('register', args, this.controllers);\r\n  }\r\n  addElements(...args) {\r\n    this._each('register', args, this.elements);\r\n  }\r\n  addPlugins(...args) {\r\n    this._each('register', args, this.plugins);\r\n  }\r\n  addScales(...args) {\r\n    this._each('register', args, this.scales);\r\n  }\r\n  getController(id) {\r\n    return this._get(id, this.controllers, 'controller');\r\n  }\r\n  getElement(id) {\r\n    return this._get(id, this.elements, 'element');\r\n  }\r\n  getPlugin(id) {\r\n    return this._get(id, this.plugins, 'plugin');\r\n  }\r\n  getScale(id) {\r\n    return this._get(id, this.scales, 'scale');\r\n  }\r\n  removeControllers(...args) {\r\n    this._each('unregister', args, this.controllers);\r\n  }\r\n  removeElements(...args) {\r\n    this._each('unregister', args, this.elements);\r\n  }\r\n  removePlugins(...args) {\r\n    this._each('unregister', args, this.plugins);\r\n  }\r\n  removeScales(...args) {\r\n    this._each('unregister', args, this.scales);\r\n  }\r\n  _each(method, args, typedRegistry) {\r\n    [...args].forEach(arg => {\r\n      const reg = typedRegistry || this._getRegistryForType(arg);\r\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\r\n        this._exec(method, reg, arg);\r\n      } else {\r\n        each(arg, item => {\r\n          const itemReg = typedRegistry || this._getRegistryForType(item);\r\n          this._exec(method, itemReg, item);\r\n        });\r\n      }\r\n    });\r\n  }\r\n  _exec(method, registry, component) {\r\n    const camelMethod = _capitalize(method);\r\n    callback(component['before' + camelMethod], [], component);\r\n    registry[method](component);\r\n    callback(component['after' + camelMethod], [], component);\r\n  }\r\n  _getRegistryForType(type) {\r\n    for (let i = 0; i < this._typedRegistries.length; i++) {\r\n      const reg = this._typedRegistries[i];\r\n      if (reg.isForType(type)) {\r\n        return reg;\r\n      }\r\n    }\r\n    return this.plugins;\r\n  }\r\n  _get(id, typedRegistry, type) {\r\n    const item = typedRegistry.get(id);\r\n    if (item === undefined) {\r\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\r\n    }\r\n    return item;\r\n  }\r\n}\r\nvar registry = new Registry();\r\n\r\nclass PluginService {\r\n  constructor() {\r\n    this._init = [];\r\n  }\r\n  notify(chart, hook, args, filter) {\r\n    if (hook === 'beforeInit') {\r\n      this._init = this._createDescriptors(chart, true);\r\n      this._notify(this._init, chart, 'install');\r\n    }\r\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\r\n    const result = this._notify(descriptors, chart, hook, args);\r\n    if (hook === 'destroy') {\r\n      this._notify(descriptors, chart, 'stop');\r\n      this._notify(this._init, chart, 'uninstall');\r\n    }\r\n    return result;\r\n  }\r\n  _notify(descriptors, chart, hook, args) {\r\n    args = args || {};\r\n    for (const descriptor of descriptors) {\r\n      const plugin = descriptor.plugin;\r\n      const method = plugin[hook];\r\n      const params = [chart, args, descriptor.options];\r\n      if (callback(method, params, plugin) === false && args.cancelable) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  invalidate() {\r\n    if (!isNullOrUndef(this._cache)) {\r\n      this._oldCache = this._cache;\r\n      this._cache = undefined;\r\n    }\r\n  }\r\n  _descriptors(chart) {\r\n    if (this._cache) {\r\n      return this._cache;\r\n    }\r\n    const descriptors = this._cache = this._createDescriptors(chart);\r\n    this._notifyStateChanges(chart);\r\n    return descriptors;\r\n  }\r\n  _createDescriptors(chart, all) {\r\n    const config = chart && chart.config;\r\n    const options = valueOrDefault(config.options && config.options.plugins, {});\r\n    const plugins = allPlugins(config);\r\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\r\n  }\r\n  _notifyStateChanges(chart) {\r\n    const previousDescriptors = this._oldCache || [];\r\n    const descriptors = this._cache;\r\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\r\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\r\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\r\n  }\r\n}\r\nfunction allPlugins(config) {\r\n  const plugins = [];\r\n  const keys = Object.keys(registry.plugins.items);\r\n  for (let i = 0; i < keys.length; i++) {\r\n    plugins.push(registry.getPlugin(keys[i]));\r\n  }\r\n  const local = config.plugins || [];\r\n  for (let i = 0; i < local.length; i++) {\r\n    const plugin = local[i];\r\n    if (plugins.indexOf(plugin) === -1) {\r\n      plugins.push(plugin);\r\n    }\r\n  }\r\n  return plugins;\r\n}\r\nfunction getOpts(options, all) {\r\n  if (!all && options === false) {\r\n    return null;\r\n  }\r\n  if (options === true) {\r\n    return {};\r\n  }\r\n  return options;\r\n}\r\nfunction createDescriptors(chart, plugins, options, all) {\r\n  const result = [];\r\n  const context = chart.getContext();\r\n  for (let i = 0; i < plugins.length; i++) {\r\n    const plugin = plugins[i];\r\n    const id = plugin.id;\r\n    const opts = getOpts(options[id], all);\r\n    if (opts === null) {\r\n      continue;\r\n    }\r\n    result.push({\r\n      plugin,\r\n      options: pluginOpts(chart.config, plugin, opts, context)\r\n    });\r\n  }\r\n  return result;\r\n}\r\nfunction pluginOpts(config, plugin, opts, context) {\r\n  const keys = config.pluginScopeKeys(plugin);\r\n  const scopes = config.getOptionScopes(opts, keys);\r\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\r\n}\r\n\r\nfunction getIndexAxis(type, options) {\r\n  const datasetDefaults = defaults.datasets[type] || {};\r\n  const datasetOptions = (options.datasets || {})[type] || {};\r\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\r\n}\r\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\r\n  let axis = id;\r\n  if (id === '_index_') {\r\n    axis = indexAxis;\r\n  } else if (id === '_value_') {\r\n    axis = indexAxis === 'x' ? 'y' : 'x';\r\n  }\r\n  return axis;\r\n}\r\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\r\n  return axis === indexAxis ? '_index_' : '_value_';\r\n}\r\nfunction axisFromPosition(position) {\r\n  if (position === 'top' || position === 'bottom') {\r\n    return 'x';\r\n  }\r\n  if (position === 'left' || position === 'right') {\r\n    return 'y';\r\n  }\r\n}\r\nfunction determineAxis(id, scaleOptions) {\r\n  if (id === 'x' || id === 'y') {\r\n    return id;\r\n  }\r\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\r\n}\r\nfunction mergeScaleConfig(config, options) {\r\n  const chartDefaults = overrides[config.type] || {scales: {}};\r\n  const configScales = options.scales || {};\r\n  const chartIndexAxis = getIndexAxis(config.type, options);\r\n  const firstIDs = Object.create(null);\r\n  const scales = Object.create(null);\r\n  Object.keys(configScales).forEach(id => {\r\n    const scaleConf = configScales[id];\r\n    if (!isObject(scaleConf)) {\r\n      return console.error(`Invalid scale configuration for scale: ${id}`);\r\n    }\r\n    if (scaleConf._proxy) {\r\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\r\n    }\r\n    const axis = determineAxis(id, scaleConf);\r\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\r\n    const defaultScaleOptions = chartDefaults.scales || {};\r\n    firstIDs[axis] = firstIDs[axis] || id;\r\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\r\n  });\r\n  config.data.datasets.forEach(dataset => {\r\n    const type = dataset.type || config.type;\r\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\r\n    const datasetDefaults = overrides[type] || {};\r\n    const defaultScaleOptions = datasetDefaults.scales || {};\r\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\r\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\r\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\r\n      scales[id] = scales[id] || Object.create(null);\r\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\r\n    });\r\n  });\r\n  Object.keys(scales).forEach(key => {\r\n    const scale = scales[key];\r\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\r\n  });\r\n  return scales;\r\n}\r\nfunction initOptions(config) {\r\n  const options = config.options || (config.options = {});\r\n  options.plugins = valueOrDefault(options.plugins, {});\r\n  options.scales = mergeScaleConfig(config, options);\r\n}\r\nfunction initData(data) {\r\n  data = data || {};\r\n  data.datasets = data.datasets || [];\r\n  data.labels = data.labels || [];\r\n  return data;\r\n}\r\nfunction initConfig(config) {\r\n  config = config || {};\r\n  config.data = initData(config.data);\r\n  initOptions(config);\r\n  return config;\r\n}\r\nconst keyCache = new Map();\r\nconst keysCached = new Set();\r\nfunction cachedKeys(cacheKey, generate) {\r\n  let keys = keyCache.get(cacheKey);\r\n  if (!keys) {\r\n    keys = generate();\r\n    keyCache.set(cacheKey, keys);\r\n    keysCached.add(keys);\r\n  }\r\n  return keys;\r\n}\r\nconst addIfFound = (set, obj, key) => {\r\n  const opts = resolveObjectKey(obj, key);\r\n  if (opts !== undefined) {\r\n    set.add(opts);\r\n  }\r\n};\r\nclass Config {\r\n  constructor(config) {\r\n    this._config = initConfig(config);\r\n    this._scopeCache = new Map();\r\n    this._resolverCache = new Map();\r\n  }\r\n  get platform() {\r\n    return this._config.platform;\r\n  }\r\n  get type() {\r\n    return this._config.type;\r\n  }\r\n  set type(type) {\r\n    this._config.type = type;\r\n  }\r\n  get data() {\r\n    return this._config.data;\r\n  }\r\n  set data(data) {\r\n    this._config.data = initData(data);\r\n  }\r\n  get options() {\r\n    return this._config.options;\r\n  }\r\n  set options(options) {\r\n    this._config.options = options;\r\n  }\r\n  get plugins() {\r\n    return this._config.plugins;\r\n  }\r\n  update() {\r\n    const config = this._config;\r\n    this.clearCache();\r\n    initOptions(config);\r\n  }\r\n  clearCache() {\r\n    this._scopeCache.clear();\r\n    this._resolverCache.clear();\r\n  }\r\n  datasetScopeKeys(datasetType) {\r\n    return cachedKeys(datasetType,\r\n      () => [[\r\n        `datasets.${datasetType}`,\r\n        ''\r\n      ]]);\r\n  }\r\n  datasetAnimationScopeKeys(datasetType, transition) {\r\n    return cachedKeys(`${datasetType}.transition.${transition}`,\r\n      () => [\r\n        [\r\n          `datasets.${datasetType}.transitions.${transition}`,\r\n          `transitions.${transition}`,\r\n        ],\r\n        [\r\n          `datasets.${datasetType}`,\r\n          ''\r\n        ]\r\n      ]);\r\n  }\r\n  datasetElementScopeKeys(datasetType, elementType) {\r\n    return cachedKeys(`${datasetType}-${elementType}`,\r\n      () => [[\r\n        `datasets.${datasetType}.elements.${elementType}`,\r\n        `datasets.${datasetType}`,\r\n        `elements.${elementType}`,\r\n        ''\r\n      ]]);\r\n  }\r\n  pluginScopeKeys(plugin) {\r\n    const id = plugin.id;\r\n    const type = this.type;\r\n    return cachedKeys(`${type}-plugin-${id}`,\r\n      () => [[\r\n        `plugins.${id}`,\r\n        ...plugin.additionalOptionScopes || [],\r\n      ]]);\r\n  }\r\n  _cachedScopes(mainScope, resetCache) {\r\n    const _scopeCache = this._scopeCache;\r\n    let cache = _scopeCache.get(mainScope);\r\n    if (!cache || resetCache) {\r\n      cache = new Map();\r\n      _scopeCache.set(mainScope, cache);\r\n    }\r\n    return cache;\r\n  }\r\n  getOptionScopes(mainScope, keyLists, resetCache) {\r\n    const {options, type} = this;\r\n    const cache = this._cachedScopes(mainScope, resetCache);\r\n    const cached = cache.get(keyLists);\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    const scopes = new Set();\r\n    keyLists.forEach(keys => {\r\n      if (mainScope) {\r\n        scopes.add(mainScope);\r\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\r\n      }\r\n      keys.forEach(key => addIfFound(scopes, options, key));\r\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\r\n      keys.forEach(key => addIfFound(scopes, defaults, key));\r\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\r\n    });\r\n    const array = Array.from(scopes);\r\n    if (array.length === 0) {\r\n      array.push(Object.create(null));\r\n    }\r\n    if (keysCached.has(keyLists)) {\r\n      cache.set(keyLists, array);\r\n    }\r\n    return array;\r\n  }\r\n  chartOptionScopes() {\r\n    const {options, type} = this;\r\n    return [\r\n      options,\r\n      overrides[type] || {},\r\n      defaults.datasets[type] || {},\r\n      {type},\r\n      defaults,\r\n      descriptors\r\n    ];\r\n  }\r\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\r\n    const result = {$shared: true};\r\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\r\n    let options = resolver;\r\n    if (needContext(resolver, names)) {\r\n      result.$shared = false;\r\n      context = isFunction(context) ? context() : context;\r\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\r\n      options = _attachContext(resolver, context, subResolver);\r\n    }\r\n    for (const prop of names) {\r\n      result[prop] = options[prop];\r\n    }\r\n    return result;\r\n  }\r\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\r\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\r\n    return isObject(context)\r\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\r\n      : resolver;\r\n  }\r\n}\r\nfunction getResolver(resolverCache, scopes, prefixes) {\r\n  let cache = resolverCache.get(scopes);\r\n  if (!cache) {\r\n    cache = new Map();\r\n    resolverCache.set(scopes, cache);\r\n  }\r\n  const cacheKey = prefixes.join();\r\n  let cached = cache.get(cacheKey);\r\n  if (!cached) {\r\n    const resolver = _createResolver(scopes, prefixes);\r\n    cached = {\r\n      resolver,\r\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\r\n    };\r\n    cache.set(cacheKey, cached);\r\n  }\r\n  return cached;\r\n}\r\nfunction needContext(proxy, names) {\r\n  const {isScriptable, isIndexable} = _descriptors(proxy);\r\n  for (const prop of names) {\r\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\r\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nvar version = \"3.5.1\";\r\n\r\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\r\nfunction positionIsHorizontal(position, axis) {\r\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\r\n}\r\nfunction compare2Level(l1, l2) {\r\n  return function(a, b) {\r\n    return a[l1] === b[l1]\r\n      ? a[l2] - b[l2]\r\n      : a[l1] - b[l1];\r\n  };\r\n}\r\nfunction onAnimationsComplete(context) {\r\n  const chart = context.chart;\r\n  const animationOptions = chart.options.animation;\r\n  chart.notifyPlugins('afterRender');\r\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\r\n}\r\nfunction onAnimationProgress(context) {\r\n  const chart = context.chart;\r\n  const animationOptions = chart.options.animation;\r\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\r\n}\r\nfunction getCanvas(item) {\r\n  if (_isDomSupported() && typeof item === 'string') {\r\n    item = document.getElementById(item);\r\n  } else if (item && item.length) {\r\n    item = item[0];\r\n  }\r\n  if (item && item.canvas) {\r\n    item = item.canvas;\r\n  }\r\n  return item;\r\n}\r\nconst instances = {};\r\nconst getChart = (key) => {\r\n  const canvas = getCanvas(key);\r\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\r\n};\r\nclass Chart {\r\n  constructor(item, userConfig) {\r\n    const config = this.config = new Config(userConfig);\r\n    const initialCanvas = getCanvas(item);\r\n    const existingChart = getChart(initialCanvas);\r\n    if (existingChart) {\r\n      throw new Error(\r\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\r\n\t\t\t\t' must be destroyed before the canvas can be reused.'\r\n      );\r\n    }\r\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\r\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\r\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\r\n    const canvas = context && context.canvas;\r\n    const height = canvas && canvas.height;\r\n    const width = canvas && canvas.width;\r\n    this.id = uid();\r\n    this.ctx = context;\r\n    this.canvas = canvas;\r\n    this.width = width;\r\n    this.height = height;\r\n    this._options = options;\r\n    this._aspectRatio = this.aspectRatio;\r\n    this._layers = [];\r\n    this._metasets = [];\r\n    this._stacks = undefined;\r\n    this.boxes = [];\r\n    this.currentDevicePixelRatio = undefined;\r\n    this.chartArea = undefined;\r\n    this._active = [];\r\n    this._lastEvent = undefined;\r\n    this._listeners = {};\r\n    this._responsiveListeners = undefined;\r\n    this._sortedMetasets = [];\r\n    this.scales = {};\r\n    this._plugins = new PluginService();\r\n    this.$proxies = {};\r\n    this._hiddenIndices = {};\r\n    this.attached = false;\r\n    this._animationsDisabled = undefined;\r\n    this.$context = undefined;\r\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\r\n    instances[this.id] = this;\r\n    if (!context || !canvas) {\r\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\r\n      return;\r\n    }\r\n    animator.listen(this, 'complete', onAnimationsComplete);\r\n    animator.listen(this, 'progress', onAnimationProgress);\r\n    this._initialize();\r\n    if (this.attached) {\r\n      this.update();\r\n    }\r\n  }\r\n  get aspectRatio() {\r\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\r\n    if (!isNullOrUndef(aspectRatio)) {\r\n      return aspectRatio;\r\n    }\r\n    if (maintainAspectRatio && _aspectRatio) {\r\n      return _aspectRatio;\r\n    }\r\n    return height ? width / height : null;\r\n  }\r\n  get data() {\r\n    return this.config.data;\r\n  }\r\n  set data(data) {\r\n    this.config.data = data;\r\n  }\r\n  get options() {\r\n    return this._options;\r\n  }\r\n  set options(options) {\r\n    this.config.options = options;\r\n  }\r\n  _initialize() {\r\n    this.notifyPlugins('beforeInit');\r\n    if (this.options.responsive) {\r\n      this.resize();\r\n    } else {\r\n      retinaScale(this, this.options.devicePixelRatio);\r\n    }\r\n    this.bindEvents();\r\n    this.notifyPlugins('afterInit');\r\n    return this;\r\n  }\r\n  clear() {\r\n    clearCanvas(this.canvas, this.ctx);\r\n    return this;\r\n  }\r\n  stop() {\r\n    animator.stop(this);\r\n    return this;\r\n  }\r\n  resize(width, height) {\r\n    if (!animator.running(this)) {\r\n      this._resize(width, height);\r\n    } else {\r\n      this._resizeBeforeDraw = {width, height};\r\n    }\r\n  }\r\n  _resize(width, height) {\r\n    const options = this.options;\r\n    const canvas = this.canvas;\r\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\r\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\r\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\r\n    const mode = this.width ? 'resize' : 'attach';\r\n    this.width = newSize.width;\r\n    this.height = newSize.height;\r\n    this._aspectRatio = this.aspectRatio;\r\n    if (!retinaScale(this, newRatio, true)) {\r\n      return;\r\n    }\r\n    this.notifyPlugins('resize', {size: newSize});\r\n    callback(options.onResize, [this, newSize], this);\r\n    if (this.attached) {\r\n      if (this._doResize(mode)) {\r\n        this.render();\r\n      }\r\n    }\r\n  }\r\n  ensureScalesHaveIDs() {\r\n    const options = this.options;\r\n    const scalesOptions = options.scales || {};\r\n    each(scalesOptions, (axisOptions, axisID) => {\r\n      axisOptions.id = axisID;\r\n    });\r\n  }\r\n  buildOrUpdateScales() {\r\n    const options = this.options;\r\n    const scaleOpts = options.scales;\r\n    const scales = this.scales;\r\n    const updated = Object.keys(scales).reduce((obj, id) => {\r\n      obj[id] = false;\r\n      return obj;\r\n    }, {});\r\n    let items = [];\r\n    if (scaleOpts) {\r\n      items = items.concat(\r\n        Object.keys(scaleOpts).map((id) => {\r\n          const scaleOptions = scaleOpts[id];\r\n          const axis = determineAxis(id, scaleOptions);\r\n          const isRadial = axis === 'r';\r\n          const isHorizontal = axis === 'x';\r\n          return {\r\n            options: scaleOptions,\r\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\r\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\r\n          };\r\n        })\r\n      );\r\n    }\r\n    each(items, (item) => {\r\n      const scaleOptions = item.options;\r\n      const id = scaleOptions.id;\r\n      const axis = determineAxis(id, scaleOptions);\r\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\r\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\r\n        scaleOptions.position = item.dposition;\r\n      }\r\n      updated[id] = true;\r\n      let scale = null;\r\n      if (id in scales && scales[id].type === scaleType) {\r\n        scale = scales[id];\r\n      } else {\r\n        const scaleClass = registry.getScale(scaleType);\r\n        scale = new scaleClass({\r\n          id,\r\n          type: scaleType,\r\n          ctx: this.ctx,\r\n          chart: this\r\n        });\r\n        scales[scale.id] = scale;\r\n      }\r\n      scale.init(scaleOptions, options);\r\n    });\r\n    each(updated, (hasUpdated, id) => {\r\n      if (!hasUpdated) {\r\n        delete scales[id];\r\n      }\r\n    });\r\n    each(scales, (scale) => {\r\n      layouts.configure(this, scale, scale.options);\r\n      layouts.addBox(this, scale);\r\n    });\r\n  }\r\n  _updateMetasets() {\r\n    const metasets = this._metasets;\r\n    const numData = this.data.datasets.length;\r\n    const numMeta = metasets.length;\r\n    metasets.sort((a, b) => a.index - b.index);\r\n    if (numMeta > numData) {\r\n      for (let i = numData; i < numMeta; ++i) {\r\n        this._destroyDatasetMeta(i);\r\n      }\r\n      metasets.splice(numData, numMeta - numData);\r\n    }\r\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\r\n  }\r\n  _removeUnreferencedMetasets() {\r\n    const {_metasets: metasets, data: {datasets}} = this;\r\n    if (metasets.length > datasets.length) {\r\n      delete this._stacks;\r\n    }\r\n    metasets.forEach((meta, index) => {\r\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\r\n        this._destroyDatasetMeta(index);\r\n      }\r\n    });\r\n  }\r\n  buildOrUpdateControllers() {\r\n    const newControllers = [];\r\n    const datasets = this.data.datasets;\r\n    let i, ilen;\r\n    this._removeUnreferencedMetasets();\r\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\r\n      const dataset = datasets[i];\r\n      let meta = this.getDatasetMeta(i);\r\n      const type = dataset.type || this.config.type;\r\n      if (meta.type && meta.type !== type) {\r\n        this._destroyDatasetMeta(i);\r\n        meta = this.getDatasetMeta(i);\r\n      }\r\n      meta.type = type;\r\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\r\n      meta.order = dataset.order || 0;\r\n      meta.index = i;\r\n      meta.label = '' + dataset.label;\r\n      meta.visible = this.isDatasetVisible(i);\r\n      if (meta.controller) {\r\n        meta.controller.updateIndex(i);\r\n        meta.controller.linkScales();\r\n      } else {\r\n        const ControllerClass = registry.getController(type);\r\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\r\n        Object.assign(ControllerClass.prototype, {\r\n          dataElementType: registry.getElement(dataElementType),\r\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\r\n        });\r\n        meta.controller = new ControllerClass(this, i);\r\n        newControllers.push(meta.controller);\r\n      }\r\n    }\r\n    this._updateMetasets();\r\n    return newControllers;\r\n  }\r\n  _resetElements() {\r\n    each(this.data.datasets, (dataset, datasetIndex) => {\r\n      this.getDatasetMeta(datasetIndex).controller.reset();\r\n    }, this);\r\n  }\r\n  reset() {\r\n    this._resetElements();\r\n    this.notifyPlugins('reset');\r\n  }\r\n  update(mode) {\r\n    const config = this.config;\r\n    config.update();\r\n    this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\r\n    each(this.scales, (scale) => {\r\n      layouts.removeBox(this, scale);\r\n    });\r\n    const animsDisabled = this._animationsDisabled = !this.options.animation;\r\n    this.ensureScalesHaveIDs();\r\n    this.buildOrUpdateScales();\r\n    const existingEvents = new Set(Object.keys(this._listeners));\r\n    const newEvents = new Set(this.options.events);\r\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== this.options.responsive) {\r\n      this.unbindEvents();\r\n      this.bindEvents();\r\n    }\r\n    this._plugins.invalidate();\r\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const newControllers = this.buildOrUpdateControllers();\r\n    this.notifyPlugins('beforeElementsUpdate');\r\n    let minPadding = 0;\r\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\r\n      const {controller} = this.getDatasetMeta(i);\r\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\r\n      controller.buildOrUpdateElements(reset);\r\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\r\n    }\r\n    this._minPadding = minPadding;\r\n    this._updateLayout(minPadding);\r\n    if (!animsDisabled) {\r\n      each(newControllers, (controller) => {\r\n        controller.reset();\r\n      });\r\n    }\r\n    this._updateDatasets(mode);\r\n    this.notifyPlugins('afterUpdate', {mode});\r\n    this._layers.sort(compare2Level('z', '_idx'));\r\n    if (this._lastEvent) {\r\n      this._eventHandler(this._lastEvent, true);\r\n    }\r\n    this.render();\r\n  }\r\n  _updateLayout(minPadding) {\r\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    layouts.update(this, this.width, this.height, minPadding);\r\n    const area = this.chartArea;\r\n    const noArea = area.width <= 0 || area.height <= 0;\r\n    this._layers = [];\r\n    each(this.boxes, (box) => {\r\n      if (noArea && box.position === 'chartArea') {\r\n        return;\r\n      }\r\n      if (box.configure) {\r\n        box.configure();\r\n      }\r\n      this._layers.push(...box._layers());\r\n    }, this);\r\n    this._layers.forEach((item, index) => {\r\n      item._idx = index;\r\n    });\r\n    this.notifyPlugins('afterLayout');\r\n  }\r\n  _updateDatasets(mode) {\r\n    const isFunction = typeof mode === 'function';\r\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n      this._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\r\n    }\r\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\r\n  }\r\n  _updateDataset(index, mode) {\r\n    const meta = this.getDatasetMeta(index);\r\n    const args = {meta, index, mode, cancelable: true};\r\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\r\n      return;\r\n    }\r\n    meta.controller._update(mode);\r\n    args.cancelable = false;\r\n    this.notifyPlugins('afterDatasetUpdate', args);\r\n  }\r\n  render() {\r\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    if (animator.has(this)) {\r\n      if (this.attached && !animator.running(this)) {\r\n        animator.start(this);\r\n      }\r\n    } else {\r\n      this.draw();\r\n      onAnimationsComplete({chart: this});\r\n    }\r\n  }\r\n  draw() {\r\n    let i;\r\n    if (this._resizeBeforeDraw) {\r\n      const {width, height} = this._resizeBeforeDraw;\r\n      this._resize(width, height);\r\n      this._resizeBeforeDraw = null;\r\n    }\r\n    this.clear();\r\n    if (this.width <= 0 || this.height <= 0) {\r\n      return;\r\n    }\r\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const layers = this._layers;\r\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\r\n      layers[i].draw(this.chartArea);\r\n    }\r\n    this._drawDatasets();\r\n    for (; i < layers.length; ++i) {\r\n      layers[i].draw(this.chartArea);\r\n    }\r\n    this.notifyPlugins('afterDraw');\r\n  }\r\n  _getSortedDatasetMetas(filterVisible) {\r\n    const metasets = this._sortedMetasets;\r\n    const result = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n      const meta = metasets[i];\r\n      if (!filterVisible || meta.visible) {\r\n        result.push(meta);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  getSortedVisibleDatasetMetas() {\r\n    return this._getSortedDatasetMetas(true);\r\n  }\r\n  _drawDatasets() {\r\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const metasets = this.getSortedVisibleDatasetMetas();\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      this._drawDataset(metasets[i]);\r\n    }\r\n    this.notifyPlugins('afterDatasetsDraw');\r\n  }\r\n  _drawDataset(meta) {\r\n    const ctx = this.ctx;\r\n    const clip = meta._clip;\r\n    const useClip = !clip.disabled;\r\n    const area = this.chartArea;\r\n    const args = {\r\n      meta,\r\n      index: meta.index,\r\n      cancelable: true\r\n    };\r\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\r\n      return;\r\n    }\r\n    if (useClip) {\r\n      clipArea(ctx, {\r\n        left: clip.left === false ? 0 : area.left - clip.left,\r\n        right: clip.right === false ? this.width : area.right + clip.right,\r\n        top: clip.top === false ? 0 : area.top - clip.top,\r\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\r\n      });\r\n    }\r\n    meta.controller.draw();\r\n    if (useClip) {\r\n      unclipArea(ctx);\r\n    }\r\n    args.cancelable = false;\r\n    this.notifyPlugins('afterDatasetDraw', args);\r\n  }\r\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\r\n    const method = Interaction.modes[mode];\r\n    if (typeof method === 'function') {\r\n      return method(this, e, options, useFinalPosition);\r\n    }\r\n    return [];\r\n  }\r\n  getDatasetMeta(datasetIndex) {\r\n    const dataset = this.data.datasets[datasetIndex];\r\n    const metasets = this._metasets;\r\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\r\n    if (!meta) {\r\n      meta = {\r\n        type: null,\r\n        data: [],\r\n        dataset: null,\r\n        controller: null,\r\n        hidden: null,\r\n        xAxisID: null,\r\n        yAxisID: null,\r\n        order: dataset && dataset.order || 0,\r\n        index: datasetIndex,\r\n        _dataset: dataset,\r\n        _parsed: [],\r\n        _sorted: false\r\n      };\r\n      metasets.push(meta);\r\n    }\r\n    return meta;\r\n  }\r\n  getContext() {\r\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\r\n  }\r\n  getVisibleDatasetCount() {\r\n    return this.getSortedVisibleDatasetMetas().length;\r\n  }\r\n  isDatasetVisible(datasetIndex) {\r\n    const dataset = this.data.datasets[datasetIndex];\r\n    if (!dataset) {\r\n      return false;\r\n    }\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\r\n  }\r\n  setDatasetVisibility(datasetIndex, visible) {\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    meta.hidden = !visible;\r\n  }\r\n  toggleDataVisibility(index) {\r\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\r\n  }\r\n  getDataVisibility(index) {\r\n    return !this._hiddenIndices[index];\r\n  }\r\n  _updateVisibility(datasetIndex, dataIndex, visible) {\r\n    const mode = visible ? 'show' : 'hide';\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    const anims = meta.controller._resolveAnimations(undefined, mode);\r\n    if (defined(dataIndex)) {\r\n      meta.data[dataIndex].hidden = !visible;\r\n      this.update();\r\n    } else {\r\n      this.setDatasetVisibility(datasetIndex, visible);\r\n      anims.update(meta, {visible});\r\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\r\n    }\r\n  }\r\n  hide(datasetIndex, dataIndex) {\r\n    this._updateVisibility(datasetIndex, dataIndex, false);\r\n  }\r\n  show(datasetIndex, dataIndex) {\r\n    this._updateVisibility(datasetIndex, dataIndex, true);\r\n  }\r\n  _destroyDatasetMeta(datasetIndex) {\r\n    const meta = this._metasets && this._metasets[datasetIndex];\r\n    if (meta && meta.controller) {\r\n      meta.controller._destroy();\r\n      delete this._metasets[datasetIndex];\r\n    }\r\n  }\r\n  _stop() {\r\n    let i, ilen;\r\n    this.stop();\r\n    animator.remove(this);\r\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n      this._destroyDatasetMeta(i);\r\n    }\r\n  }\r\n  destroy() {\r\n    const {canvas, ctx} = this;\r\n    this._stop();\r\n    this.config.clearCache();\r\n    if (canvas) {\r\n      this.unbindEvents();\r\n      clearCanvas(canvas, ctx);\r\n      this.platform.releaseContext(ctx);\r\n      this.canvas = null;\r\n      this.ctx = null;\r\n    }\r\n    this.notifyPlugins('destroy');\r\n    delete instances[this.id];\r\n  }\r\n  toBase64Image(...args) {\r\n    return this.canvas.toDataURL(...args);\r\n  }\r\n  bindEvents() {\r\n    this.bindUserEvents();\r\n    if (this.options.responsive) {\r\n      this.bindResponsiveEvents();\r\n    } else {\r\n      this.attached = true;\r\n    }\r\n  }\r\n  bindUserEvents() {\r\n    const listeners = this._listeners;\r\n    const platform = this.platform;\r\n    const _add = (type, listener) => {\r\n      platform.addEventListener(this, type, listener);\r\n      listeners[type] = listener;\r\n    };\r\n    const listener = (e, x, y) => {\r\n      e.offsetX = x;\r\n      e.offsetY = y;\r\n      this._eventHandler(e);\r\n    };\r\n    each(this.options.events, (type) => _add(type, listener));\r\n  }\r\n  bindResponsiveEvents() {\r\n    if (!this._responsiveListeners) {\r\n      this._responsiveListeners = {};\r\n    }\r\n    const listeners = this._responsiveListeners;\r\n    const platform = this.platform;\r\n    const _add = (type, listener) => {\r\n      platform.addEventListener(this, type, listener);\r\n      listeners[type] = listener;\r\n    };\r\n    const _remove = (type, listener) => {\r\n      if (listeners[type]) {\r\n        platform.removeEventListener(this, type, listener);\r\n        delete listeners[type];\r\n      }\r\n    };\r\n    const listener = (width, height) => {\r\n      if (this.canvas) {\r\n        this.resize(width, height);\r\n      }\r\n    };\r\n    let detached;\r\n    const attached = () => {\r\n      _remove('attach', attached);\r\n      this.attached = true;\r\n      this.resize();\r\n      _add('resize', listener);\r\n      _add('detach', detached);\r\n    };\r\n    detached = () => {\r\n      this.attached = false;\r\n      _remove('resize', listener);\r\n      this._stop();\r\n      this._resize(0, 0);\r\n      _add('attach', attached);\r\n    };\r\n    if (platform.isAttached(this.canvas)) {\r\n      attached();\r\n    } else {\r\n      detached();\r\n    }\r\n  }\r\n  unbindEvents() {\r\n    each(this._listeners, (listener, type) => {\r\n      this.platform.removeEventListener(this, type, listener);\r\n    });\r\n    this._listeners = {};\r\n    each(this._responsiveListeners, (listener, type) => {\r\n      this.platform.removeEventListener(this, type, listener);\r\n    });\r\n    this._responsiveListeners = undefined;\r\n  }\r\n  updateHoverStyle(items, mode, enabled) {\r\n    const prefix = enabled ? 'set' : 'remove';\r\n    let meta, item, i, ilen;\r\n    if (mode === 'dataset') {\r\n      meta = this.getDatasetMeta(items[0].datasetIndex);\r\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\r\n    }\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      item = items[i];\r\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\r\n      if (controller) {\r\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\r\n      }\r\n    }\r\n  }\r\n  getActiveElements() {\r\n    return this._active || [];\r\n  }\r\n  setActiveElements(activeElements) {\r\n    const lastActive = this._active || [];\r\n    const active = activeElements.map(({datasetIndex, index}) => {\r\n      const meta = this.getDatasetMeta(datasetIndex);\r\n      if (!meta) {\r\n        throw new Error('No dataset found at index ' + datasetIndex);\r\n      }\r\n      return {\r\n        datasetIndex,\r\n        element: meta.data[index],\r\n        index,\r\n      };\r\n    });\r\n    const changed = !_elementsEqual(active, lastActive);\r\n    if (changed) {\r\n      this._active = active;\r\n      this._updateHoverStyles(active, lastActive);\r\n    }\r\n  }\r\n  notifyPlugins(hook, args, filter) {\r\n    return this._plugins.notify(this, hook, args, filter);\r\n  }\r\n  _updateHoverStyles(active, lastActive, replay) {\r\n    const hoverOptions = this.options.hover;\r\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\r\n    const deactivated = diff(lastActive, active);\r\n    const activated = replay ? active : diff(active, lastActive);\r\n    if (deactivated.length) {\r\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\r\n    }\r\n    if (activated.length && hoverOptions.mode) {\r\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\r\n    }\r\n  }\r\n  _eventHandler(e, replay) {\r\n    const args = {event: e, replay, cancelable: true};\r\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\r\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\r\n      return;\r\n    }\r\n    const changed = this._handleEvent(e, replay);\r\n    args.cancelable = false;\r\n    this.notifyPlugins('afterEvent', args, eventFilter);\r\n    if (changed || args.changed) {\r\n      this.render();\r\n    }\r\n    return this;\r\n  }\r\n  _handleEvent(e, replay) {\r\n    const {_active: lastActive = [], options} = this;\r\n    const hoverOptions = options.hover;\r\n    const useFinalPosition = replay;\r\n    let active = [];\r\n    let changed = false;\r\n    let lastEvent = null;\r\n    if (e.type !== 'mouseout') {\r\n      active = this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\r\n      lastEvent = e.type === 'click' ? this._lastEvent : e;\r\n    }\r\n    this._lastEvent = null;\r\n    if (_isPointInArea(e, this.chartArea, this._minPadding)) {\r\n      callback(options.onHover, [e, active, this], this);\r\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\r\n        callback(options.onClick, [e, active, this], this);\r\n      }\r\n    }\r\n    changed = !_elementsEqual(active, lastActive);\r\n    if (changed || replay) {\r\n      this._active = active;\r\n      this._updateHoverStyles(active, lastActive, replay);\r\n    }\r\n    this._lastEvent = lastEvent;\r\n    return changed;\r\n  }\r\n}\r\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\r\nconst enumerable = true;\r\nObject.defineProperties(Chart, {\r\n  defaults: {\r\n    enumerable,\r\n    value: defaults\r\n  },\r\n  instances: {\r\n    enumerable,\r\n    value: instances\r\n  },\r\n  overrides: {\r\n    enumerable,\r\n    value: overrides\r\n  },\r\n  registry: {\r\n    enumerable,\r\n    value: registry\r\n  },\r\n  version: {\r\n    enumerable,\r\n    value: version\r\n  },\r\n  getChart: {\r\n    enumerable,\r\n    value: getChart\r\n  },\r\n  register: {\r\n    enumerable,\r\n    value: (...items) => {\r\n      registry.add(...items);\r\n      invalidatePlugins();\r\n    }\r\n  },\r\n  unregister: {\r\n    enumerable,\r\n    value: (...items) => {\r\n      registry.remove(...items);\r\n      invalidatePlugins();\r\n    }\r\n  }\r\n});\r\n\r\nfunction clipArc(ctx, element, endAngle) {\r\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\r\n  let angleMargin = pixelMargin / outerRadius;\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\r\n  if (innerRadius > pixelMargin) {\r\n    angleMargin = pixelMargin / innerRadius;\r\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\r\n  } else {\r\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\r\n  }\r\n  ctx.closePath();\r\n  ctx.clip();\r\n}\r\nfunction toRadiusCorners(value) {\r\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\r\n}\r\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\r\n  const o = toRadiusCorners(arc.options.borderRadius);\r\n  const halfThickness = (outerRadius - innerRadius) / 2;\r\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\r\n  const computeOuterLimit = (val) => {\r\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\r\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\r\n  };\r\n  return {\r\n    outerStart: computeOuterLimit(o.outerStart),\r\n    outerEnd: computeOuterLimit(o.outerEnd),\r\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\r\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\r\n  };\r\n}\r\nfunction rThetaToXY(r, theta, x, y) {\r\n  return {\r\n    x: x + r * Math.cos(theta),\r\n    y: y + r * Math.sin(theta),\r\n  };\r\n}\r\nfunction pathArc(ctx, element, offset, spacing, end) {\r\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\r\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\r\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\r\n  let spacingOffset = 0;\r\n  const alpha = end - start;\r\n  if (spacing) {\r\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\r\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\r\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\r\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\r\n    spacingOffset = (alpha - adjustedAngle) / 2;\r\n  }\r\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\r\n  const angleOffset = (alpha - beta) / 2;\r\n  const startAngle = start + angleOffset + spacingOffset;\r\n  const endAngle = end - angleOffset - spacingOffset;\r\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\r\n  const outerStartAdjustedRadius = outerRadius - outerStart;\r\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\r\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\r\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\r\n  const innerStartAdjustedRadius = innerRadius + innerStart;\r\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\r\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\r\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\r\n  if (outerEnd > 0) {\r\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\r\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\r\n  }\r\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\r\n  ctx.lineTo(p4.x, p4.y);\r\n  if (innerEnd > 0) {\r\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\r\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\r\n  }\r\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\r\n  if (innerStart > 0) {\r\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\r\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\r\n  }\r\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\r\n  ctx.lineTo(p8.x, p8.y);\r\n  if (outerStart > 0) {\r\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\r\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\r\n  }\r\n  ctx.closePath();\r\n}\r\nfunction drawArc(ctx, element, offset, spacing) {\r\n  const {fullCircles, startAngle, circumference} = element;\r\n  let endAngle = element.endAngle;\r\n  if (fullCircles) {\r\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\r\n    for (let i = 0; i < fullCircles; ++i) {\r\n      ctx.fill();\r\n    }\r\n    if (!isNaN(circumference)) {\r\n      endAngle = startAngle + circumference % TAU;\r\n      if (circumference % TAU === 0) {\r\n        endAngle += TAU;\r\n      }\r\n    }\r\n  }\r\n  pathArc(ctx, element, offset, spacing, endAngle);\r\n  ctx.fill();\r\n  return endAngle;\r\n}\r\nfunction drawFullCircleBorders(ctx, element, inner) {\r\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\r\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\r\n  const innerRadius = element.innerRadius + pixelMargin;\r\n  let i;\r\n  if (inner) {\r\n    clipArc(ctx, element, startAngle + TAU);\r\n  }\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\r\n  for (i = 0; i < fullCircles; ++i) {\r\n    ctx.stroke();\r\n  }\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\r\n  for (i = 0; i < fullCircles; ++i) {\r\n    ctx.stroke();\r\n  }\r\n}\r\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\r\n  const {options} = element;\r\n  const inner = options.borderAlign === 'inner';\r\n  if (!options.borderWidth) {\r\n    return;\r\n  }\r\n  if (inner) {\r\n    ctx.lineWidth = options.borderWidth * 2;\r\n    ctx.lineJoin = 'round';\r\n  } else {\r\n    ctx.lineWidth = options.borderWidth;\r\n    ctx.lineJoin = 'bevel';\r\n  }\r\n  if (element.fullCircles) {\r\n    drawFullCircleBorders(ctx, element, inner);\r\n  }\r\n  if (inner) {\r\n    clipArc(ctx, element, endAngle);\r\n  }\r\n  pathArc(ctx, element, offset, spacing, endAngle);\r\n  ctx.stroke();\r\n}\r\nclass ArcElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.circumference = undefined;\r\n    this.startAngle = undefined;\r\n    this.endAngle = undefined;\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n    this.pixelMargin = 0;\r\n    this.fullCircles = 0;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  inRange(chartX, chartY, useFinalPosition) {\r\n    const point = this.getProps(['x', 'y'], useFinalPosition);\r\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\r\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\r\n      'startAngle',\r\n      'endAngle',\r\n      'innerRadius',\r\n      'outerRadius',\r\n      'circumference'\r\n    ], useFinalPosition);\r\n    const rAdjust = this.options.spacing / 2;\r\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\r\n    const withinRadius = (distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust);\r\n    return (betweenAngles && withinRadius);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\r\n      'x',\r\n      'y',\r\n      'startAngle',\r\n      'endAngle',\r\n      'innerRadius',\r\n      'outerRadius',\r\n      'circumference',\r\n    ], useFinalPosition);\r\n    const {offset, spacing} = this.options;\r\n    const halfAngle = (startAngle + endAngle) / 2;\r\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\r\n    return {\r\n      x: x + Math.cos(halfAngle) * halfRadius,\r\n      y: y + Math.sin(halfAngle) * halfRadius\r\n    };\r\n  }\r\n  tooltipPosition(useFinalPosition) {\r\n    return this.getCenterPoint(useFinalPosition);\r\n  }\r\n  draw(ctx) {\r\n    const {options, circumference} = this;\r\n    const offset = (options.offset || 0) / 2;\r\n    const spacing = (options.spacing || 0) / 2;\r\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\r\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\r\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\r\n      return;\r\n    }\r\n    ctx.save();\r\n    let radiusOffset = 0;\r\n    if (offset) {\r\n      radiusOffset = offset / 2;\r\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\r\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\r\n      if (this.circumference >= PI) {\r\n        radiusOffset = offset;\r\n      }\r\n    }\r\n    ctx.fillStyle = options.backgroundColor;\r\n    ctx.strokeStyle = options.borderColor;\r\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\r\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\r\n    ctx.restore();\r\n  }\r\n}\r\nArcElement.id = 'arc';\r\nArcElement.defaults = {\r\n  borderAlign: 'center',\r\n  borderColor: '#fff',\r\n  borderRadius: 0,\r\n  borderWidth: 2,\r\n  offset: 0,\r\n  spacing: 0,\r\n  angle: undefined,\r\n};\r\nArcElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor'\r\n};\r\n\r\nfunction setStyle(ctx, options, style = options) {\r\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\r\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\r\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\r\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\r\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\r\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\r\n}\r\nfunction lineTo(ctx, previous, target) {\r\n  ctx.lineTo(target.x, target.y);\r\n}\r\nfunction getLineMethod(options) {\r\n  if (options.stepped) {\r\n    return _steppedLineTo;\r\n  }\r\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\r\n    return _bezierCurveTo;\r\n  }\r\n  return lineTo;\r\n}\r\nfunction pathVars(points, segment, params = {}) {\r\n  const count = points.length;\r\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\r\n  const {start: segmentStart, end: segmentEnd} = segment;\r\n  const start = Math.max(paramsStart, segmentStart);\r\n  const end = Math.min(paramsEnd, segmentEnd);\r\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\r\n  return {\r\n    count,\r\n    start,\r\n    loop: segment.loop,\r\n    ilen: end < start && !outside ? count + end - start : end - start\r\n  };\r\n}\r\nfunction pathSegment(ctx, line, segment, params) {\r\n  const {points, options} = line;\r\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\r\n  const lineMethod = getLineMethod(options);\r\n  let {move = true, reverse} = params || {};\r\n  let i, point, prev;\r\n  for (i = 0; i <= ilen; ++i) {\r\n    point = points[(start + (reverse ? ilen - i : i)) % count];\r\n    if (point.skip) {\r\n      continue;\r\n    } else if (move) {\r\n      ctx.moveTo(point.x, point.y);\r\n      move = false;\r\n    } else {\r\n      lineMethod(ctx, prev, point, reverse, options.stepped);\r\n    }\r\n    prev = point;\r\n  }\r\n  if (loop) {\r\n    point = points[(start + (reverse ? ilen : 0)) % count];\r\n    lineMethod(ctx, prev, point, reverse, options.stepped);\r\n  }\r\n  return !!loop;\r\n}\r\nfunction fastPathSegment(ctx, line, segment, params) {\r\n  const points = line.points;\r\n  const {count, start, ilen} = pathVars(points, segment, params);\r\n  const {move = true, reverse} = params || {};\r\n  let avgX = 0;\r\n  let countX = 0;\r\n  let i, point, prevX, minY, maxY, lastY;\r\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\r\n  const drawX = () => {\r\n    if (minY !== maxY) {\r\n      ctx.lineTo(avgX, maxY);\r\n      ctx.lineTo(avgX, minY);\r\n      ctx.lineTo(avgX, lastY);\r\n    }\r\n  };\r\n  if (move) {\r\n    point = points[pointIndex(0)];\r\n    ctx.moveTo(point.x, point.y);\r\n  }\r\n  for (i = 0; i <= ilen; ++i) {\r\n    point = points[pointIndex(i)];\r\n    if (point.skip) {\r\n      continue;\r\n    }\r\n    const x = point.x;\r\n    const y = point.y;\r\n    const truncX = x | 0;\r\n    if (truncX === prevX) {\r\n      if (y < minY) {\r\n        minY = y;\r\n      } else if (y > maxY) {\r\n        maxY = y;\r\n      }\r\n      avgX = (countX * avgX + x) / ++countX;\r\n    } else {\r\n      drawX();\r\n      ctx.lineTo(x, y);\r\n      prevX = truncX;\r\n      countX = 0;\r\n      minY = maxY = y;\r\n    }\r\n    lastY = y;\r\n  }\r\n  drawX();\r\n}\r\nfunction _getSegmentMethod(line) {\r\n  const opts = line.options;\r\n  const borderDash = opts.borderDash && opts.borderDash.length;\r\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\r\n  return useFastPath ? fastPathSegment : pathSegment;\r\n}\r\nfunction _getInterpolationMethod(options) {\r\n  if (options.stepped) {\r\n    return _steppedInterpolation;\r\n  }\r\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\r\n    return _bezierInterpolation;\r\n  }\r\n  return _pointInLine;\r\n}\r\nfunction strokePathWithCache(ctx, line, start, count) {\r\n  let path = line._path;\r\n  if (!path) {\r\n    path = line._path = new Path2D();\r\n    if (line.path(path, start, count)) {\r\n      path.closePath();\r\n    }\r\n  }\r\n  setStyle(ctx, line.options);\r\n  ctx.stroke(path);\r\n}\r\nfunction strokePathDirect(ctx, line, start, count) {\r\n  const {segments, options} = line;\r\n  const segmentMethod = _getSegmentMethod(line);\r\n  for (const segment of segments) {\r\n    setStyle(ctx, options, segment.style);\r\n    ctx.beginPath();\r\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\r\n      ctx.closePath();\r\n    }\r\n    ctx.stroke();\r\n  }\r\n}\r\nconst usePath2D = typeof Path2D === 'function';\r\nfunction draw(ctx, line, start, count) {\r\n  if (usePath2D && !line.options.segment) {\r\n    strokePathWithCache(ctx, line, start, count);\r\n  } else {\r\n    strokePathDirect(ctx, line, start, count);\r\n  }\r\n}\r\nclass LineElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.animated = true;\r\n    this.options = undefined;\r\n    this._loop = undefined;\r\n    this._fullLoop = undefined;\r\n    this._path = undefined;\r\n    this._points = undefined;\r\n    this._segments = undefined;\r\n    this._decimated = false;\r\n    this._pointsUpdated = false;\r\n    this._datasetIndex = undefined;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  updateControlPoints(chartArea, indexAxis) {\r\n    const options = this.options;\r\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\r\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\r\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\r\n      this._pointsUpdated = true;\r\n    }\r\n  }\r\n  set points(points) {\r\n    this._points = points;\r\n    delete this._segments;\r\n    delete this._path;\r\n    this._pointsUpdated = false;\r\n  }\r\n  get points() {\r\n    return this._points;\r\n  }\r\n  get segments() {\r\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\r\n  }\r\n  first() {\r\n    const segments = this.segments;\r\n    const points = this.points;\r\n    return segments.length && points[segments[0].start];\r\n  }\r\n  last() {\r\n    const segments = this.segments;\r\n    const points = this.points;\r\n    const count = segments.length;\r\n    return count && points[segments[count - 1].end];\r\n  }\r\n  interpolate(point, property) {\r\n    const options = this.options;\r\n    const value = point[property];\r\n    const points = this.points;\r\n    const segments = _boundSegments(this, {property, start: value, end: value});\r\n    if (!segments.length) {\r\n      return;\r\n    }\r\n    const result = [];\r\n    const _interpolate = _getInterpolationMethod(options);\r\n    let i, ilen;\r\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\r\n      const {start, end} = segments[i];\r\n      const p1 = points[start];\r\n      const p2 = points[end];\r\n      if (p1 === p2) {\r\n        result.push(p1);\r\n        continue;\r\n      }\r\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\r\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\r\n      interpolated[property] = point[property];\r\n      result.push(interpolated);\r\n    }\r\n    return result.length === 1 ? result[0] : result;\r\n  }\r\n  pathSegment(ctx, segment, params) {\r\n    const segmentMethod = _getSegmentMethod(this);\r\n    return segmentMethod(ctx, this, segment, params);\r\n  }\r\n  path(ctx, start, count) {\r\n    const segments = this.segments;\r\n    const segmentMethod = _getSegmentMethod(this);\r\n    let loop = this._loop;\r\n    start = start || 0;\r\n    count = count || (this.points.length - start);\r\n    for (const segment of segments) {\r\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\r\n    }\r\n    return !!loop;\r\n  }\r\n  draw(ctx, chartArea, start, count) {\r\n    const options = this.options || {};\r\n    const points = this.points || [];\r\n    if (points.length && options.borderWidth) {\r\n      ctx.save();\r\n      draw(ctx, this, start, count);\r\n      ctx.restore();\r\n    }\r\n    if (this.animated) {\r\n      this._pointsUpdated = false;\r\n      this._path = undefined;\r\n    }\r\n  }\r\n}\r\nLineElement.id = 'line';\r\nLineElement.defaults = {\r\n  borderCapStyle: 'butt',\r\n  borderDash: [],\r\n  borderDashOffset: 0,\r\n  borderJoinStyle: 'miter',\r\n  borderWidth: 3,\r\n  capBezierPoints: true,\r\n  cubicInterpolationMode: 'default',\r\n  fill: false,\r\n  spanGaps: false,\r\n  stepped: false,\r\n  tension: 0,\r\n};\r\nLineElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\nLineElement.descriptors = {\r\n  _scriptable: true,\r\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\r\n};\r\n\r\nfunction inRange$1(el, pos, axis, useFinalPosition) {\r\n  const options = el.options;\r\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\r\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\r\n}\r\nclass PointElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.parsed = undefined;\r\n    this.skip = undefined;\r\n    this.stop = undefined;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  inRange(mouseX, mouseY, useFinalPosition) {\r\n    const options = this.options;\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\r\n  }\r\n  inXRange(mouseX, useFinalPosition) {\r\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\r\n  }\r\n  inYRange(mouseY, useFinalPosition) {\r\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return {x, y};\r\n  }\r\n  size(options) {\r\n    options = options || this.options || {};\r\n    let radius = options.radius || 0;\r\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\r\n    const borderWidth = radius && options.borderWidth || 0;\r\n    return (radius + borderWidth) * 2;\r\n  }\r\n  draw(ctx, area) {\r\n    const options = this.options;\r\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\r\n      return;\r\n    }\r\n    ctx.strokeStyle = options.borderColor;\r\n    ctx.lineWidth = options.borderWidth;\r\n    ctx.fillStyle = options.backgroundColor;\r\n    drawPoint(ctx, options, this.x, this.y);\r\n  }\r\n  getRange() {\r\n    const options = this.options || {};\r\n    return options.radius + options.hitRadius;\r\n  }\r\n}\r\nPointElement.id = 'point';\r\nPointElement.defaults = {\r\n  borderWidth: 1,\r\n  hitRadius: 1,\r\n  hoverBorderWidth: 1,\r\n  hoverRadius: 4,\r\n  pointStyle: 'circle',\r\n  radius: 3,\r\n  rotation: 0\r\n};\r\nPointElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\n\r\nfunction getBarBounds(bar, useFinalPosition) {\r\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\r\n  let left, right, top, bottom, half;\r\n  if (bar.horizontal) {\r\n    half = height / 2;\r\n    left = Math.min(x, base);\r\n    right = Math.max(x, base);\r\n    top = y - half;\r\n    bottom = y + half;\r\n  } else {\r\n    half = width / 2;\r\n    left = x - half;\r\n    right = x + half;\r\n    top = Math.min(y, base);\r\n    bottom = Math.max(y, base);\r\n  }\r\n  return {left, top, right, bottom};\r\n}\r\nfunction skipOrLimit(skip, value, min, max) {\r\n  return skip ? 0 : _limitValue(value, min, max);\r\n}\r\nfunction parseBorderWidth(bar, maxW, maxH) {\r\n  const value = bar.options.borderWidth;\r\n  const skip = bar.borderSkipped;\r\n  const o = toTRBL(value);\r\n  return {\r\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\r\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\r\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\r\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\r\n  };\r\n}\r\nfunction parseBorderRadius(bar, maxW, maxH) {\r\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\r\n  const value = bar.options.borderRadius;\r\n  const o = toTRBLCorners(value);\r\n  const maxR = Math.min(maxW, maxH);\r\n  const skip = bar.borderSkipped;\r\n  const enableBorder = enableBorderRadius || isObject(value);\r\n  return {\r\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\r\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\r\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\r\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\r\n  };\r\n}\r\nfunction boundingRects(bar) {\r\n  const bounds = getBarBounds(bar);\r\n  const width = bounds.right - bounds.left;\r\n  const height = bounds.bottom - bounds.top;\r\n  const border = parseBorderWidth(bar, width / 2, height / 2);\r\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\r\n  return {\r\n    outer: {\r\n      x: bounds.left,\r\n      y: bounds.top,\r\n      w: width,\r\n      h: height,\r\n      radius\r\n    },\r\n    inner: {\r\n      x: bounds.left + border.l,\r\n      y: bounds.top + border.t,\r\n      w: width - border.l - border.r,\r\n      h: height - border.t - border.b,\r\n      radius: {\r\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\r\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\r\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\r\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\r\n      }\r\n    }\r\n  };\r\n}\r\nfunction inRange(bar, x, y, useFinalPosition) {\r\n  const skipX = x === null;\r\n  const skipY = y === null;\r\n  const skipBoth = skipX && skipY;\r\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\r\n  return bounds\r\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\r\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\r\n}\r\nfunction hasRadius(radius) {\r\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\r\n}\r\nfunction addNormalRectPath(ctx, rect) {\r\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\r\n}\r\nfunction inflateRect(rect, amount, refRect = {}) {\r\n  const x = rect.x !== refRect.x ? -amount : 0;\r\n  const y = rect.y !== refRect.y ? -amount : 0;\r\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\r\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\r\n  return {\r\n    x: rect.x + x,\r\n    y: rect.y + y,\r\n    w: rect.w + w,\r\n    h: rect.h + h,\r\n    radius: rect.radius\r\n  };\r\n}\r\nclass BarElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.horizontal = undefined;\r\n    this.base = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  draw(ctx) {\r\n    const options = this.options;\r\n    const {inner, outer} = boundingRects(this);\r\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\r\n    const inflateAmount = 0.33;\r\n    ctx.save();\r\n    if (outer.w !== inner.w || outer.h !== inner.h) {\r\n      ctx.beginPath();\r\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\r\n      ctx.clip();\r\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\r\n      ctx.fillStyle = options.borderColor;\r\n      ctx.fill('evenodd');\r\n    }\r\n    ctx.beginPath();\r\n    addRectPath(ctx, inflateRect(inner, inflateAmount, outer));\r\n    ctx.fillStyle = options.backgroundColor;\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n  inRange(mouseX, mouseY, useFinalPosition) {\r\n    return inRange(this, mouseX, mouseY, useFinalPosition);\r\n  }\r\n  inXRange(mouseX, useFinalPosition) {\r\n    return inRange(this, mouseX, null, useFinalPosition);\r\n  }\r\n  inYRange(mouseY, useFinalPosition) {\r\n    return inRange(this, null, mouseY, useFinalPosition);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\r\n    return {\r\n      x: horizontal ? (x + base) / 2 : x,\r\n      y: horizontal ? y : (y + base) / 2\r\n    };\r\n  }\r\n  getRange(axis) {\r\n    return axis === 'x' ? this.width / 2 : this.height / 2;\r\n  }\r\n}\r\nBarElement.id = 'bar';\r\nBarElement.defaults = {\r\n  borderSkipped: 'start',\r\n  borderWidth: 0,\r\n  borderRadius: 0,\r\n  enableBorderRadius: true,\r\n  pointStyle: undefined\r\n};\r\nBarElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\n\r\nvar elements = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nArcElement: ArcElement,\r\nLineElement: LineElement,\r\nPointElement: PointElement,\r\nBarElement: BarElement\r\n});\r\n\r\nfunction lttbDecimation(data, start, count, availableWidth, options) {\r\n  const samples = options.samples || availableWidth;\r\n  if (samples >= count) {\r\n    return data.slice(start, start + count);\r\n  }\r\n  const decimated = [];\r\n  const bucketWidth = (count - 2) / (samples - 2);\r\n  let sampledIndex = 0;\r\n  const endIndex = start + count - 1;\r\n  let a = start;\r\n  let i, maxAreaPoint, maxArea, area, nextA;\r\n  decimated[sampledIndex++] = data[a];\r\n  for (i = 0; i < samples - 2; i++) {\r\n    let avgX = 0;\r\n    let avgY = 0;\r\n    let j;\r\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\r\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\r\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\r\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\r\n      avgX += data[j].x;\r\n      avgY += data[j].y;\r\n    }\r\n    avgX /= avgRangeLength;\r\n    avgY /= avgRangeLength;\r\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\r\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\r\n    const {x: pointAx, y: pointAy} = data[a];\r\n    maxArea = area = -1;\r\n    for (j = rangeOffs; j < rangeTo; j++) {\r\n      area = 0.5 * Math.abs(\r\n        (pointAx - avgX) * (data[j].y - pointAy) -\r\n        (pointAx - data[j].x) * (avgY - pointAy)\r\n      );\r\n      if (area > maxArea) {\r\n        maxArea = area;\r\n        maxAreaPoint = data[j];\r\n        nextA = j;\r\n      }\r\n    }\r\n    decimated[sampledIndex++] = maxAreaPoint;\r\n    a = nextA;\r\n  }\r\n  decimated[sampledIndex++] = data[endIndex];\r\n  return decimated;\r\n}\r\nfunction minMaxDecimation(data, start, count, availableWidth) {\r\n  let avgX = 0;\r\n  let countX = 0;\r\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\r\n  const decimated = [];\r\n  const endIndex = start + count - 1;\r\n  const xMin = data[start].x;\r\n  const xMax = data[endIndex].x;\r\n  const dx = xMax - xMin;\r\n  for (i = start; i < start + count; ++i) {\r\n    point = data[i];\r\n    x = (point.x - xMin) / dx * availableWidth;\r\n    y = point.y;\r\n    const truncX = x | 0;\r\n    if (truncX === prevX) {\r\n      if (y < minY) {\r\n        minY = y;\r\n        minIndex = i;\r\n      } else if (y > maxY) {\r\n        maxY = y;\r\n        maxIndex = i;\r\n      }\r\n      avgX = (countX * avgX + point.x) / ++countX;\r\n    } else {\r\n      const lastIndex = i - 1;\r\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\r\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\r\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\r\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\r\n          decimated.push({\r\n            ...data[intermediateIndex1],\r\n            x: avgX,\r\n          });\r\n        }\r\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\r\n          decimated.push({\r\n            ...data[intermediateIndex2],\r\n            x: avgX\r\n          });\r\n        }\r\n      }\r\n      if (i > 0 && lastIndex !== startIndex) {\r\n        decimated.push(data[lastIndex]);\r\n      }\r\n      decimated.push(point);\r\n      prevX = truncX;\r\n      countX = 0;\r\n      minY = maxY = y;\r\n      minIndex = maxIndex = startIndex = i;\r\n    }\r\n  }\r\n  return decimated;\r\n}\r\nfunction cleanDecimatedDataset(dataset) {\r\n  if (dataset._decimated) {\r\n    const data = dataset._data;\r\n    delete dataset._decimated;\r\n    delete dataset._data;\r\n    Object.defineProperty(dataset, 'data', {value: data});\r\n  }\r\n}\r\nfunction cleanDecimatedData(chart) {\r\n  chart.data.datasets.forEach((dataset) => {\r\n    cleanDecimatedDataset(dataset);\r\n  });\r\n}\r\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\r\n  const pointCount = points.length;\r\n  let start = 0;\r\n  let count;\r\n  const {iScale} = meta;\r\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\r\n  if (minDefined) {\r\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\r\n  }\r\n  if (maxDefined) {\r\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\r\n  } else {\r\n    count = pointCount - start;\r\n  }\r\n  return {start, count};\r\n}\r\nvar plugin_decimation = {\r\n  id: 'decimation',\r\n  defaults: {\r\n    algorithm: 'min-max',\r\n    enabled: false,\r\n  },\r\n  beforeElementsUpdate: (chart, args, options) => {\r\n    if (!options.enabled) {\r\n      cleanDecimatedData(chart);\r\n      return;\r\n    }\r\n    const availableWidth = chart.width;\r\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\r\n      const {_data, indexAxis} = dataset;\r\n      const meta = chart.getDatasetMeta(datasetIndex);\r\n      const data = _data || dataset.data;\r\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\r\n        return;\r\n      }\r\n      if (meta.type !== 'line') {\r\n        return;\r\n      }\r\n      const xAxis = chart.scales[meta.xAxisID];\r\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\r\n        return;\r\n      }\r\n      if (chart.options.parsing) {\r\n        return;\r\n      }\r\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\r\n      const threshold = options.threshold || 4 * availableWidth;\r\n      if (count <= threshold) {\r\n        cleanDecimatedDataset(dataset);\r\n        return;\r\n      }\r\n      if (isNullOrUndef(_data)) {\r\n        dataset._data = data;\r\n        delete dataset.data;\r\n        Object.defineProperty(dataset, 'data', {\r\n          configurable: true,\r\n          enumerable: true,\r\n          get: function() {\r\n            return this._decimated;\r\n          },\r\n          set: function(d) {\r\n            this._data = d;\r\n          }\r\n        });\r\n      }\r\n      let decimated;\r\n      switch (options.algorithm) {\r\n      case 'lttb':\r\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\r\n        break;\r\n      case 'min-max':\r\n        decimated = minMaxDecimation(data, start, count, availableWidth);\r\n        break;\r\n      default:\r\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\r\n      }\r\n      dataset._decimated = decimated;\r\n    });\r\n  },\r\n  destroy(chart) {\r\n    cleanDecimatedData(chart);\r\n  }\r\n};\r\n\r\nfunction getLineByIndex(chart, index) {\r\n  const meta = chart.getDatasetMeta(index);\r\n  const visible = meta && chart.isDatasetVisible(index);\r\n  return visible ? meta.dataset : null;\r\n}\r\nfunction parseFillOption(line) {\r\n  const options = line.options;\r\n  const fillOption = options.fill;\r\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\r\n  if (fill === undefined) {\r\n    fill = !!options.backgroundColor;\r\n  }\r\n  if (fill === false || fill === null) {\r\n    return false;\r\n  }\r\n  if (fill === true) {\r\n    return 'origin';\r\n  }\r\n  return fill;\r\n}\r\nfunction decodeFill(line, index, count) {\r\n  const fill = parseFillOption(line);\r\n  if (isObject(fill)) {\r\n    return isNaN(fill.value) ? false : fill;\r\n  }\r\n  let target = parseFloat(fill);\r\n  if (isNumberFinite(target) && Math.floor(target) === target) {\r\n    if (fill[0] === '-' || fill[0] === '+') {\r\n      target = index + target;\r\n    }\r\n    if (target === index || target < 0 || target >= count) {\r\n      return false;\r\n    }\r\n    return target;\r\n  }\r\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\r\n}\r\nfunction computeLinearBoundary(source) {\r\n  const {scale = {}, fill} = source;\r\n  let target = null;\r\n  let horizontal;\r\n  if (fill === 'start') {\r\n    target = scale.bottom;\r\n  } else if (fill === 'end') {\r\n    target = scale.top;\r\n  } else if (isObject(fill)) {\r\n    target = scale.getPixelForValue(fill.value);\r\n  } else if (scale.getBasePixel) {\r\n    target = scale.getBasePixel();\r\n  }\r\n  if (isNumberFinite(target)) {\r\n    horizontal = scale.isHorizontal();\r\n    return {\r\n      x: horizontal ? target : null,\r\n      y: horizontal ? null : target\r\n    };\r\n  }\r\n  return null;\r\n}\r\nclass simpleArc {\r\n  constructor(opts) {\r\n    this.x = opts.x;\r\n    this.y = opts.y;\r\n    this.radius = opts.radius;\r\n  }\r\n  pathSegment(ctx, bounds, opts) {\r\n    const {x, y, radius} = this;\r\n    bounds = bounds || {start: 0, end: TAU};\r\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\r\n    return !opts.bounds;\r\n  }\r\n  interpolate(point) {\r\n    const {x, y, radius} = this;\r\n    const angle = point.angle;\r\n    return {\r\n      x: x + Math.cos(angle) * radius,\r\n      y: y + Math.sin(angle) * radius,\r\n      angle\r\n    };\r\n  }\r\n}\r\nfunction computeCircularBoundary(source) {\r\n  const {scale, fill} = source;\r\n  const options = scale.options;\r\n  const length = scale.getLabels().length;\r\n  const target = [];\r\n  const start = options.reverse ? scale.max : scale.min;\r\n  const end = options.reverse ? scale.min : scale.max;\r\n  let i, center, value;\r\n  if (fill === 'start') {\r\n    value = start;\r\n  } else if (fill === 'end') {\r\n    value = end;\r\n  } else if (isObject(fill)) {\r\n    value = fill.value;\r\n  } else {\r\n    value = scale.getBaseValue();\r\n  }\r\n  if (options.grid.circular) {\r\n    center = scale.getPointPositionForValue(0, start);\r\n    return new simpleArc({\r\n      x: center.x,\r\n      y: center.y,\r\n      radius: scale.getDistanceFromCenterForValue(value)\r\n    });\r\n  }\r\n  for (i = 0; i < length; ++i) {\r\n    target.push(scale.getPointPositionForValue(i, value));\r\n  }\r\n  return target;\r\n}\r\nfunction computeBoundary(source) {\r\n  const scale = source.scale || {};\r\n  if (scale.getPointPositionForValue) {\r\n    return computeCircularBoundary(source);\r\n  }\r\n  return computeLinearBoundary(source);\r\n}\r\nfunction findSegmentEnd(start, end, points) {\r\n  for (;end > start; end--) {\r\n    const point = points[end];\r\n    if (!isNaN(point.x) && !isNaN(point.y)) {\r\n      break;\r\n    }\r\n  }\r\n  return end;\r\n}\r\nfunction pointsFromSegments(boundary, line) {\r\n  const {x = null, y = null} = boundary || {};\r\n  const linePoints = line.points;\r\n  const points = [];\r\n  line.segments.forEach(({start, end}) => {\r\n    end = findSegmentEnd(start, end, linePoints);\r\n    const first = linePoints[start];\r\n    const last = linePoints[end];\r\n    if (y !== null) {\r\n      points.push({x: first.x, y});\r\n      points.push({x: last.x, y});\r\n    } else if (x !== null) {\r\n      points.push({x, y: first.y});\r\n      points.push({x, y: last.y});\r\n    }\r\n  });\r\n  return points;\r\n}\r\nfunction buildStackLine(source) {\r\n  const {chart, scale, index, line} = source;\r\n  const points = [];\r\n  const segments = line.segments;\r\n  const sourcePoints = line.points;\r\n  const linesBelow = getLinesBelow(chart, index);\r\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const segment = segments[i];\r\n    for (let j = segment.start; j <= segment.end; j++) {\r\n      addPointsBelow(points, sourcePoints[j], linesBelow);\r\n    }\r\n  }\r\n  return new LineElement({points, options: {}});\r\n}\r\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\r\nfunction getLinesBelow(chart, index) {\r\n  const below = [];\r\n  const metas = chart.getSortedVisibleDatasetMetas();\r\n  for (let i = 0; i < metas.length; i++) {\r\n    const meta = metas[i];\r\n    if (meta.index === index) {\r\n      break;\r\n    }\r\n    if (isLineAndNotInHideAnimation(meta)) {\r\n      below.unshift(meta.dataset);\r\n    }\r\n  }\r\n  return below;\r\n}\r\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\r\n  const postponed = [];\r\n  for (let j = 0; j < linesBelow.length; j++) {\r\n    const line = linesBelow[j];\r\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\r\n    if (!point || (first && last)) {\r\n      continue;\r\n    }\r\n    if (first) {\r\n      postponed.unshift(point);\r\n    } else {\r\n      points.push(point);\r\n      if (!last) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  points.push(...postponed);\r\n}\r\nfunction findPoint(line, sourcePoint, property) {\r\n  const point = line.interpolate(sourcePoint, property);\r\n  if (!point) {\r\n    return {};\r\n  }\r\n  const pointValue = point[property];\r\n  const segments = line.segments;\r\n  const linePoints = line.points;\r\n  let first = false;\r\n  let last = false;\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const segment = segments[i];\r\n    const firstValue = linePoints[segment.start][property];\r\n    const lastValue = linePoints[segment.end][property];\r\n    if (pointValue >= firstValue && pointValue <= lastValue) {\r\n      first = pointValue === firstValue;\r\n      last = pointValue === lastValue;\r\n      break;\r\n    }\r\n  }\r\n  return {first, last, point};\r\n}\r\nfunction getTarget(source) {\r\n  const {chart, fill, line} = source;\r\n  if (isNumberFinite(fill)) {\r\n    return getLineByIndex(chart, fill);\r\n  }\r\n  if (fill === 'stack') {\r\n    return buildStackLine(source);\r\n  }\r\n  if (fill === 'shape') {\r\n    return true;\r\n  }\r\n  const boundary = computeBoundary(source);\r\n  if (boundary instanceof simpleArc) {\r\n    return boundary;\r\n  }\r\n  return createBoundaryLine(boundary, line);\r\n}\r\nfunction createBoundaryLine(boundary, line) {\r\n  let points = [];\r\n  let _loop = false;\r\n  if (isArray(boundary)) {\r\n    _loop = true;\r\n    points = boundary;\r\n  } else {\r\n    points = pointsFromSegments(boundary, line);\r\n  }\r\n  return points.length ? new LineElement({\r\n    points,\r\n    options: {tension: 0},\r\n    _loop,\r\n    _fullLoop: _loop\r\n  }) : null;\r\n}\r\nfunction resolveTarget(sources, index, propagate) {\r\n  const source = sources[index];\r\n  let fill = source.fill;\r\n  const visited = [index];\r\n  let target;\r\n  if (!propagate) {\r\n    return fill;\r\n  }\r\n  while (fill !== false && visited.indexOf(fill) === -1) {\r\n    if (!isNumberFinite(fill)) {\r\n      return fill;\r\n    }\r\n    target = sources[fill];\r\n    if (!target) {\r\n      return false;\r\n    }\r\n    if (target.visible) {\r\n      return fill;\r\n    }\r\n    visited.push(fill);\r\n    fill = target.fill;\r\n  }\r\n  return false;\r\n}\r\nfunction _clip(ctx, target, clipY) {\r\n  ctx.beginPath();\r\n  target.path(ctx);\r\n  ctx.lineTo(target.last().x, clipY);\r\n  ctx.lineTo(target.first().x, clipY);\r\n  ctx.closePath();\r\n  ctx.clip();\r\n}\r\nfunction getBounds(property, first, last, loop) {\r\n  if (loop) {\r\n    return;\r\n  }\r\n  let start = first[property];\r\n  let end = last[property];\r\n  if (property === 'angle') {\r\n    start = _normalizeAngle(start);\r\n    end = _normalizeAngle(end);\r\n  }\r\n  return {property, start, end};\r\n}\r\nfunction _getEdge(a, b, prop, fn) {\r\n  if (a && b) {\r\n    return fn(a[prop], b[prop]);\r\n  }\r\n  return a ? a[prop] : b ? b[prop] : 0;\r\n}\r\nfunction _segments(line, target, property) {\r\n  const segments = line.segments;\r\n  const points = line.points;\r\n  const tpoints = target.points;\r\n  const parts = [];\r\n  for (const segment of segments) {\r\n    let {start, end} = segment;\r\n    end = findSegmentEnd(start, end, points);\r\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\r\n    if (!target.segments) {\r\n      parts.push({\r\n        source: segment,\r\n        target: bounds,\r\n        start: points[start],\r\n        end: points[end]\r\n      });\r\n      continue;\r\n    }\r\n    const targetSegments = _boundSegments(target, bounds);\r\n    for (const tgt of targetSegments) {\r\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\r\n      const fillSources = _boundSegment(segment, points, subBounds);\r\n      for (const fillSource of fillSources) {\r\n        parts.push({\r\n          source: fillSource,\r\n          target: tgt,\r\n          start: {\r\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\r\n          },\r\n          end: {\r\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return parts;\r\n}\r\nfunction clipBounds(ctx, scale, bounds) {\r\n  const {top, bottom} = scale.chart.chartArea;\r\n  const {property, start, end} = bounds || {};\r\n  if (property === 'x') {\r\n    ctx.beginPath();\r\n    ctx.rect(start, top, end - start, bottom - top);\r\n    ctx.clip();\r\n  }\r\n}\r\nfunction interpolatedLineTo(ctx, target, point, property) {\r\n  const interpolatedPoint = target.interpolate(point, property);\r\n  if (interpolatedPoint) {\r\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\r\n  }\r\n}\r\nfunction _fill(ctx, cfg) {\r\n  const {line, target, property, color, scale} = cfg;\r\n  const segments = _segments(line, target, property);\r\n  for (const {source: src, target: tgt, start, end} of segments) {\r\n    const {style: {backgroundColor = color} = {}} = src;\r\n    const notShape = target !== true;\r\n    ctx.save();\r\n    ctx.fillStyle = backgroundColor;\r\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\r\n    ctx.beginPath();\r\n    const lineLoop = !!line.pathSegment(ctx, src);\r\n    let loop;\r\n    if (notShape) {\r\n      if (lineLoop) {\r\n        ctx.closePath();\r\n      } else {\r\n        interpolatedLineTo(ctx, target, end, property);\r\n      }\r\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\r\n      loop = lineLoop && targetLoop;\r\n      if (!loop) {\r\n        interpolatedLineTo(ctx, target, start, property);\r\n      }\r\n    }\r\n    ctx.closePath();\r\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\r\n    ctx.restore();\r\n  }\r\n}\r\nfunction doFill(ctx, cfg) {\r\n  const {line, target, above, below, area, scale} = cfg;\r\n  const property = line._loop ? 'angle' : cfg.axis;\r\n  ctx.save();\r\n  if (property === 'x' && below !== above) {\r\n    _clip(ctx, target, area.top);\r\n    _fill(ctx, {line, target, color: above, scale, property});\r\n    ctx.restore();\r\n    ctx.save();\r\n    _clip(ctx, target, area.bottom);\r\n  }\r\n  _fill(ctx, {line, target, color: below, scale, property});\r\n  ctx.restore();\r\n}\r\nfunction drawfill(ctx, source, area) {\r\n  const target = getTarget(source);\r\n  const {line, scale, axis} = source;\r\n  const lineOpts = line.options;\r\n  const fillOption = lineOpts.fill;\r\n  const color = lineOpts.backgroundColor;\r\n  const {above = color, below = color} = fillOption || {};\r\n  if (target && line.points.length) {\r\n    clipArea(ctx, area);\r\n    doFill(ctx, {line, target, above, below, area, scale, axis});\r\n    unclipArea(ctx);\r\n  }\r\n}\r\nvar plugin_filler = {\r\n  id: 'filler',\r\n  afterDatasetsUpdate(chart, _args, options) {\r\n    const count = (chart.data.datasets || []).length;\r\n    const sources = [];\r\n    let meta, i, line, source;\r\n    for (i = 0; i < count; ++i) {\r\n      meta = chart.getDatasetMeta(i);\r\n      line = meta.dataset;\r\n      source = null;\r\n      if (line && line.options && line instanceof LineElement) {\r\n        source = {\r\n          visible: chart.isDatasetVisible(i),\r\n          index: i,\r\n          fill: decodeFill(line, i, count),\r\n          chart,\r\n          axis: meta.controller.options.indexAxis,\r\n          scale: meta.vScale,\r\n          line,\r\n        };\r\n      }\r\n      meta.$filler = source;\r\n      sources.push(source);\r\n    }\r\n    for (i = 0; i < count; ++i) {\r\n      source = sources[i];\r\n      if (!source || source.fill === false) {\r\n        continue;\r\n      }\r\n      source.fill = resolveTarget(sources, i, options.propagate);\r\n    }\r\n  },\r\n  beforeDraw(chart, _args, options) {\r\n    const draw = options.drawTime === 'beforeDraw';\r\n    const metasets = chart.getSortedVisibleDatasetMetas();\r\n    const area = chart.chartArea;\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      const source = metasets[i].$filler;\r\n      if (!source) {\r\n        continue;\r\n      }\r\n      source.line.updateControlPoints(area, source.axis);\r\n      if (draw) {\r\n        drawfill(chart.ctx, source, area);\r\n      }\r\n    }\r\n  },\r\n  beforeDatasetsDraw(chart, _args, options) {\r\n    if (options.drawTime !== 'beforeDatasetsDraw') {\r\n      return;\r\n    }\r\n    const metasets = chart.getSortedVisibleDatasetMetas();\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      const source = metasets[i].$filler;\r\n      if (source) {\r\n        drawfill(chart.ctx, source, chart.chartArea);\r\n      }\r\n    }\r\n  },\r\n  beforeDatasetDraw(chart, args, options) {\r\n    const source = args.meta.$filler;\r\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\r\n      return;\r\n    }\r\n    drawfill(chart.ctx, source, chart.chartArea);\r\n  },\r\n  defaults: {\r\n    propagate: true,\r\n    drawTime: 'beforeDatasetDraw'\r\n  }\r\n};\r\n\r\nconst getBoxSize = (labelOpts, fontSize) => {\r\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\r\n  if (labelOpts.usePointStyle) {\r\n    boxHeight = Math.min(boxHeight, fontSize);\r\n    boxWidth = Math.min(boxWidth, fontSize);\r\n  }\r\n  return {\r\n    boxWidth,\r\n    boxHeight,\r\n    itemHeight: Math.max(fontSize, boxHeight)\r\n  };\r\n};\r\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\r\nclass Legend extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this._added = false;\r\n    this.legendHitBoxes = [];\r\n    this._hoveredItem = null;\r\n    this.doughnutMode = false;\r\n    this.chart = config.chart;\r\n    this.options = config.options;\r\n    this.ctx = config.ctx;\r\n    this.legendItems = undefined;\r\n    this.columnSizes = undefined;\r\n    this.lineWidths = undefined;\r\n    this.maxHeight = undefined;\r\n    this.maxWidth = undefined;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.height = undefined;\r\n    this.width = undefined;\r\n    this._margins = undefined;\r\n    this.position = undefined;\r\n    this.weight = undefined;\r\n    this.fullSize = undefined;\r\n  }\r\n  update(maxWidth, maxHeight, margins) {\r\n    this.maxWidth = maxWidth;\r\n    this.maxHeight = maxHeight;\r\n    this._margins = margins;\r\n    this.setDimensions();\r\n    this.buildLabels();\r\n    this.fit();\r\n  }\r\n  setDimensions() {\r\n    if (this.isHorizontal()) {\r\n      this.width = this.maxWidth;\r\n      this.left = this._margins.left;\r\n      this.right = this.width;\r\n    } else {\r\n      this.height = this.maxHeight;\r\n      this.top = this._margins.top;\r\n      this.bottom = this.height;\r\n    }\r\n  }\r\n  buildLabels() {\r\n    const labelOpts = this.options.labels || {};\r\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\r\n    if (labelOpts.filter) {\r\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\r\n    }\r\n    if (labelOpts.sort) {\r\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\r\n    }\r\n    if (this.options.reverse) {\r\n      legendItems.reverse();\r\n    }\r\n    this.legendItems = legendItems;\r\n  }\r\n  fit() {\r\n    const {options, ctx} = this;\r\n    if (!options.display) {\r\n      this.width = this.height = 0;\r\n      return;\r\n    }\r\n    const labelOpts = options.labels;\r\n    const labelFont = toFont(labelOpts.font);\r\n    const fontSize = labelFont.size;\r\n    const titleHeight = this._computeTitleHeight();\r\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\r\n    let width, height;\r\n    ctx.font = labelFont.string;\r\n    if (this.isHorizontal()) {\r\n      width = this.maxWidth;\r\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\r\n    } else {\r\n      height = this.maxHeight;\r\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\r\n    }\r\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\r\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\r\n  }\r\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\r\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\r\n    const hitboxes = this.legendHitBoxes = [];\r\n    const lineWidths = this.lineWidths = [0];\r\n    const lineHeight = itemHeight + padding;\r\n    let totalHeight = titleHeight;\r\n    ctx.textAlign = 'left';\r\n    ctx.textBaseline = 'middle';\r\n    let row = -1;\r\n    let top = -lineHeight;\r\n    this.legendItems.forEach((legendItem, i) => {\r\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\r\n        totalHeight += lineHeight;\r\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\r\n        top += lineHeight;\r\n        row++;\r\n      }\r\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\r\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\r\n    });\r\n    return totalHeight;\r\n  }\r\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\r\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\r\n    const hitboxes = this.legendHitBoxes = [];\r\n    const columnSizes = this.columnSizes = [];\r\n    const heightLimit = maxHeight - titleHeight;\r\n    let totalWidth = padding;\r\n    let currentColWidth = 0;\r\n    let currentColHeight = 0;\r\n    let left = 0;\r\n    let col = 0;\r\n    this.legendItems.forEach((legendItem, i) => {\r\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\r\n        totalWidth += currentColWidth + padding;\r\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\r\n        left += currentColWidth + padding;\r\n        col++;\r\n        currentColWidth = currentColHeight = 0;\r\n      }\r\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\r\n      currentColWidth = Math.max(currentColWidth, itemWidth);\r\n      currentColHeight += itemHeight + padding;\r\n    });\r\n    totalWidth += currentColWidth;\r\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\r\n    return totalWidth;\r\n  }\r\n  adjustHitBoxes() {\r\n    if (!this.options.display) {\r\n      return;\r\n    }\r\n    const titleHeight = this._computeTitleHeight();\r\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\r\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\r\n    if (this.isHorizontal()) {\r\n      let row = 0;\r\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\r\n      for (const hitbox of hitboxes) {\r\n        if (row !== hitbox.row) {\r\n          row = hitbox.row;\r\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\r\n        }\r\n        hitbox.top += this.top + titleHeight + padding;\r\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\r\n        left += hitbox.width + padding;\r\n      }\r\n    } else {\r\n      let col = 0;\r\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\r\n      for (const hitbox of hitboxes) {\r\n        if (hitbox.col !== col) {\r\n          col = hitbox.col;\r\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\r\n        }\r\n        hitbox.top = top;\r\n        hitbox.left += this.left + padding;\r\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\r\n        top += hitbox.height + padding;\r\n      }\r\n    }\r\n  }\r\n  isHorizontal() {\r\n    return this.options.position === 'top' || this.options.position === 'bottom';\r\n  }\r\n  draw() {\r\n    if (this.options.display) {\r\n      const ctx = this.ctx;\r\n      clipArea(ctx, this);\r\n      this._draw();\r\n      unclipArea(ctx);\r\n    }\r\n  }\r\n  _draw() {\r\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\r\n    const {align, labels: labelOpts} = opts;\r\n    const defaultColor = defaults.color;\r\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\r\n    const labelFont = toFont(labelOpts.font);\r\n    const {color: fontColor, padding} = labelOpts;\r\n    const fontSize = labelFont.size;\r\n    const halfFontSize = fontSize / 2;\r\n    let cursor;\r\n    this.drawTitle();\r\n    ctx.textAlign = rtlHelper.textAlign('left');\r\n    ctx.textBaseline = 'middle';\r\n    ctx.lineWidth = 0.5;\r\n    ctx.font = labelFont.string;\r\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\r\n    const drawLegendBox = function(x, y, legendItem) {\r\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\r\n        return;\r\n      }\r\n      ctx.save();\r\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\r\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\r\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\r\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\r\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\r\n      ctx.lineWidth = lineWidth;\r\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\r\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\r\n      if (labelOpts.usePointStyle) {\r\n        const drawOptions = {\r\n          radius: boxWidth * Math.SQRT2 / 2,\r\n          pointStyle: legendItem.pointStyle,\r\n          rotation: legendItem.rotation,\r\n          borderWidth: lineWidth\r\n        };\r\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\r\n        const centerY = y + halfFontSize;\r\n        drawPoint(ctx, drawOptions, centerX, centerY);\r\n      } else {\r\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\r\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\r\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\r\n        ctx.beginPath();\r\n        if (Object.values(borderRadius).some(v => v !== 0)) {\r\n          addRoundedRectPath(ctx, {\r\n            x: xBoxLeft,\r\n            y: yBoxTop,\r\n            w: boxWidth,\r\n            h: boxHeight,\r\n            radius: borderRadius,\r\n          });\r\n        } else {\r\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\r\n        }\r\n        ctx.fill();\r\n        if (lineWidth !== 0) {\r\n          ctx.stroke();\r\n        }\r\n      }\r\n      ctx.restore();\r\n    };\r\n    const fillText = function(x, y, legendItem) {\r\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\r\n        strikethrough: legendItem.hidden,\r\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\r\n      });\r\n    };\r\n    const isHorizontal = this.isHorizontal();\r\n    const titleHeight = this._computeTitleHeight();\r\n    if (isHorizontal) {\r\n      cursor = {\r\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\r\n        y: this.top + padding + titleHeight,\r\n        line: 0\r\n      };\r\n    } else {\r\n      cursor = {\r\n        x: this.left + padding,\r\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\r\n        line: 0\r\n      };\r\n    }\r\n    overrideTextDirection(this.ctx, opts.textDirection);\r\n    const lineHeight = itemHeight + padding;\r\n    this.legendItems.forEach((legendItem, i) => {\r\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\r\n      ctx.fillStyle = legendItem.fontColor || fontColor;\r\n      const textWidth = ctx.measureText(legendItem.text).width;\r\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\r\n      const width = boxWidth + halfFontSize + textWidth;\r\n      let x = cursor.x;\r\n      let y = cursor.y;\r\n      rtlHelper.setWidth(this.width);\r\n      if (isHorizontal) {\r\n        if (i > 0 && x + width + padding > this.right) {\r\n          y = cursor.y += lineHeight;\r\n          cursor.line++;\r\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\r\n        }\r\n      } else if (i > 0 && y + lineHeight > this.bottom) {\r\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\r\n        cursor.line++;\r\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\r\n      }\r\n      const realX = rtlHelper.x(x);\r\n      drawLegendBox(realX, y, legendItem);\r\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\r\n      fillText(rtlHelper.x(x), y, legendItem);\r\n      if (isHorizontal) {\r\n        cursor.x += width + padding;\r\n      } else {\r\n        cursor.y += lineHeight;\r\n      }\r\n    });\r\n    restoreTextDirection(this.ctx, opts.textDirection);\r\n  }\r\n  drawTitle() {\r\n    const opts = this.options;\r\n    const titleOpts = opts.title;\r\n    const titleFont = toFont(titleOpts.font);\r\n    const titlePadding = toPadding(titleOpts.padding);\r\n    if (!titleOpts.display) {\r\n      return;\r\n    }\r\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\r\n    const ctx = this.ctx;\r\n    const position = titleOpts.position;\r\n    const halfFontSize = titleFont.size / 2;\r\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\r\n    let y;\r\n    let left = this.left;\r\n    let maxWidth = this.width;\r\n    if (this.isHorizontal()) {\r\n      maxWidth = Math.max(...this.lineWidths);\r\n      y = this.top + topPaddingPlusHalfFontSize;\r\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\r\n    } else {\r\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\r\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\r\n    }\r\n    const x = _alignStartEnd(position, left, left + maxWidth);\r\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\r\n    ctx.textBaseline = 'middle';\r\n    ctx.strokeStyle = titleOpts.color;\r\n    ctx.fillStyle = titleOpts.color;\r\n    ctx.font = titleFont.string;\r\n    renderText(ctx, titleOpts.text, x, y, titleFont);\r\n  }\r\n  _computeTitleHeight() {\r\n    const titleOpts = this.options.title;\r\n    const titleFont = toFont(titleOpts.font);\r\n    const titlePadding = toPadding(titleOpts.padding);\r\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\r\n  }\r\n  _getLegendItemAt(x, y) {\r\n    let i, hitBox, lh;\r\n    if (x >= this.left && x <= this.right && y >= this.top && y <= this.bottom) {\r\n      lh = this.legendHitBoxes;\r\n      for (i = 0; i < lh.length; ++i) {\r\n        hitBox = lh[i];\r\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\r\n          return this.legendItems[i];\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  handleEvent(e) {\r\n    const opts = this.options;\r\n    if (!isListened(e.type, opts)) {\r\n      return;\r\n    }\r\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\r\n    if (e.type === 'mousemove') {\r\n      const previous = this._hoveredItem;\r\n      const sameItem = itemsEqual(previous, hoveredItem);\r\n      if (previous && !sameItem) {\r\n        callback(opts.onLeave, [e, previous, this], this);\r\n      }\r\n      this._hoveredItem = hoveredItem;\r\n      if (hoveredItem && !sameItem) {\r\n        callback(opts.onHover, [e, hoveredItem, this], this);\r\n      }\r\n    } else if (hoveredItem) {\r\n      callback(opts.onClick, [e, hoveredItem, this], this);\r\n    }\r\n  }\r\n}\r\nfunction isListened(type, opts) {\r\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\r\n    return true;\r\n  }\r\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nvar plugin_legend = {\r\n  id: 'legend',\r\n  _element: Legend,\r\n  start(chart, _args, options) {\r\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\r\n    layouts.configure(chart, legend, options);\r\n    layouts.addBox(chart, legend);\r\n  },\r\n  stop(chart) {\r\n    layouts.removeBox(chart, chart.legend);\r\n    delete chart.legend;\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    const legend = chart.legend;\r\n    layouts.configure(chart, legend, options);\r\n    legend.options = options;\r\n  },\r\n  afterUpdate(chart) {\r\n    const legend = chart.legend;\r\n    legend.buildLabels();\r\n    legend.adjustHitBoxes();\r\n  },\r\n  afterEvent(chart, args) {\r\n    if (!args.replay) {\r\n      chart.legend.handleEvent(args.event);\r\n    }\r\n  },\r\n  defaults: {\r\n    display: true,\r\n    position: 'top',\r\n    align: 'center',\r\n    fullSize: true,\r\n    reverse: false,\r\n    weight: 1000,\r\n    onClick(e, legendItem, legend) {\r\n      const index = legendItem.datasetIndex;\r\n      const ci = legend.chart;\r\n      if (ci.isDatasetVisible(index)) {\r\n        ci.hide(index);\r\n        legendItem.hidden = true;\r\n      } else {\r\n        ci.show(index);\r\n        legendItem.hidden = false;\r\n      }\r\n    },\r\n    onHover: null,\r\n    onLeave: null,\r\n    labels: {\r\n      color: (ctx) => ctx.chart.options.color,\r\n      boxWidth: 40,\r\n      padding: 10,\r\n      generateLabels(chart) {\r\n        const datasets = chart.data.datasets;\r\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\r\n        return chart._getSortedDatasetMetas().map((meta) => {\r\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\r\n          const borderWidth = toPadding(style.borderWidth);\r\n          return {\r\n            text: datasets[meta.index].label,\r\n            fillStyle: style.backgroundColor,\r\n            fontColor: color,\r\n            hidden: !meta.visible,\r\n            lineCap: style.borderCapStyle,\r\n            lineDash: style.borderDash,\r\n            lineDashOffset: style.borderDashOffset,\r\n            lineJoin: style.borderJoinStyle,\r\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\r\n            strokeStyle: style.borderColor,\r\n            pointStyle: pointStyle || style.pointStyle,\r\n            rotation: style.rotation,\r\n            textAlign: textAlign || style.textAlign,\r\n            borderRadius: 0,\r\n            datasetIndex: meta.index\r\n          };\r\n        }, this);\r\n      }\r\n    },\r\n    title: {\r\n      color: (ctx) => ctx.chart.options.color,\r\n      display: false,\r\n      position: 'center',\r\n      text: '',\r\n    }\r\n  },\r\n  descriptors: {\r\n    _scriptable: (name) => !name.startsWith('on'),\r\n    labels: {\r\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\r\n    }\r\n  },\r\n};\r\n\r\nclass Title extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this.chart = config.chart;\r\n    this.options = config.options;\r\n    this.ctx = config.ctx;\r\n    this._padding = undefined;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    this.position = undefined;\r\n    this.weight = undefined;\r\n    this.fullSize = undefined;\r\n  }\r\n  update(maxWidth, maxHeight) {\r\n    const opts = this.options;\r\n    this.left = 0;\r\n    this.top = 0;\r\n    if (!opts.display) {\r\n      this.width = this.height = this.right = this.bottom = 0;\r\n      return;\r\n    }\r\n    this.width = this.right = maxWidth;\r\n    this.height = this.bottom = maxHeight;\r\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\r\n    this._padding = toPadding(opts.padding);\r\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\r\n    if (this.isHorizontal()) {\r\n      this.height = textSize;\r\n    } else {\r\n      this.width = textSize;\r\n    }\r\n  }\r\n  isHorizontal() {\r\n    const pos = this.options.position;\r\n    return pos === 'top' || pos === 'bottom';\r\n  }\r\n  _drawArgs(offset) {\r\n    const {top, left, bottom, right, options} = this;\r\n    const align = options.align;\r\n    let rotation = 0;\r\n    let maxWidth, titleX, titleY;\r\n    if (this.isHorizontal()) {\r\n      titleX = _alignStartEnd(align, left, right);\r\n      titleY = top + offset;\r\n      maxWidth = right - left;\r\n    } else {\r\n      if (options.position === 'left') {\r\n        titleX = left + offset;\r\n        titleY = _alignStartEnd(align, bottom, top);\r\n        rotation = PI * -0.5;\r\n      } else {\r\n        titleX = right - offset;\r\n        titleY = _alignStartEnd(align, top, bottom);\r\n        rotation = PI * 0.5;\r\n      }\r\n      maxWidth = bottom - top;\r\n    }\r\n    return {titleX, titleY, maxWidth, rotation};\r\n  }\r\n  draw() {\r\n    const ctx = this.ctx;\r\n    const opts = this.options;\r\n    if (!opts.display) {\r\n      return;\r\n    }\r\n    const fontOpts = toFont(opts.font);\r\n    const lineHeight = fontOpts.lineHeight;\r\n    const offset = lineHeight / 2 + this._padding.top;\r\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\r\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\r\n      color: opts.color,\r\n      maxWidth,\r\n      rotation,\r\n      textAlign: _toLeftRightCenter(opts.align),\r\n      textBaseline: 'middle',\r\n      translation: [titleX, titleY],\r\n    });\r\n  }\r\n}\r\nfunction createTitle(chart, titleOpts) {\r\n  const title = new Title({\r\n    ctx: chart.ctx,\r\n    options: titleOpts,\r\n    chart\r\n  });\r\n  layouts.configure(chart, title, titleOpts);\r\n  layouts.addBox(chart, title);\r\n  chart.titleBlock = title;\r\n}\r\nvar plugin_title = {\r\n  id: 'title',\r\n  _element: Title,\r\n  start(chart, _args, options) {\r\n    createTitle(chart, options);\r\n  },\r\n  stop(chart) {\r\n    const titleBlock = chart.titleBlock;\r\n    layouts.removeBox(chart, titleBlock);\r\n    delete chart.titleBlock;\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    const title = chart.titleBlock;\r\n    layouts.configure(chart, title, options);\r\n    title.options = options;\r\n  },\r\n  defaults: {\r\n    align: 'center',\r\n    display: false,\r\n    font: {\r\n      weight: 'bold',\r\n    },\r\n    fullSize: true,\r\n    padding: 10,\r\n    position: 'top',\r\n    text: '',\r\n    weight: 2000\r\n  },\r\n  defaultRoutes: {\r\n    color: 'color'\r\n  },\r\n  descriptors: {\r\n    _scriptable: true,\r\n    _indexable: false,\r\n  },\r\n};\r\n\r\nconst map = new WeakMap();\r\nvar plugin_subtitle = {\r\n  id: 'subtitle',\r\n  start(chart, _args, options) {\r\n    const title = new Title({\r\n      ctx: chart.ctx,\r\n      options,\r\n      chart\r\n    });\r\n    layouts.configure(chart, title, options);\r\n    layouts.addBox(chart, title);\r\n    map.set(chart, title);\r\n  },\r\n  stop(chart) {\r\n    layouts.removeBox(chart, map.get(chart));\r\n    map.delete(chart);\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    const title = map.get(chart);\r\n    layouts.configure(chart, title, options);\r\n    title.options = options;\r\n  },\r\n  defaults: {\r\n    align: 'center',\r\n    display: false,\r\n    font: {\r\n      weight: 'normal',\r\n    },\r\n    fullSize: true,\r\n    padding: 0,\r\n    position: 'top',\r\n    text: '',\r\n    weight: 1500\r\n  },\r\n  defaultRoutes: {\r\n    color: 'color'\r\n  },\r\n  descriptors: {\r\n    _scriptable: true,\r\n    _indexable: false,\r\n  },\r\n};\r\n\r\nconst positioners = {\r\n  average(items) {\r\n    if (!items.length) {\r\n      return false;\r\n    }\r\n    let i, len;\r\n    let x = 0;\r\n    let y = 0;\r\n    let count = 0;\r\n    for (i = 0, len = items.length; i < len; ++i) {\r\n      const el = items[i].element;\r\n      if (el && el.hasValue()) {\r\n        const pos = el.tooltipPosition();\r\n        x += pos.x;\r\n        y += pos.y;\r\n        ++count;\r\n      }\r\n    }\r\n    return {\r\n      x: x / count,\r\n      y: y / count\r\n    };\r\n  },\r\n  nearest(items, eventPosition) {\r\n    if (!items.length) {\r\n      return false;\r\n    }\r\n    let x = eventPosition.x;\r\n    let y = eventPosition.y;\r\n    let minDistance = Number.POSITIVE_INFINITY;\r\n    let i, len, nearestElement;\r\n    for (i = 0, len = items.length; i < len; ++i) {\r\n      const el = items[i].element;\r\n      if (el && el.hasValue()) {\r\n        const center = el.getCenterPoint();\r\n        const d = distanceBetweenPoints(eventPosition, center);\r\n        if (d < minDistance) {\r\n          minDistance = d;\r\n          nearestElement = el;\r\n        }\r\n      }\r\n    }\r\n    if (nearestElement) {\r\n      const tp = nearestElement.tooltipPosition();\r\n      x = tp.x;\r\n      y = tp.y;\r\n    }\r\n    return {\r\n      x,\r\n      y\r\n    };\r\n  }\r\n};\r\nfunction pushOrConcat(base, toPush) {\r\n  if (toPush) {\r\n    if (isArray(toPush)) {\r\n      Array.prototype.push.apply(base, toPush);\r\n    } else {\r\n      base.push(toPush);\r\n    }\r\n  }\r\n  return base;\r\n}\r\nfunction splitNewlines(str) {\r\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\r\n    return str.split('\\n');\r\n  }\r\n  return str;\r\n}\r\nfunction createTooltipItem(chart, item) {\r\n  const {element, datasetIndex, index} = item;\r\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\r\n  const {label, value} = controller.getLabelAndValue(index);\r\n  return {\r\n    chart,\r\n    label,\r\n    parsed: controller.getParsed(index),\r\n    raw: chart.data.datasets[datasetIndex].data[index],\r\n    formattedValue: value,\r\n    dataset: controller.getDataset(),\r\n    dataIndex: index,\r\n    datasetIndex,\r\n    element\r\n  };\r\n}\r\nfunction getTooltipSize(tooltip, options) {\r\n  const ctx = tooltip._chart.ctx;\r\n  const {body, footer, title} = tooltip;\r\n  const {boxWidth, boxHeight} = options;\r\n  const bodyFont = toFont(options.bodyFont);\r\n  const titleFont = toFont(options.titleFont);\r\n  const footerFont = toFont(options.footerFont);\r\n  const titleLineCount = title.length;\r\n  const footerLineCount = footer.length;\r\n  const bodyLineItemCount = body.length;\r\n  const padding = toPadding(options.padding);\r\n  let height = padding.height;\r\n  let width = 0;\r\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\r\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\r\n  if (titleLineCount) {\r\n    height += titleLineCount * titleFont.lineHeight\r\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\r\n\t\t\t+ options.titleMarginBottom;\r\n  }\r\n  if (combinedBodyLength) {\r\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\r\n    height += bodyLineItemCount * bodyLineHeight\r\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\r\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\r\n  }\r\n  if (footerLineCount) {\r\n    height += options.footerMarginTop\r\n\t\t\t+ footerLineCount * footerFont.lineHeight\r\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\r\n  }\r\n  let widthPadding = 0;\r\n  const maxLineWidth = function(line) {\r\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\r\n  };\r\n  ctx.save();\r\n  ctx.font = titleFont.string;\r\n  each(tooltip.title, maxLineWidth);\r\n  ctx.font = bodyFont.string;\r\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\r\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\r\n  each(body, (bodyItem) => {\r\n    each(bodyItem.before, maxLineWidth);\r\n    each(bodyItem.lines, maxLineWidth);\r\n    each(bodyItem.after, maxLineWidth);\r\n  });\r\n  widthPadding = 0;\r\n  ctx.font = footerFont.string;\r\n  each(tooltip.footer, maxLineWidth);\r\n  ctx.restore();\r\n  width += padding.width;\r\n  return {width, height};\r\n}\r\nfunction determineYAlign(chart, size) {\r\n  const {y, height} = size;\r\n  if (y < height / 2) {\r\n    return 'top';\r\n  } else if (y > (chart.height - height / 2)) {\r\n    return 'bottom';\r\n  }\r\n  return 'center';\r\n}\r\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\r\n  const {x, width} = size;\r\n  const caret = options.caretSize + options.caretPadding;\r\n  if (xAlign === 'left' && x + width + caret > chart.width) {\r\n    return true;\r\n  }\r\n  if (xAlign === 'right' && x - width - caret < 0) {\r\n    return true;\r\n  }\r\n}\r\nfunction determineXAlign(chart, options, size, yAlign) {\r\n  const {x, width} = size;\r\n  const {width: chartWidth, chartArea: {left, right}} = chart;\r\n  let xAlign = 'center';\r\n  if (yAlign === 'center') {\r\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\r\n  } else if (x <= width / 2) {\r\n    xAlign = 'left';\r\n  } else if (x >= chartWidth - width / 2) {\r\n    xAlign = 'right';\r\n  }\r\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\r\n    xAlign = 'center';\r\n  }\r\n  return xAlign;\r\n}\r\nfunction determineAlignment(chart, options, size) {\r\n  const yAlign = options.yAlign || determineYAlign(chart, size);\r\n  return {\r\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\r\n    yAlign\r\n  };\r\n}\r\nfunction alignX(size, xAlign) {\r\n  let {x, width} = size;\r\n  if (xAlign === 'right') {\r\n    x -= width;\r\n  } else if (xAlign === 'center') {\r\n    x -= (width / 2);\r\n  }\r\n  return x;\r\n}\r\nfunction alignY(size, yAlign, paddingAndSize) {\r\n  let {y, height} = size;\r\n  if (yAlign === 'top') {\r\n    y += paddingAndSize;\r\n  } else if (yAlign === 'bottom') {\r\n    y -= height + paddingAndSize;\r\n  } else {\r\n    y -= (height / 2);\r\n  }\r\n  return y;\r\n}\r\nfunction getBackgroundPoint(options, size, alignment, chart) {\r\n  const {caretSize, caretPadding, cornerRadius} = options;\r\n  const {xAlign, yAlign} = alignment;\r\n  const paddingAndSize = caretSize + caretPadding;\r\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\r\n  let x = alignX(size, xAlign);\r\n  const y = alignY(size, yAlign, paddingAndSize);\r\n  if (yAlign === 'center') {\r\n    if (xAlign === 'left') {\r\n      x += paddingAndSize;\r\n    } else if (xAlign === 'right') {\r\n      x -= paddingAndSize;\r\n    }\r\n  } else if (xAlign === 'left') {\r\n    x -= Math.max(topLeft, bottomLeft) + caretPadding;\r\n  } else if (xAlign === 'right') {\r\n    x += Math.max(topRight, bottomRight) + caretPadding;\r\n  }\r\n  return {\r\n    x: _limitValue(x, 0, chart.width - size.width),\r\n    y: _limitValue(y, 0, chart.height - size.height)\r\n  };\r\n}\r\nfunction getAlignedX(tooltip, align, options) {\r\n  const padding = toPadding(options.padding);\r\n  return align === 'center'\r\n    ? tooltip.x + tooltip.width / 2\r\n    : align === 'right'\r\n      ? tooltip.x + tooltip.width - padding.right\r\n      : tooltip.x + padding.left;\r\n}\r\nfunction getBeforeAfterBodyLines(callback) {\r\n  return pushOrConcat([], splitNewlines(callback));\r\n}\r\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\r\n  return Object.assign(Object.create(parent), {\r\n    tooltip,\r\n    tooltipItems,\r\n    type: 'tooltip'\r\n  });\r\n}\r\nfunction overrideCallbacks(callbacks, context) {\r\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\r\n  return override ? callbacks.override(override) : callbacks;\r\n}\r\nclass Tooltip extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this.opacity = 0;\r\n    this._active = [];\r\n    this._chart = config._chart;\r\n    this._eventPosition = undefined;\r\n    this._size = undefined;\r\n    this._cachedAnimations = undefined;\r\n    this._tooltipItems = [];\r\n    this.$animations = undefined;\r\n    this.$context = undefined;\r\n    this.options = config.options;\r\n    this.dataPoints = undefined;\r\n    this.title = undefined;\r\n    this.beforeBody = undefined;\r\n    this.body = undefined;\r\n    this.afterBody = undefined;\r\n    this.footer = undefined;\r\n    this.xAlign = undefined;\r\n    this.yAlign = undefined;\r\n    this.x = undefined;\r\n    this.y = undefined;\r\n    this.height = undefined;\r\n    this.width = undefined;\r\n    this.caretX = undefined;\r\n    this.caretY = undefined;\r\n    this.labelColors = undefined;\r\n    this.labelPointStyles = undefined;\r\n    this.labelTextColors = undefined;\r\n  }\r\n  initialize(options) {\r\n    this.options = options;\r\n    this._cachedAnimations = undefined;\r\n    this.$context = undefined;\r\n  }\r\n  _resolveAnimations() {\r\n    const cached = this._cachedAnimations;\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    const chart = this._chart;\r\n    const options = this.options.setContext(this.getContext());\r\n    const opts = options.enabled && chart.options.animation && options.animations;\r\n    const animations = new Animations(this._chart, opts);\r\n    if (opts._cacheable) {\r\n      this._cachedAnimations = Object.freeze(animations);\r\n    }\r\n    return animations;\r\n  }\r\n  getContext() {\r\n    return this.$context ||\r\n\t\t\t(this.$context = createTooltipContext(this._chart.getContext(), this, this._tooltipItems));\r\n  }\r\n  getTitle(context, options) {\r\n    const {callbacks} = options;\r\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\r\n    const title = callbacks.title.apply(this, [context]);\r\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\r\n    let lines = [];\r\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\r\n    lines = pushOrConcat(lines, splitNewlines(title));\r\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\r\n    return lines;\r\n  }\r\n  getBeforeBody(tooltipItems, options) {\r\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\r\n  }\r\n  getBody(tooltipItems, options) {\r\n    const {callbacks} = options;\r\n    const bodyItems = [];\r\n    each(tooltipItems, (context) => {\r\n      const bodyItem = {\r\n        before: [],\r\n        lines: [],\r\n        after: []\r\n      };\r\n      const scoped = overrideCallbacks(callbacks, context);\r\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\r\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\r\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\r\n      bodyItems.push(bodyItem);\r\n    });\r\n    return bodyItems;\r\n  }\r\n  getAfterBody(tooltipItems, options) {\r\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\r\n  }\r\n  getFooter(tooltipItems, options) {\r\n    const {callbacks} = options;\r\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\r\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\r\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\r\n    let lines = [];\r\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\r\n    lines = pushOrConcat(lines, splitNewlines(footer));\r\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\r\n    return lines;\r\n  }\r\n  _createItems(options) {\r\n    const active = this._active;\r\n    const data = this._chart.data;\r\n    const labelColors = [];\r\n    const labelPointStyles = [];\r\n    const labelTextColors = [];\r\n    let tooltipItems = [];\r\n    let i, len;\r\n    for (i = 0, len = active.length; i < len; ++i) {\r\n      tooltipItems.push(createTooltipItem(this._chart, active[i]));\r\n    }\r\n    if (options.filter) {\r\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\r\n    }\r\n    if (options.itemSort) {\r\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\r\n    }\r\n    each(tooltipItems, (context) => {\r\n      const scoped = overrideCallbacks(options.callbacks, context);\r\n      labelColors.push(scoped.labelColor.call(this, context));\r\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\r\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\r\n    });\r\n    this.labelColors = labelColors;\r\n    this.labelPointStyles = labelPointStyles;\r\n    this.labelTextColors = labelTextColors;\r\n    this.dataPoints = tooltipItems;\r\n    return tooltipItems;\r\n  }\r\n  update(changed, replay) {\r\n    const options = this.options.setContext(this.getContext());\r\n    const active = this._active;\r\n    let properties;\r\n    let tooltipItems = [];\r\n    if (!active.length) {\r\n      if (this.opacity !== 0) {\r\n        properties = {\r\n          opacity: 0\r\n        };\r\n      }\r\n    } else {\r\n      const position = positioners[options.position].call(this, active, this._eventPosition);\r\n      tooltipItems = this._createItems(options);\r\n      this.title = this.getTitle(tooltipItems, options);\r\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\r\n      this.body = this.getBody(tooltipItems, options);\r\n      this.afterBody = this.getAfterBody(tooltipItems, options);\r\n      this.footer = this.getFooter(tooltipItems, options);\r\n      const size = this._size = getTooltipSize(this, options);\r\n      const positionAndSize = Object.assign({}, position, size);\r\n      const alignment = determineAlignment(this._chart, options, positionAndSize);\r\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this._chart);\r\n      this.xAlign = alignment.xAlign;\r\n      this.yAlign = alignment.yAlign;\r\n      properties = {\r\n        opacity: 1,\r\n        x: backgroundPoint.x,\r\n        y: backgroundPoint.y,\r\n        width: size.width,\r\n        height: size.height,\r\n        caretX: position.x,\r\n        caretY: position.y\r\n      };\r\n    }\r\n    this._tooltipItems = tooltipItems;\r\n    this.$context = undefined;\r\n    if (properties) {\r\n      this._resolveAnimations().update(this, properties);\r\n    }\r\n    if (changed && options.external) {\r\n      options.external.call(this, {chart: this._chart, tooltip: this, replay});\r\n    }\r\n  }\r\n  drawCaret(tooltipPoint, ctx, size, options) {\r\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\r\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\r\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\r\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\r\n  }\r\n  getCaretPosition(tooltipPoint, size, options) {\r\n    const {xAlign, yAlign} = this;\r\n    const {caretSize, cornerRadius} = options;\r\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\r\n    const {x: ptX, y: ptY} = tooltipPoint;\r\n    const {width, height} = size;\r\n    let x1, x2, x3, y1, y2, y3;\r\n    if (yAlign === 'center') {\r\n      y2 = ptY + (height / 2);\r\n      if (xAlign === 'left') {\r\n        x1 = ptX;\r\n        x2 = x1 - caretSize;\r\n        y1 = y2 + caretSize;\r\n        y3 = y2 - caretSize;\r\n      } else {\r\n        x1 = ptX + width;\r\n        x2 = x1 + caretSize;\r\n        y1 = y2 - caretSize;\r\n        y3 = y2 + caretSize;\r\n      }\r\n      x3 = x1;\r\n    } else {\r\n      if (xAlign === 'left') {\r\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\r\n      } else if (xAlign === 'right') {\r\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\r\n      } else {\r\n        x2 = this.caretX;\r\n      }\r\n      if (yAlign === 'top') {\r\n        y1 = ptY;\r\n        y2 = y1 - caretSize;\r\n        x1 = x2 - caretSize;\r\n        x3 = x2 + caretSize;\r\n      } else {\r\n        y1 = ptY + height;\r\n        y2 = y1 + caretSize;\r\n        x1 = x2 + caretSize;\r\n        x3 = x2 - caretSize;\r\n      }\r\n      y3 = y1;\r\n    }\r\n    return {x1, x2, x3, y1, y2, y3};\r\n  }\r\n  drawTitle(pt, ctx, options) {\r\n    const title = this.title;\r\n    const length = title.length;\r\n    let titleFont, titleSpacing, i;\r\n    if (length) {\r\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\r\n      pt.x = getAlignedX(this, options.titleAlign, options);\r\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\r\n      ctx.textBaseline = 'middle';\r\n      titleFont = toFont(options.titleFont);\r\n      titleSpacing = options.titleSpacing;\r\n      ctx.fillStyle = options.titleColor;\r\n      ctx.font = titleFont.string;\r\n      for (i = 0; i < length; ++i) {\r\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\r\n        pt.y += titleFont.lineHeight + titleSpacing;\r\n        if (i + 1 === length) {\r\n          pt.y += options.titleMarginBottom - titleSpacing;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\r\n    const labelColors = this.labelColors[i];\r\n    const labelPointStyle = this.labelPointStyles[i];\r\n    const {boxHeight, boxWidth, boxPadding} = options;\r\n    const bodyFont = toFont(options.bodyFont);\r\n    const colorX = getAlignedX(this, 'left', options);\r\n    const rtlColorX = rtlHelper.x(colorX);\r\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\r\n    const colorY = pt.y + yOffSet;\r\n    if (options.usePointStyle) {\r\n      const drawOptions = {\r\n        radius: Math.min(boxWidth, boxHeight) / 2,\r\n        pointStyle: labelPointStyle.pointStyle,\r\n        rotation: labelPointStyle.rotation,\r\n        borderWidth: 1\r\n      };\r\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\r\n      const centerY = colorY + boxHeight / 2;\r\n      ctx.strokeStyle = options.multiKeyBackground;\r\n      ctx.fillStyle = options.multiKeyBackground;\r\n      drawPoint(ctx, drawOptions, centerX, centerY);\r\n      ctx.strokeStyle = labelColors.borderColor;\r\n      ctx.fillStyle = labelColors.backgroundColor;\r\n      drawPoint(ctx, drawOptions, centerX, centerY);\r\n    } else {\r\n      ctx.lineWidth = labelColors.borderWidth || 1;\r\n      ctx.strokeStyle = labelColors.borderColor;\r\n      ctx.setLineDash(labelColors.borderDash || []);\r\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\r\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\r\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\r\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\r\n      if (Object.values(borderRadius).some(v => v !== 0)) {\r\n        ctx.beginPath();\r\n        ctx.fillStyle = options.multiKeyBackground;\r\n        addRoundedRectPath(ctx, {\r\n          x: outerX,\r\n          y: colorY,\r\n          w: boxWidth,\r\n          h: boxHeight,\r\n          radius: borderRadius,\r\n        });\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        ctx.fillStyle = labelColors.backgroundColor;\r\n        ctx.beginPath();\r\n        addRoundedRectPath(ctx, {\r\n          x: innerX,\r\n          y: colorY + 1,\r\n          w: boxWidth - 2,\r\n          h: boxHeight - 2,\r\n          radius: borderRadius,\r\n        });\r\n        ctx.fill();\r\n      } else {\r\n        ctx.fillStyle = options.multiKeyBackground;\r\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\r\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\r\n        ctx.fillStyle = labelColors.backgroundColor;\r\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\r\n      }\r\n    }\r\n    ctx.fillStyle = this.labelTextColors[i];\r\n  }\r\n  drawBody(pt, ctx, options) {\r\n    const {body} = this;\r\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\r\n    const bodyFont = toFont(options.bodyFont);\r\n    let bodyLineHeight = bodyFont.lineHeight;\r\n    let xLinePadding = 0;\r\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\r\n    const fillLineOfText = function(line) {\r\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\r\n      pt.y += bodyLineHeight + bodySpacing;\r\n    };\r\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\r\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\r\n    ctx.textAlign = bodyAlign;\r\n    ctx.textBaseline = 'middle';\r\n    ctx.font = bodyFont.string;\r\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\r\n    ctx.fillStyle = options.bodyColor;\r\n    each(this.beforeBody, fillLineOfText);\r\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\r\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\r\n      : 0;\r\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\r\n      bodyItem = body[i];\r\n      textColor = this.labelTextColors[i];\r\n      ctx.fillStyle = textColor;\r\n      each(bodyItem.before, fillLineOfText);\r\n      lines = bodyItem.lines;\r\n      if (displayColors && lines.length) {\r\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\r\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\r\n      }\r\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\r\n        fillLineOfText(lines[j]);\r\n        bodyLineHeight = bodyFont.lineHeight;\r\n      }\r\n      each(bodyItem.after, fillLineOfText);\r\n    }\r\n    xLinePadding = 0;\r\n    bodyLineHeight = bodyFont.lineHeight;\r\n    each(this.afterBody, fillLineOfText);\r\n    pt.y -= bodySpacing;\r\n  }\r\n  drawFooter(pt, ctx, options) {\r\n    const footer = this.footer;\r\n    const length = footer.length;\r\n    let footerFont, i;\r\n    if (length) {\r\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\r\n      pt.x = getAlignedX(this, options.footerAlign, options);\r\n      pt.y += options.footerMarginTop;\r\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\r\n      ctx.textBaseline = 'middle';\r\n      footerFont = toFont(options.footerFont);\r\n      ctx.fillStyle = options.footerColor;\r\n      ctx.font = footerFont.string;\r\n      for (i = 0; i < length; ++i) {\r\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\r\n        pt.y += footerFont.lineHeight + options.footerSpacing;\r\n      }\r\n    }\r\n  }\r\n  drawBackground(pt, ctx, tooltipSize, options) {\r\n    const {xAlign, yAlign} = this;\r\n    const {x, y} = pt;\r\n    const {width, height} = tooltipSize;\r\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\r\n    ctx.fillStyle = options.backgroundColor;\r\n    ctx.strokeStyle = options.borderColor;\r\n    ctx.lineWidth = options.borderWidth;\r\n    ctx.beginPath();\r\n    ctx.moveTo(x + topLeft, y);\r\n    if (yAlign === 'top') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + width - topRight, y);\r\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\r\n    if (yAlign === 'center' && xAlign === 'right') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + width, y + height - bottomRight);\r\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\r\n    if (yAlign === 'bottom') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + bottomLeft, y + height);\r\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\r\n    if (yAlign === 'center' && xAlign === 'left') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x, y + topLeft);\r\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    if (options.borderWidth > 0) {\r\n      ctx.stroke();\r\n    }\r\n  }\r\n  _updateAnimationTarget(options) {\r\n    const chart = this._chart;\r\n    const anims = this.$animations;\r\n    const animX = anims && anims.x;\r\n    const animY = anims && anims.y;\r\n    if (animX || animY) {\r\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\r\n      if (!position) {\r\n        return;\r\n      }\r\n      const size = this._size = getTooltipSize(this, options);\r\n      const positionAndSize = Object.assign({}, position, this._size);\r\n      const alignment = determineAlignment(chart, options, positionAndSize);\r\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\r\n      if (animX._to !== point.x || animY._to !== point.y) {\r\n        this.xAlign = alignment.xAlign;\r\n        this.yAlign = alignment.yAlign;\r\n        this.width = size.width;\r\n        this.height = size.height;\r\n        this.caretX = position.x;\r\n        this.caretY = position.y;\r\n        this._resolveAnimations().update(this, point);\r\n      }\r\n    }\r\n  }\r\n  draw(ctx) {\r\n    const options = this.options.setContext(this.getContext());\r\n    let opacity = this.opacity;\r\n    if (!opacity) {\r\n      return;\r\n    }\r\n    this._updateAnimationTarget(options);\r\n    const tooltipSize = {\r\n      width: this.width,\r\n      height: this.height\r\n    };\r\n    const pt = {\r\n      x: this.x,\r\n      y: this.y\r\n    };\r\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\r\n    const padding = toPadding(options.padding);\r\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\r\n    if (options.enabled && hasTooltipContent) {\r\n      ctx.save();\r\n      ctx.globalAlpha = opacity;\r\n      this.drawBackground(pt, ctx, tooltipSize, options);\r\n      overrideTextDirection(ctx, options.textDirection);\r\n      pt.y += padding.top;\r\n      this.drawTitle(pt, ctx, options);\r\n      this.drawBody(pt, ctx, options);\r\n      this.drawFooter(pt, ctx, options);\r\n      restoreTextDirection(ctx, options.textDirection);\r\n      ctx.restore();\r\n    }\r\n  }\r\n  getActiveElements() {\r\n    return this._active || [];\r\n  }\r\n  setActiveElements(activeElements, eventPosition) {\r\n    const lastActive = this._active;\r\n    const active = activeElements.map(({datasetIndex, index}) => {\r\n      const meta = this._chart.getDatasetMeta(datasetIndex);\r\n      if (!meta) {\r\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\r\n      }\r\n      return {\r\n        datasetIndex,\r\n        element: meta.data[index],\r\n        index,\r\n      };\r\n    });\r\n    const changed = !_elementsEqual(lastActive, active);\r\n    const positionChanged = this._positionChanged(active, eventPosition);\r\n    if (changed || positionChanged) {\r\n      this._active = active;\r\n      this._eventPosition = eventPosition;\r\n      this.update(true);\r\n    }\r\n  }\r\n  handleEvent(e, replay) {\r\n    const options = this.options;\r\n    const lastActive = this._active || [];\r\n    let changed = false;\r\n    let active = [];\r\n    if (e.type !== 'mouseout') {\r\n      active = this._chart.getElementsAtEventForMode(e, options.mode, options, replay);\r\n      if (options.reverse) {\r\n        active.reverse();\r\n      }\r\n    }\r\n    const positionChanged = this._positionChanged(active, e);\r\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\r\n    if (changed) {\r\n      this._active = active;\r\n      if (options.enabled || options.external) {\r\n        this._eventPosition = {\r\n          x: e.x,\r\n          y: e.y\r\n        };\r\n        this.update(true, replay);\r\n      }\r\n    }\r\n    return changed;\r\n  }\r\n  _positionChanged(active, e) {\r\n    const {caretX, caretY, options} = this;\r\n    const position = positioners[options.position].call(this, active, e);\r\n    return position !== false && (caretX !== position.x || caretY !== position.y);\r\n  }\r\n}\r\nTooltip.positioners = positioners;\r\nvar plugin_tooltip = {\r\n  id: 'tooltip',\r\n  _element: Tooltip,\r\n  positioners,\r\n  afterInit(chart, _args, options) {\r\n    if (options) {\r\n      chart.tooltip = new Tooltip({_chart: chart, options});\r\n    }\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    if (chart.tooltip) {\r\n      chart.tooltip.initialize(options);\r\n    }\r\n  },\r\n  reset(chart, _args, options) {\r\n    if (chart.tooltip) {\r\n      chart.tooltip.initialize(options);\r\n    }\r\n  },\r\n  afterDraw(chart) {\r\n    const tooltip = chart.tooltip;\r\n    const args = {\r\n      tooltip\r\n    };\r\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\r\n      return;\r\n    }\r\n    if (tooltip) {\r\n      tooltip.draw(chart.ctx);\r\n    }\r\n    chart.notifyPlugins('afterTooltipDraw', args);\r\n  },\r\n  afterEvent(chart, args) {\r\n    if (chart.tooltip) {\r\n      const useFinalPosition = args.replay;\r\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\r\n        args.changed = true;\r\n      }\r\n    }\r\n  },\r\n  defaults: {\r\n    enabled: true,\r\n    external: null,\r\n    position: 'average',\r\n    backgroundColor: 'rgba(0,0,0,0.8)',\r\n    titleColor: '#fff',\r\n    titleFont: {\r\n      weight: 'bold',\r\n    },\r\n    titleSpacing: 2,\r\n    titleMarginBottom: 6,\r\n    titleAlign: 'left',\r\n    bodyColor: '#fff',\r\n    bodySpacing: 2,\r\n    bodyFont: {\r\n    },\r\n    bodyAlign: 'left',\r\n    footerColor: '#fff',\r\n    footerSpacing: 2,\r\n    footerMarginTop: 6,\r\n    footerFont: {\r\n      weight: 'bold',\r\n    },\r\n    footerAlign: 'left',\r\n    padding: 6,\r\n    caretPadding: 2,\r\n    caretSize: 5,\r\n    cornerRadius: 6,\r\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\r\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\r\n    multiKeyBackground: '#fff',\r\n    displayColors: true,\r\n    boxPadding: 0,\r\n    borderColor: 'rgba(0,0,0,0)',\r\n    borderWidth: 0,\r\n    animation: {\r\n      duration: 400,\r\n      easing: 'easeOutQuart',\r\n    },\r\n    animations: {\r\n      numbers: {\r\n        type: 'number',\r\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\r\n      },\r\n      opacity: {\r\n        easing: 'linear',\r\n        duration: 200\r\n      }\r\n    },\r\n    callbacks: {\r\n      beforeTitle: noop,\r\n      title(tooltipItems) {\r\n        if (tooltipItems.length > 0) {\r\n          const item = tooltipItems[0];\r\n          const labels = item.chart.data.labels;\r\n          const labelCount = labels ? labels.length : 0;\r\n          if (this && this.options && this.options.mode === 'dataset') {\r\n            return item.dataset.label || '';\r\n          } else if (item.label) {\r\n            return item.label;\r\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\r\n            return labels[item.dataIndex];\r\n          }\r\n        }\r\n        return '';\r\n      },\r\n      afterTitle: noop,\r\n      beforeBody: noop,\r\n      beforeLabel: noop,\r\n      label(tooltipItem) {\r\n        if (this && this.options && this.options.mode === 'dataset') {\r\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\r\n        }\r\n        let label = tooltipItem.dataset.label || '';\r\n        if (label) {\r\n          label += ': ';\r\n        }\r\n        const value = tooltipItem.formattedValue;\r\n        if (!isNullOrUndef(value)) {\r\n          label += value;\r\n        }\r\n        return label;\r\n      },\r\n      labelColor(tooltipItem) {\r\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\r\n        return {\r\n          borderColor: options.borderColor,\r\n          backgroundColor: options.backgroundColor,\r\n          borderWidth: options.borderWidth,\r\n          borderDash: options.borderDash,\r\n          borderDashOffset: options.borderDashOffset,\r\n          borderRadius: 0,\r\n        };\r\n      },\r\n      labelTextColor() {\r\n        return this.options.bodyColor;\r\n      },\r\n      labelPointStyle(tooltipItem) {\r\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\r\n        return {\r\n          pointStyle: options.pointStyle,\r\n          rotation: options.rotation,\r\n        };\r\n      },\r\n      afterLabel: noop,\r\n      afterBody: noop,\r\n      beforeFooter: noop,\r\n      footer: noop,\r\n      afterFooter: noop\r\n    }\r\n  },\r\n  defaultRoutes: {\r\n    bodyFont: 'font',\r\n    footerFont: 'font',\r\n    titleFont: 'font'\r\n  },\r\n  descriptors: {\r\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\r\n    _indexable: false,\r\n    callbacks: {\r\n      _scriptable: false,\r\n      _indexable: false,\r\n    },\r\n    animation: {\r\n      _fallback: false\r\n    },\r\n    animations: {\r\n      _fallback: 'animation'\r\n    }\r\n  },\r\n  additionalOptionScopes: ['interaction']\r\n};\r\n\r\nvar plugins = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nDecimation: plugin_decimation,\r\nFiller: plugin_filler,\r\nLegend: plugin_legend,\r\nSubTitle: plugin_subtitle,\r\nTitle: plugin_title,\r\nTooltip: plugin_tooltip\r\n});\r\n\r\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\r\n  ? labels.push(raw) - 1\r\n  : isNaN(raw) ? null : index;\r\nfunction findOrAddLabel(labels, raw, index) {\r\n  const first = labels.indexOf(raw);\r\n  if (first === -1) {\r\n    return addIfString(labels, raw, index);\r\n  }\r\n  const last = labels.lastIndexOf(raw);\r\n  return first !== last ? index : first;\r\n}\r\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\r\nclass CategoryScale extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this._startValue = undefined;\r\n    this._valueRange = 0;\r\n  }\r\n  parse(raw, index) {\r\n    if (isNullOrUndef(raw)) {\r\n      return null;\r\n    }\r\n    const labels = this.getLabels();\r\n    index = isFinite(index) && labels[index] === raw ? index\r\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\r\n    return validIndex(index, labels.length - 1);\r\n  }\r\n  determineDataLimits() {\r\n    const {minDefined, maxDefined} = this.getUserBounds();\r\n    let {min, max} = this.getMinMax(true);\r\n    if (this.options.bounds === 'ticks') {\r\n      if (!minDefined) {\r\n        min = 0;\r\n      }\r\n      if (!maxDefined) {\r\n        max = this.getLabels().length - 1;\r\n      }\r\n    }\r\n    this.min = min;\r\n    this.max = max;\r\n  }\r\n  buildTicks() {\r\n    const min = this.min;\r\n    const max = this.max;\r\n    const offset = this.options.offset;\r\n    const ticks = [];\r\n    let labels = this.getLabels();\r\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\r\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\r\n    this._startValue = this.min - (offset ? 0.5 : 0);\r\n    for (let value = min; value <= max; value++) {\r\n      ticks.push({value});\r\n    }\r\n    return ticks;\r\n  }\r\n  getLabelForValue(value) {\r\n    const labels = this.getLabels();\r\n    if (value >= 0 && value < labels.length) {\r\n      return labels[value];\r\n    }\r\n    return value;\r\n  }\r\n  configure() {\r\n    super.configure();\r\n    if (!this.isHorizontal()) {\r\n      this._reversePixels = !this._reversePixels;\r\n    }\r\n  }\r\n  getPixelForValue(value) {\r\n    if (typeof value !== 'number') {\r\n      value = this.parse(value);\r\n    }\r\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\r\n  }\r\n  getPixelForTick(index) {\r\n    const ticks = this.ticks;\r\n    if (index < 0 || index > ticks.length - 1) {\r\n      return null;\r\n    }\r\n    return this.getPixelForValue(ticks[index].value);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\r\n  }\r\n  getBasePixel() {\r\n    return this.bottom;\r\n  }\r\n}\r\nCategoryScale.id = 'category';\r\nCategoryScale.defaults = {\r\n  ticks: {\r\n    callback: CategoryScale.prototype.getLabelForValue\r\n  }\r\n};\r\n\r\nfunction generateTicks$1(generationOptions, dataRange) {\r\n  const ticks = [];\r\n  const MIN_SPACING = 1e-14;\r\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\r\n  const unit = step || 1;\r\n  const maxSpaces = maxTicks - 1;\r\n  const {min: rmin, max: rmax} = dataRange;\r\n  const minDefined = !isNullOrUndef(min);\r\n  const maxDefined = !isNullOrUndef(max);\r\n  const countDefined = !isNullOrUndef(count);\r\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\r\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\r\n  let factor, niceMin, niceMax, numSpaces;\r\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\r\n    return [{value: rmin}, {value: rmax}];\r\n  }\r\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\r\n  if (numSpaces > maxSpaces) {\r\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\r\n  }\r\n  if (!isNullOrUndef(precision)) {\r\n    factor = Math.pow(10, precision);\r\n    spacing = Math.ceil(spacing * factor) / factor;\r\n  }\r\n  if (bounds === 'ticks') {\r\n    niceMin = Math.floor(rmin / spacing) * spacing;\r\n    niceMax = Math.ceil(rmax / spacing) * spacing;\r\n  } else {\r\n    niceMin = rmin;\r\n    niceMax = rmax;\r\n  }\r\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\r\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\r\n    spacing = (max - min) / numSpaces;\r\n    niceMin = min;\r\n    niceMax = max;\r\n  } else if (countDefined) {\r\n    niceMin = minDefined ? min : niceMin;\r\n    niceMax = maxDefined ? max : niceMax;\r\n    numSpaces = count - 1;\r\n    spacing = (niceMax - niceMin) / numSpaces;\r\n  } else {\r\n    numSpaces = (niceMax - niceMin) / spacing;\r\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n      numSpaces = Math.round(numSpaces);\r\n    } else {\r\n      numSpaces = Math.ceil(numSpaces);\r\n    }\r\n  }\r\n  const decimalPlaces = Math.max(\r\n    _decimalPlaces(spacing),\r\n    _decimalPlaces(niceMin)\r\n  );\r\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\r\n  niceMin = Math.round(niceMin * factor) / factor;\r\n  niceMax = Math.round(niceMax * factor) / factor;\r\n  let j = 0;\r\n  if (minDefined) {\r\n    if (includeBounds && niceMin !== min) {\r\n      ticks.push({value: min});\r\n      if (niceMin < min) {\r\n        j++;\r\n      }\r\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\r\n        j++;\r\n      }\r\n    } else if (niceMin < min) {\r\n      j++;\r\n    }\r\n  }\r\n  for (; j < numSpaces; ++j) {\r\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\r\n  }\r\n  if (maxDefined && includeBounds && niceMax !== max) {\r\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\r\n      ticks[ticks.length - 1].value = max;\r\n    } else {\r\n      ticks.push({value: max});\r\n    }\r\n  } else if (!maxDefined || niceMax === max) {\r\n    ticks.push({value: niceMax});\r\n  }\r\n  return ticks;\r\n}\r\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\r\n  const rad = toRadians(minRotation);\r\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\r\n  const length = 0.75 * minSpacing * ('' + value).length;\r\n  return Math.min(minSpacing / ratio, length);\r\n}\r\nclass LinearScaleBase extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.start = undefined;\r\n    this.end = undefined;\r\n    this._startValue = undefined;\r\n    this._endValue = undefined;\r\n    this._valueRange = 0;\r\n  }\r\n  parse(raw, index) {\r\n    if (isNullOrUndef(raw)) {\r\n      return null;\r\n    }\r\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\r\n      return null;\r\n    }\r\n    return +raw;\r\n  }\r\n  handleTickRangeOptions() {\r\n    const {beginAtZero} = this.options;\r\n    const {minDefined, maxDefined} = this.getUserBounds();\r\n    let {min, max} = this;\r\n    const setMin = v => (min = minDefined ? min : v);\r\n    const setMax = v => (max = maxDefined ? max : v);\r\n    if (beginAtZero) {\r\n      const minSign = sign(min);\r\n      const maxSign = sign(max);\r\n      if (minSign < 0 && maxSign < 0) {\r\n        setMax(0);\r\n      } else if (minSign > 0 && maxSign > 0) {\r\n        setMin(0);\r\n      }\r\n    }\r\n    if (min === max) {\r\n      let offset = 1;\r\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\r\n        offset = Math.abs(max * 0.05);\r\n      }\r\n      setMax(max + offset);\r\n      if (!beginAtZero) {\r\n        setMin(min - offset);\r\n      }\r\n    }\r\n    this.min = min;\r\n    this.max = max;\r\n  }\r\n  getTickLimit() {\r\n    const tickOpts = this.options.ticks;\r\n    let {maxTicksLimit, stepSize} = tickOpts;\r\n    let maxTicks;\r\n    if (stepSize) {\r\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\r\n    } else {\r\n      maxTicks = this.computeTickLimit();\r\n      maxTicksLimit = maxTicksLimit || 11;\r\n    }\r\n    if (maxTicksLimit) {\r\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\r\n    }\r\n    return maxTicks;\r\n  }\r\n  computeTickLimit() {\r\n    return Number.POSITIVE_INFINITY;\r\n  }\r\n  buildTicks() {\r\n    const opts = this.options;\r\n    const tickOpts = opts.ticks;\r\n    let maxTicks = this.getTickLimit();\r\n    maxTicks = Math.max(2, maxTicks);\r\n    const numericGeneratorOptions = {\r\n      maxTicks,\r\n      bounds: opts.bounds,\r\n      min: opts.min,\r\n      max: opts.max,\r\n      precision: tickOpts.precision,\r\n      step: tickOpts.stepSize,\r\n      count: tickOpts.count,\r\n      maxDigits: this._maxDigits(),\r\n      horizontal: this.isHorizontal(),\r\n      minRotation: tickOpts.minRotation || 0,\r\n      includeBounds: tickOpts.includeBounds !== false\r\n    };\r\n    const dataRange = this._range || this;\r\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\r\n    if (opts.bounds === 'ticks') {\r\n      _setMinAndMaxByKey(ticks, this, 'value');\r\n    }\r\n    if (opts.reverse) {\r\n      ticks.reverse();\r\n      this.start = this.max;\r\n      this.end = this.min;\r\n    } else {\r\n      this.start = this.min;\r\n      this.end = this.max;\r\n    }\r\n    return ticks;\r\n  }\r\n  configure() {\r\n    const ticks = this.ticks;\r\n    let start = this.min;\r\n    let end = this.max;\r\n    super.configure();\r\n    if (this.options.offset && ticks.length) {\r\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\r\n      start -= offset;\r\n      end += offset;\r\n    }\r\n    this._startValue = start;\r\n    this._endValue = end;\r\n    this._valueRange = end - start;\r\n  }\r\n  getLabelForValue(value) {\r\n    return formatNumber(value, this.chart.options.locale);\r\n  }\r\n}\r\n\r\nclass LinearScale extends LinearScaleBase {\r\n  determineDataLimits() {\r\n    const {min, max} = this.getMinMax(true);\r\n    this.min = isNumberFinite(min) ? min : 0;\r\n    this.max = isNumberFinite(max) ? max : 1;\r\n    this.handleTickRangeOptions();\r\n  }\r\n  computeTickLimit() {\r\n    const horizontal = this.isHorizontal();\r\n    const length = horizontal ? this.width : this.height;\r\n    const minRotation = toRadians(this.options.ticks.minRotation);\r\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\r\n    const tickFont = this._resolveTickFontOptions(0);\r\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\r\n  }\r\n  getPixelForValue(value) {\r\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\r\n  }\r\n}\r\nLinearScale.id = 'linear';\r\nLinearScale.defaults = {\r\n  ticks: {\r\n    callback: Ticks.formatters.numeric\r\n  }\r\n};\r\n\r\nfunction isMajor(tickVal) {\r\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\r\n  return remain === 1;\r\n}\r\nfunction generateTicks(generationOptions, dataRange) {\r\n  const endExp = Math.floor(log10(dataRange.max));\r\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\r\n  const ticks = [];\r\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\r\n  let exp = Math.floor(log10(tickVal));\r\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\r\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\r\n  do {\r\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\r\n    ++significand;\r\n    if (significand === 10) {\r\n      significand = 1;\r\n      ++exp;\r\n      precision = exp >= 0 ? 1 : precision;\r\n    }\r\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\r\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\r\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\r\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\r\n  return ticks;\r\n}\r\nclass LogarithmicScale extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.start = undefined;\r\n    this.end = undefined;\r\n    this._startValue = undefined;\r\n    this._valueRange = 0;\r\n  }\r\n  parse(raw, index) {\r\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\r\n    if (value === 0) {\r\n      this._zero = true;\r\n      return undefined;\r\n    }\r\n    return isNumberFinite(value) && value > 0 ? value : null;\r\n  }\r\n  determineDataLimits() {\r\n    const {min, max} = this.getMinMax(true);\r\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\r\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\r\n    if (this.options.beginAtZero) {\r\n      this._zero = true;\r\n    }\r\n    this.handleTickRangeOptions();\r\n  }\r\n  handleTickRangeOptions() {\r\n    const {minDefined, maxDefined} = this.getUserBounds();\r\n    let min = this.min;\r\n    let max = this.max;\r\n    const setMin = v => (min = minDefined ? min : v);\r\n    const setMax = v => (max = maxDefined ? max : v);\r\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\r\n    if (min === max) {\r\n      if (min <= 0) {\r\n        setMin(1);\r\n        setMax(10);\r\n      } else {\r\n        setMin(exp(min, -1));\r\n        setMax(exp(max, +1));\r\n      }\r\n    }\r\n    if (min <= 0) {\r\n      setMin(exp(max, -1));\r\n    }\r\n    if (max <= 0) {\r\n      setMax(exp(min, +1));\r\n    }\r\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\r\n      setMin(exp(min, -1));\r\n    }\r\n    this.min = min;\r\n    this.max = max;\r\n  }\r\n  buildTicks() {\r\n    const opts = this.options;\r\n    const generationOptions = {\r\n      min: this._userMin,\r\n      max: this._userMax\r\n    };\r\n    const ticks = generateTicks(generationOptions, this);\r\n    if (opts.bounds === 'ticks') {\r\n      _setMinAndMaxByKey(ticks, this, 'value');\r\n    }\r\n    if (opts.reverse) {\r\n      ticks.reverse();\r\n      this.start = this.max;\r\n      this.end = this.min;\r\n    } else {\r\n      this.start = this.min;\r\n      this.end = this.max;\r\n    }\r\n    return ticks;\r\n  }\r\n  getLabelForValue(value) {\r\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\r\n  }\r\n  configure() {\r\n    const start = this.min;\r\n    super.configure();\r\n    this._startValue = log10(start);\r\n    this._valueRange = log10(this.max) - log10(start);\r\n  }\r\n  getPixelForValue(value) {\r\n    if (value === undefined || value === 0) {\r\n      value = this.min;\r\n    }\r\n    if (value === null || isNaN(value)) {\r\n      return NaN;\r\n    }\r\n    return this.getPixelForDecimal(value === this.min\r\n      ? 0\r\n      : (log10(value) - this._startValue) / this._valueRange);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const decimal = this.getDecimalForPixel(pixel);\r\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\r\n  }\r\n}\r\nLogarithmicScale.id = 'logarithmic';\r\nLogarithmicScale.defaults = {\r\n  ticks: {\r\n    callback: Ticks.formatters.logarithmic,\r\n    major: {\r\n      enabled: true\r\n    }\r\n  }\r\n};\r\n\r\nfunction getTickBackdropHeight(opts) {\r\n  const tickOpts = opts.ticks;\r\n  if (tickOpts.display && opts.display) {\r\n    const padding = toPadding(tickOpts.backdropPadding);\r\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\r\n  }\r\n  return 0;\r\n}\r\nfunction measureLabelSize(ctx, font, label) {\r\n  label = isArray(label) ? label : [label];\r\n  return {\r\n    w: _longestText(ctx, font.string, label),\r\n    h: label.length * font.lineHeight\r\n  };\r\n}\r\nfunction determineLimits(angle, pos, size, min, max) {\r\n  if (angle === min || angle === max) {\r\n    return {\r\n      start: pos - (size / 2),\r\n      end: pos + (size / 2)\r\n    };\r\n  } else if (angle < min || angle > max) {\r\n    return {\r\n      start: pos - size,\r\n      end: pos\r\n    };\r\n  }\r\n  return {\r\n    start: pos,\r\n    end: pos + size\r\n  };\r\n}\r\nfunction fitWithPointLabels(scale) {\r\n  const furthestLimits = {\r\n    l: 0,\r\n    r: scale.width,\r\n    t: 0,\r\n    b: scale.height - scale.paddingTop\r\n  };\r\n  const furthestAngles = {};\r\n  const labelSizes = [];\r\n  const padding = [];\r\n  const valueCount = scale.getLabels().length;\r\n  for (let i = 0; i < valueCount; i++) {\r\n    const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\r\n    padding[i] = opts.padding;\r\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\r\n    const plFont = toFont(opts.font);\r\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\r\n    labelSizes[i] = textSize;\r\n    const angleRadians = scale.getIndexAngle(i);\r\n    const angle = toDegrees(angleRadians);\r\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\r\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\r\n    if (hLimits.start < furthestLimits.l) {\r\n      furthestLimits.l = hLimits.start;\r\n      furthestAngles.l = angleRadians;\r\n    }\r\n    if (hLimits.end > furthestLimits.r) {\r\n      furthestLimits.r = hLimits.end;\r\n      furthestAngles.r = angleRadians;\r\n    }\r\n    if (vLimits.start < furthestLimits.t) {\r\n      furthestLimits.t = vLimits.start;\r\n      furthestAngles.t = angleRadians;\r\n    }\r\n    if (vLimits.end > furthestLimits.b) {\r\n      furthestLimits.b = vLimits.end;\r\n      furthestAngles.b = angleRadians;\r\n    }\r\n  }\r\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\r\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\r\n}\r\nfunction buildPointLabelItems(scale, labelSizes, padding) {\r\n  const items = [];\r\n  const valueCount = scale.getLabels().length;\r\n  const opts = scale.options;\r\n  const tickBackdropHeight = getTickBackdropHeight(opts);\r\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\r\n  for (let i = 0; i < valueCount; i++) {\r\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\r\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\r\n    const angle = toDegrees(scale.getIndexAngle(i));\r\n    const size = labelSizes[i];\r\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\r\n    const textAlign = getTextAlignForAngle(angle);\r\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\r\n    items.push({\r\n      x: pointLabelPosition.x,\r\n      y,\r\n      textAlign,\r\n      left,\r\n      top: y,\r\n      right: left + size.w,\r\n      bottom: y + size.h\r\n    });\r\n  }\r\n  return items;\r\n}\r\nfunction getTextAlignForAngle(angle) {\r\n  if (angle === 0 || angle === 180) {\r\n    return 'center';\r\n  } else if (angle < 180) {\r\n    return 'left';\r\n  }\r\n  return 'right';\r\n}\r\nfunction leftForTextAlign(x, w, align) {\r\n  if (align === 'right') {\r\n    x -= w;\r\n  } else if (align === 'center') {\r\n    x -= (w / 2);\r\n  }\r\n  return x;\r\n}\r\nfunction yForAngle(y, h, angle) {\r\n  if (angle === 90 || angle === 270) {\r\n    y -= (h / 2);\r\n  } else if (angle > 270 || angle < 90) {\r\n    y -= h;\r\n  }\r\n  return y;\r\n}\r\nfunction drawPointLabels(scale, labelCount) {\r\n  const {ctx, options: {pointLabels}} = scale;\r\n  for (let i = labelCount - 1; i >= 0; i--) {\r\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\r\n    const plFont = toFont(optsAtIndex.font);\r\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\r\n    const {backdropColor} = optsAtIndex;\r\n    if (!isNullOrUndef(backdropColor)) {\r\n      const padding = toPadding(optsAtIndex.backdropPadding);\r\n      ctx.fillStyle = backdropColor;\r\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\r\n    }\r\n    renderText(\r\n      ctx,\r\n      scale._pointLabels[i],\r\n      x,\r\n      y + (plFont.lineHeight / 2),\r\n      plFont,\r\n      {\r\n        color: optsAtIndex.color,\r\n        textAlign: textAlign,\r\n        textBaseline: 'middle'\r\n      }\r\n    );\r\n  }\r\n}\r\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\r\n  const {ctx} = scale;\r\n  if (circular) {\r\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\r\n  } else {\r\n    let pointPosition = scale.getPointPosition(0, radius);\r\n    ctx.moveTo(pointPosition.x, pointPosition.y);\r\n    for (let i = 1; i < labelCount; i++) {\r\n      pointPosition = scale.getPointPosition(i, radius);\r\n      ctx.lineTo(pointPosition.x, pointPosition.y);\r\n    }\r\n  }\r\n}\r\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\r\n  const ctx = scale.ctx;\r\n  const circular = gridLineOpts.circular;\r\n  const {color, lineWidth} = gridLineOpts;\r\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\r\n    return;\r\n  }\r\n  ctx.save();\r\n  ctx.strokeStyle = color;\r\n  ctx.lineWidth = lineWidth;\r\n  ctx.setLineDash(gridLineOpts.borderDash);\r\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\r\n  ctx.beginPath();\r\n  pathRadiusLine(scale, radius, circular, labelCount);\r\n  ctx.closePath();\r\n  ctx.stroke();\r\n  ctx.restore();\r\n}\r\nfunction numberOrZero(param) {\r\n  return isNumber(param) ? param : 0;\r\n}\r\nfunction createPointLabelContext(parent, index, label) {\r\n  return Object.assign(Object.create(parent), {\r\n    label,\r\n    index,\r\n    type: 'pointLabel'\r\n  });\r\n}\r\nclass RadialLinearScale extends LinearScaleBase {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.xCenter = undefined;\r\n    this.yCenter = undefined;\r\n    this.drawingArea = undefined;\r\n    this._pointLabels = [];\r\n    this._pointLabelItems = [];\r\n  }\r\n  setDimensions() {\r\n    this.width = this.maxWidth;\r\n    this.height = this.maxHeight;\r\n    this.paddingTop = getTickBackdropHeight(this.options) / 2;\r\n    this.xCenter = Math.floor(this.width / 2);\r\n    this.yCenter = Math.floor((this.height - this.paddingTop) / 2);\r\n    this.drawingArea = Math.min(this.height - this.paddingTop, this.width) / 2;\r\n  }\r\n  determineDataLimits() {\r\n    const {min, max} = this.getMinMax(false);\r\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\r\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\r\n    this.handleTickRangeOptions();\r\n  }\r\n  computeTickLimit() {\r\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\r\n  }\r\n  generateTickLabels(ticks) {\r\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\r\n    this._pointLabels = this.getLabels().map((value, index) => {\r\n      const label = callback(this.options.pointLabels.callback, [value, index], this);\r\n      return label || label === 0 ? label : '';\r\n    });\r\n  }\r\n  fit() {\r\n    const opts = this.options;\r\n    if (opts.display && opts.pointLabels.display) {\r\n      fitWithPointLabels(this);\r\n    } else {\r\n      this.setCenterPoint(0, 0, 0, 0);\r\n    }\r\n  }\r\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\r\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\r\n    let radiusReductionRight = Math.max(furthestLimits.r - this.width, 0) / Math.sin(furthestAngles.r);\r\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\r\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (this.height - this.paddingTop), 0) / Math.cos(furthestAngles.b);\r\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\r\n    radiusReductionRight = numberOrZero(radiusReductionRight);\r\n    radiusReductionTop = numberOrZero(radiusReductionTop);\r\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\r\n    this.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\r\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\r\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\r\n    this.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\r\n  }\r\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\r\n    const maxRight = this.width - rightMovement - this.drawingArea;\r\n    const maxLeft = leftMovement + this.drawingArea;\r\n    const maxTop = topMovement + this.drawingArea;\r\n    const maxBottom = (this.height - this.paddingTop) - bottomMovement - this.drawingArea;\r\n    this.xCenter = Math.floor(((maxLeft + maxRight) / 2) + this.left);\r\n    this.yCenter = Math.floor(((maxTop + maxBottom) / 2) + this.top + this.paddingTop);\r\n  }\r\n  getIndexAngle(index) {\r\n    const angleMultiplier = TAU / this.getLabels().length;\r\n    const startAngle = this.options.startAngle || 0;\r\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\r\n  }\r\n  getDistanceFromCenterForValue(value) {\r\n    if (isNullOrUndef(value)) {\r\n      return NaN;\r\n    }\r\n    const scalingFactor = this.drawingArea / (this.max - this.min);\r\n    if (this.options.reverse) {\r\n      return (this.max - value) * scalingFactor;\r\n    }\r\n    return (value - this.min) * scalingFactor;\r\n  }\r\n  getValueForDistanceFromCenter(distance) {\r\n    if (isNullOrUndef(distance)) {\r\n      return NaN;\r\n    }\r\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\r\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\r\n  }\r\n  getPointLabelContext(index) {\r\n    const pointLabels = this._pointLabels || [];\r\n    if (index >= 0 && index < pointLabels.length) {\r\n      const pointLabel = pointLabels[index];\r\n      return createPointLabelContext(this.getContext(), index, pointLabel);\r\n    }\r\n  }\r\n  getPointPosition(index, distanceFromCenter) {\r\n    const angle = this.getIndexAngle(index) - HALF_PI;\r\n    return {\r\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\r\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\r\n      angle\r\n    };\r\n  }\r\n  getPointPositionForValue(index, value) {\r\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\r\n  }\r\n  getBasePosition(index) {\r\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\r\n  }\r\n  getPointLabelPosition(index) {\r\n    const {left, top, right, bottom} = this._pointLabelItems[index];\r\n    return {\r\n      left,\r\n      top,\r\n      right,\r\n      bottom,\r\n    };\r\n  }\r\n  drawBackground() {\r\n    const {backgroundColor, grid: {circular}} = this.options;\r\n    if (backgroundColor) {\r\n      const ctx = this.ctx;\r\n      ctx.save();\r\n      ctx.beginPath();\r\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this.getLabels().length);\r\n      ctx.closePath();\r\n      ctx.fillStyle = backgroundColor;\r\n      ctx.fill();\r\n      ctx.restore();\r\n    }\r\n  }\r\n  drawGrid() {\r\n    const ctx = this.ctx;\r\n    const opts = this.options;\r\n    const {angleLines, grid} = opts;\r\n    const labelCount = this.getLabels().length;\r\n    let i, offset, position;\r\n    if (opts.pointLabels.display) {\r\n      drawPointLabels(this, labelCount);\r\n    }\r\n    if (grid.display) {\r\n      this.ticks.forEach((tick, index) => {\r\n        if (index !== 0) {\r\n          offset = this.getDistanceFromCenterForValue(tick.value);\r\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\r\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\r\n        }\r\n      });\r\n    }\r\n    if (angleLines.display) {\r\n      ctx.save();\r\n      for (i = this.getLabels().length - 1; i >= 0; i--) {\r\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\r\n        const {color, lineWidth} = optsAtIndex;\r\n        if (!lineWidth || !color) {\r\n          continue;\r\n        }\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.strokeStyle = color;\r\n        ctx.setLineDash(optsAtIndex.borderDash);\r\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\r\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\r\n        position = this.getPointPosition(i, offset);\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.xCenter, this.yCenter);\r\n        ctx.lineTo(position.x, position.y);\r\n        ctx.stroke();\r\n      }\r\n      ctx.restore();\r\n    }\r\n  }\r\n  drawBorder() {}\r\n  drawLabels() {\r\n    const ctx = this.ctx;\r\n    const opts = this.options;\r\n    const tickOpts = opts.ticks;\r\n    if (!tickOpts.display) {\r\n      return;\r\n    }\r\n    const startAngle = this.getIndexAngle(0);\r\n    let offset, width;\r\n    ctx.save();\r\n    ctx.translate(this.xCenter, this.yCenter);\r\n    ctx.rotate(startAngle);\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n    this.ticks.forEach((tick, index) => {\r\n      if (index === 0 && !opts.reverse) {\r\n        return;\r\n      }\r\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\r\n      const tickFont = toFont(optsAtIndex.font);\r\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\r\n      if (optsAtIndex.showLabelBackdrop) {\r\n        ctx.font = tickFont.string;\r\n        width = ctx.measureText(tick.label).width;\r\n        ctx.fillStyle = optsAtIndex.backdropColor;\r\n        const padding = toPadding(optsAtIndex.backdropPadding);\r\n        ctx.fillRect(\r\n          -width / 2 - padding.left,\r\n          -offset - tickFont.size / 2 - padding.top,\r\n          width + padding.width,\r\n          tickFont.size + padding.height\r\n        );\r\n      }\r\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\r\n        color: optsAtIndex.color,\r\n      });\r\n    });\r\n    ctx.restore();\r\n  }\r\n  drawTitle() {}\r\n}\r\nRadialLinearScale.id = 'radialLinear';\r\nRadialLinearScale.defaults = {\r\n  display: true,\r\n  animate: true,\r\n  position: 'chartArea',\r\n  angleLines: {\r\n    display: true,\r\n    lineWidth: 1,\r\n    borderDash: [],\r\n    borderDashOffset: 0.0\r\n  },\r\n  grid: {\r\n    circular: false\r\n  },\r\n  startAngle: 0,\r\n  ticks: {\r\n    showLabelBackdrop: true,\r\n    callback: Ticks.formatters.numeric\r\n  },\r\n  pointLabels: {\r\n    backdropColor: undefined,\r\n    backdropPadding: 2,\r\n    display: true,\r\n    font: {\r\n      size: 10\r\n    },\r\n    callback(label) {\r\n      return label;\r\n    },\r\n    padding: 5\r\n  }\r\n};\r\nRadialLinearScale.defaultRoutes = {\r\n  'angleLines.color': 'borderColor',\r\n  'pointLabels.color': 'color',\r\n  'ticks.color': 'color'\r\n};\r\nRadialLinearScale.descriptors = {\r\n  angleLines: {\r\n    _fallback: 'grid'\r\n  }\r\n};\r\n\r\nconst INTERVALS = {\r\n  millisecond: {common: true, size: 1, steps: 1000},\r\n  second: {common: true, size: 1000, steps: 60},\r\n  minute: {common: true, size: 60000, steps: 60},\r\n  hour: {common: true, size: 3600000, steps: 24},\r\n  day: {common: true, size: 86400000, steps: 30},\r\n  week: {common: false, size: 604800000, steps: 4},\r\n  month: {common: true, size: 2.628e9, steps: 12},\r\n  quarter: {common: false, size: 7.884e9, steps: 4},\r\n  year: {common: true, size: 3.154e10}\r\n};\r\nconst UNITS = (Object.keys(INTERVALS));\r\nfunction sorter(a, b) {\r\n  return a - b;\r\n}\r\nfunction parse(scale, input) {\r\n  if (isNullOrUndef(input)) {\r\n    return null;\r\n  }\r\n  const adapter = scale._adapter;\r\n  const {parser, round, isoWeekday} = scale._parseOpts;\r\n  let value = input;\r\n  if (typeof parser === 'function') {\r\n    value = parser(value);\r\n  }\r\n  if (!isNumberFinite(value)) {\r\n    value = typeof parser === 'string'\r\n      ? adapter.parse(value, parser)\r\n      : adapter.parse(value);\r\n  }\r\n  if (value === null) {\r\n    return null;\r\n  }\r\n  if (round) {\r\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\r\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\r\n      : adapter.startOf(value, round);\r\n  }\r\n  return +value;\r\n}\r\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\r\n  const ilen = UNITS.length;\r\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\r\n    const interval = INTERVALS[UNITS[i]];\r\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\r\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\r\n      return UNITS[i];\r\n    }\r\n  }\r\n  return UNITS[ilen - 1];\r\n}\r\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\r\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\r\n    const unit = UNITS[i];\r\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\r\n      return unit;\r\n    }\r\n  }\r\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\r\n}\r\nfunction determineMajorUnit(unit) {\r\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\r\n    if (INTERVALS[UNITS[i]].common) {\r\n      return UNITS[i];\r\n    }\r\n  }\r\n}\r\nfunction addTick(ticks, time, timestamps) {\r\n  if (!timestamps) {\r\n    ticks[time] = true;\r\n  } else if (timestamps.length) {\r\n    const {lo, hi} = _lookup(timestamps, time);\r\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\r\n    ticks[timestamp] = true;\r\n  }\r\n}\r\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\r\n  const adapter = scale._adapter;\r\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\r\n  const last = ticks[ticks.length - 1].value;\r\n  let major, index;\r\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\r\n    index = map[major];\r\n    if (index >= 0) {\r\n      ticks[index].major = true;\r\n    }\r\n  }\r\n  return ticks;\r\n}\r\nfunction ticksFromTimestamps(scale, values, majorUnit) {\r\n  const ticks = [];\r\n  const map = {};\r\n  const ilen = values.length;\r\n  let i, value;\r\n  for (i = 0; i < ilen; ++i) {\r\n    value = values[i];\r\n    map[value] = i;\r\n    ticks.push({\r\n      value,\r\n      major: false\r\n    });\r\n  }\r\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\r\n}\r\nclass TimeScale extends Scale {\r\n  constructor(props) {\r\n    super(props);\r\n    this._cache = {\r\n      data: [],\r\n      labels: [],\r\n      all: []\r\n    };\r\n    this._unit = 'day';\r\n    this._majorUnit = undefined;\r\n    this._offsets = {};\r\n    this._normalized = false;\r\n    this._parseOpts = undefined;\r\n  }\r\n  init(scaleOpts, opts) {\r\n    const time = scaleOpts.time || (scaleOpts.time = {});\r\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\r\n    mergeIf(time.displayFormats, adapter.formats());\r\n    this._parseOpts = {\r\n      parser: time.parser,\r\n      round: time.round,\r\n      isoWeekday: time.isoWeekday\r\n    };\r\n    super.init(scaleOpts);\r\n    this._normalized = opts.normalized;\r\n  }\r\n  parse(raw, index) {\r\n    if (raw === undefined) {\r\n      return null;\r\n    }\r\n    return parse(this, raw);\r\n  }\r\n  beforeLayout() {\r\n    super.beforeLayout();\r\n    this._cache = {\r\n      data: [],\r\n      labels: [],\r\n      all: []\r\n    };\r\n  }\r\n  determineDataLimits() {\r\n    const options = this.options;\r\n    const adapter = this._adapter;\r\n    const unit = options.time.unit || 'day';\r\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\r\n    function _applyBounds(bounds) {\r\n      if (!minDefined && !isNaN(bounds.min)) {\r\n        min = Math.min(min, bounds.min);\r\n      }\r\n      if (!maxDefined && !isNaN(bounds.max)) {\r\n        max = Math.max(max, bounds.max);\r\n      }\r\n    }\r\n    if (!minDefined || !maxDefined) {\r\n      _applyBounds(this._getLabelBounds());\r\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\r\n        _applyBounds(this.getMinMax(false));\r\n      }\r\n    }\r\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\r\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\r\n    this.min = Math.min(min, max - 1);\r\n    this.max = Math.max(min + 1, max);\r\n  }\r\n  _getLabelBounds() {\r\n    const arr = this.getLabelTimestamps();\r\n    let min = Number.POSITIVE_INFINITY;\r\n    let max = Number.NEGATIVE_INFINITY;\r\n    if (arr.length) {\r\n      min = arr[0];\r\n      max = arr[arr.length - 1];\r\n    }\r\n    return {min, max};\r\n  }\r\n  buildTicks() {\r\n    const options = this.options;\r\n    const timeOpts = options.time;\r\n    const tickOpts = options.ticks;\r\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\r\n    if (options.bounds === 'ticks' && timestamps.length) {\r\n      this.min = this._userMin || timestamps[0];\r\n      this.max = this._userMax || timestamps[timestamps.length - 1];\r\n    }\r\n    const min = this.min;\r\n    const max = this.max;\r\n    const ticks = _filterBetween(timestamps, min, max);\r\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\r\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\r\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\r\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\r\n      : determineMajorUnit(this._unit);\r\n    this.initOffsets(timestamps);\r\n    if (options.reverse) {\r\n      ticks.reverse();\r\n    }\r\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\r\n  }\r\n  initOffsets(timestamps) {\r\n    let start = 0;\r\n    let end = 0;\r\n    let first, last;\r\n    if (this.options.offset && timestamps.length) {\r\n      first = this.getDecimalForValue(timestamps[0]);\r\n      if (timestamps.length === 1) {\r\n        start = 1 - first;\r\n      } else {\r\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\r\n      }\r\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\r\n      if (timestamps.length === 1) {\r\n        end = last;\r\n      } else {\r\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\r\n      }\r\n    }\r\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\r\n    start = _limitValue(start, 0, limit);\r\n    end = _limitValue(end, 0, limit);\r\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\r\n  }\r\n  _generate() {\r\n    const adapter = this._adapter;\r\n    const min = this.min;\r\n    const max = this.max;\r\n    const options = this.options;\r\n    const timeOpts = options.time;\r\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\r\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\r\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\r\n    const hasWeekday = isNumber(weekday) || weekday === true;\r\n    const ticks = {};\r\n    let first = min;\r\n    let time, count;\r\n    if (hasWeekday) {\r\n      first = +adapter.startOf(first, 'isoWeek', weekday);\r\n    }\r\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\r\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\r\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\r\n    }\r\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\r\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\r\n      addTick(ticks, time, timestamps);\r\n    }\r\n    if (time === max || options.bounds === 'ticks' || count === 1) {\r\n      addTick(ticks, time, timestamps);\r\n    }\r\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\r\n  }\r\n  getLabelForValue(value) {\r\n    const adapter = this._adapter;\r\n    const timeOpts = this.options.time;\r\n    if (timeOpts.tooltipFormat) {\r\n      return adapter.format(value, timeOpts.tooltipFormat);\r\n    }\r\n    return adapter.format(value, timeOpts.displayFormats.datetime);\r\n  }\r\n  _tickFormatFunction(time, index, ticks, format) {\r\n    const options = this.options;\r\n    const formats = options.time.displayFormats;\r\n    const unit = this._unit;\r\n    const majorUnit = this._majorUnit;\r\n    const minorFormat = unit && formats[unit];\r\n    const majorFormat = majorUnit && formats[majorUnit];\r\n    const tick = ticks[index];\r\n    const major = majorUnit && majorFormat && tick && tick.major;\r\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\r\n    const formatter = options.ticks.callback;\r\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\r\n  }\r\n  generateTickLabels(ticks) {\r\n    let i, ilen, tick;\r\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n      tick = ticks[i];\r\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\r\n    }\r\n  }\r\n  getDecimalForValue(value) {\r\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\r\n  }\r\n  getPixelForValue(value) {\r\n    const offsets = this._offsets;\r\n    const pos = this.getDecimalForValue(value);\r\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const offsets = this._offsets;\r\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\r\n    return this.min + pos * (this.max - this.min);\r\n  }\r\n  _getLabelSize(label) {\r\n    const ticksOpts = this.options.ticks;\r\n    const tickLabelWidth = this.ctx.measureText(label).width;\r\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\r\n    const cosRotation = Math.cos(angle);\r\n    const sinRotation = Math.sin(angle);\r\n    const tickFontSize = this._resolveTickFontOptions(0).size;\r\n    return {\r\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\r\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\r\n    };\r\n  }\r\n  _getLabelCapacity(exampleTime) {\r\n    const timeOpts = this.options.time;\r\n    const displayFormats = timeOpts.displayFormats;\r\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\r\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\r\n    const size = this._getLabelSize(exampleLabel);\r\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\r\n    return capacity > 0 ? capacity : 1;\r\n  }\r\n  getDataTimestamps() {\r\n    let timestamps = this._cache.data || [];\r\n    let i, ilen;\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const metas = this.getMatchingVisibleMetas();\r\n    if (this._normalized && metas.length) {\r\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\r\n    }\r\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\r\n    }\r\n    return (this._cache.data = this.normalize(timestamps));\r\n  }\r\n  getLabelTimestamps() {\r\n    const timestamps = this._cache.labels || [];\r\n    let i, ilen;\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const labels = this.getLabels();\r\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\r\n      timestamps.push(parse(this, labels[i]));\r\n    }\r\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\r\n  }\r\n  normalize(values) {\r\n    return _arrayUnique(values.sort(sorter));\r\n  }\r\n}\r\nTimeScale.id = 'time';\r\nTimeScale.defaults = {\r\n  bounds: 'data',\r\n  adapters: {},\r\n  time: {\r\n    parser: false,\r\n    unit: false,\r\n    round: false,\r\n    isoWeekday: false,\r\n    minUnit: 'millisecond',\r\n    displayFormats: {}\r\n  },\r\n  ticks: {\r\n    source: 'auto',\r\n    major: {\r\n      enabled: false\r\n    }\r\n  }\r\n};\r\n\r\nfunction interpolate(table, val, reverse) {\r\n  let lo = 0;\r\n  let hi = table.length - 1;\r\n  let prevSource, nextSource, prevTarget, nextTarget;\r\n  if (reverse) {\r\n    if (val >= table[lo].pos && val <= table[hi].pos) {\r\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\r\n    }\r\n    ({pos: prevSource, time: prevTarget} = table[lo]);\r\n    ({pos: nextSource, time: nextTarget} = table[hi]);\r\n  } else {\r\n    if (val >= table[lo].time && val <= table[hi].time) {\r\n      ({lo, hi} = _lookupByKey(table, 'time', val));\r\n    }\r\n    ({time: prevSource, pos: prevTarget} = table[lo]);\r\n    ({time: nextSource, pos: nextTarget} = table[hi]);\r\n  }\r\n  const span = nextSource - prevSource;\r\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\r\n}\r\nclass TimeSeriesScale extends TimeScale {\r\n  constructor(props) {\r\n    super(props);\r\n    this._table = [];\r\n    this._minPos = undefined;\r\n    this._tableRange = undefined;\r\n  }\r\n  initOffsets() {\r\n    const timestamps = this._getTimestampsForTable();\r\n    const table = this._table = this.buildLookupTable(timestamps);\r\n    this._minPos = interpolate(table, this.min);\r\n    this._tableRange = interpolate(table, this.max) - this._minPos;\r\n    super.initOffsets(timestamps);\r\n  }\r\n  buildLookupTable(timestamps) {\r\n    const {min, max} = this;\r\n    const items = [];\r\n    const table = [];\r\n    let i, ilen, prev, curr, next;\r\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\r\n      curr = timestamps[i];\r\n      if (curr >= min && curr <= max) {\r\n        items.push(curr);\r\n      }\r\n    }\r\n    if (items.length < 2) {\r\n      return [\r\n        {time: min, pos: 0},\r\n        {time: max, pos: 1}\r\n      ];\r\n    }\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      next = items[i + 1];\r\n      prev = items[i - 1];\r\n      curr = items[i];\r\n      if (Math.round((next + prev) / 2) !== curr) {\r\n        table.push({time: curr, pos: i / (ilen - 1)});\r\n      }\r\n    }\r\n    return table;\r\n  }\r\n  _getTimestampsForTable() {\r\n    let timestamps = this._cache.all || [];\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const data = this.getDataTimestamps();\r\n    const label = this.getLabelTimestamps();\r\n    if (data.length && label.length) {\r\n      timestamps = this.normalize(data.concat(label));\r\n    } else {\r\n      timestamps = data.length ? data : label;\r\n    }\r\n    timestamps = this._cache.all = timestamps;\r\n    return timestamps;\r\n  }\r\n  getDecimalForValue(value) {\r\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const offsets = this._offsets;\r\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\r\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\r\n  }\r\n}\r\nTimeSeriesScale.id = 'timeseries';\r\nTimeSeriesScale.defaults = TimeScale.defaults;\r\n\r\nvar scales = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nCategoryScale: CategoryScale,\r\nLinearScale: LinearScale,\r\nLogarithmicScale: LogarithmicScale,\r\nRadialLinearScale: RadialLinearScale,\r\nTimeScale: TimeScale,\r\nTimeSeriesScale: TimeSeriesScale\r\n});\r\n\r\nconst registerables = [\r\n  controllers,\r\n  elements,\r\n  plugins,\r\n  scales,\r\n];\r\n\r\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\r\n"]},"metadata":{},"sourceType":"module"}